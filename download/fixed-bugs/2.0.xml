<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="5.0.3"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
>

    <bug>
          <bug_id>549628</bug_id>
          
          <creation_ts>2019-07-29 07:51:50 -0400</creation_ts>
          <short_desc>[EOL] Long numerical constants produce string parsing exceptions</short_desc>
          <delta_ts>2019-08-16 10:50:12 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Antonio Garcia-Dominguez">agarcdomi</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">agarcdomi</assigned_to>
          <cc>agarcdomi</cc>
    
    <cc>dkolovos</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3057362</commentid>
    <comment_count>0</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2019-07-29 07:51:50 -0400</bug_when>
    <thetext>Long integer constants currently require the &quot;L&quot; suffix, otherwise they fail to parse with a NumberFormatException. This is technically correct, but it is somewhat annoying for new users and it could be better handled by just trying to parse it as a Long value before giving up. Example thread here:

https://www.eclipse.org/forums/index.php/t/1099922/

Before I make a change, do you envision any potential breakage from this? In theory it should not change existing behaviour, and it would make more code Just Work :-).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3061324</commentid>
    <comment_count>1</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2019-08-16 10:50:12 -0400</bug_when>
    <thetext>Pushed implementation in e4febe221 and added some tests in 5080cde2f. The code in IntegerLiteral has two changes:

* If the literal is longer than 10 chars (Integer.MAX_VALUE is 2,147,483,647 or 10 decimal digits), it will be parsed as a Long straight away, as if it had the &quot;l&quot; suffix.

* If the literal fails to parse as an Integer with a NumberFormatException, it will fall back to parsing as a Long. It&apos;d be better if the user just tagged the value with &quot;l&quot;, but this should improve the usability of EOL for some corner cases.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>549729</bug_id>
          
          <creation_ts>2019-08-01 11:38:12 -0400</creation_ts>
          <short_desc>[EMC] Make models AutoCloseable</short_desc>
          <delta_ts>2019-08-16 09:56:51 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Antonio Garcia-Dominguez">agarcdomi</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">agarcdomi</assigned_to>
          <cc>agarcdomi</cc>
    
    <cc>dkolovos</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3058130</commentid>
    <comment_count>0</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2019-08-01 11:38:12 -0400</bug_when>
    <thetext>Kostas ran into an interesting bug in his code, which was basically due to the fact that he did not dispose() his models properly when an exception was thrown from his EGL/EGX script. This resulted in odd problems involving the CachedResourceSet, which had a stale copy of the model.

Using try..finally solved the issue, but I think we could cover it even better if we made IModel extend AutoCloseable and provide some sort of default implementation.

In theory, this should not break any existing code, as we would just be adding a default close() implementation that would call dispose().

Thoughts?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3058159</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-08-01 15:29:24 -0400</bug_when>
    <thetext>Sounds reasonable to me!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3061309</commentid>
    <comment_count>2</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2019-08-16 09:56:51 -0400</bug_when>
    <thetext>Pushed implementation in 9ef9b162b.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>560746</bug_id>
          
          <creation_ts>2020-03-03 13:59:49 -0500</creation_ts>
          <short_desc>[EOL] Use LinkedHashSet in .closure to improve performance</short_desc>
          <delta_ts>2020-03-05 12:59:39 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Antonio Garcia-Dominguez">agarcdomi</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">agarcdomi</assigned_to>
          <cc>dkolovos</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3144585</commentid>
    <comment_count>0</comment_count>
      <attachid>281991</attachid>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2020-03-03 13:59:49 -0500</bug_when>
    <thetext>Created attachment 281991
Proposed changes to ClosureOperation

I noticed today that our slowest running test in Hawk was spending most of its time doing a .closure over the contents of an element. Particularly, it was spending a lot of time doing the .contains call within the ClosureOperation.

Looking at the code, it appears that internally it uses an ArrayList to build up the results of the closure. This is bad for the performance of .contains, as it will need to do a linear scan of the collection to find potential duplicates. This part of .closure will be O(nÂ²) over n elements, where it could easily be much lower than that with an actual hashing set implementation.

If we wanted to preserve the sequence of elements, we could use a LinkedHashSet instead. We can also make the minor optimisation of creating immutable singleton lists for the recursive calls, which should use slightly less resources than Arrays.asList.

One detail: current callers of .closure (e.g. our own tests) expect it to return a Sequence. In order to prevent breaking existing EOL code, we will still need to return an ArrayList, but we can do that right at the end once the set has caught all the duplicates for us.

I have attached a patch with the intended changes. Let me know if they look good and I&apos;ll merge them into master.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3144593</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-03-03 14:19:59 -0500</bug_when>
    <thetext>Thanks Antonio - the proposed patch looks fine to me.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3145163</commentid>
    <comment_count>2</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2020-03-05 12:59:39 -0500</bug_when>
    <thetext>Merged into master in ed8a159f.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>281991</attachid>
            <date>2020-03-03 13:59:49 -0500</date>
            <delta_ts>2020-03-03 13:59:49 -0500</delta_ts>
            <desc>Proposed changes to ClosureOperation</desc>
            <filename>0001-ClosureOperation-use-LinkedHashSet-internally-during.patch</filename>
            <type>text/plain</type>
            <size>4148</size>
            <attacher name="Antonio Garcia-Dominguez">agarcdomi</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>488706</bug_id>
          
          <creation_ts>2016-02-29 11:07:18 -0500</creation_ts>
          <short_desc>[EOL] Launch configurations do not honor &quot;Input File&quot;/&quot;Output File&quot; in the Common tab</short_desc>
          <delta_ts>2020-04-12 08:44:23 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Antonio Garcia-Dominguez">agarcdomi</reporter>
          <assigned_to name="Horacio Hoyos">arcanefoam</assigned_to>
          <cc>agarcdomi</cc>
    
    <cc>arcanefoam</cc>
    
    <cc>dkolovos</cc>
    
    <cc>sinadoom</cc>
          
          <qa_contact name="Horacio Hoyos">arcanefoam</qa_contact>
          <votes>1</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2677071</commentid>
    <comment_count>0</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2016-02-29 11:07:18 -0500</bug_when>
    <thetext>Kostas tried to send the output of an EOL script to a file with the &quot;Output File&quot; option in the &quot;Common&quot; tab of the launch configuration, and it wouldn&apos;t produce any files. This option is stored in the .launch file with the name specified in the IDebugUIConstants#ATTR_CAPTURE_STDIN_FILE constant.

Looking at this, it seems we do not handle this field at all in our EclipseContextManager: loadIo always sets the PrintStreams to the EpsilonConsole variants, no matter what. Perhaps we should change it so when this field is used, we install a TeePrintStream of some sorts that writes both to the file and to the standard Epsilon console.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2984270</commentid>
    <comment_count>1</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-10-05 11:39:17 -0400</bug_when>
    <thetext>Please see hhoyos/488706 for a working implementation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2984289</commentid>
    <comment_count>2</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-10-05 13:33:32 -0400</bug_when>
    <thetext>For inputfile a similar approach can be taken. The question that pops to my mind is what would an &quot;inputfile&quot; represent in an ExL context... additional parameters?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2984400</commentid>
    <comment_count>3</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2018-10-06 06:10:18 -0400</bug_when>
    <thetext>There are different ways to think about it, but standard input is not even defined in the ExL languages. Would it make sense to have those automatically answer prompts from System.user.prompt, instead? This is how stdin is usually handled in traditional languages.

We don&apos;t need that TeePrintStream class, I think. If the output is redirected to a file, then that&apos;s it: it should be redirected there. We can use a standard PrintStream but just plugged to the appropriate FileOutputStream.

Otherwise we&apos;d have to pass that TeePrintStream by IP Review and add those copyright messages to all Epsilon distributions, only for a single little class.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2984488</commentid>
    <comment_count>4</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-10-07 05:17:36 -0400</bug_when>
    <thetext>Inserting the prompts would definitely be interesting. It will require some bit of extra work though. 

The TeePrintStream is needed because the output of all streams (info, debug, error, etc.) is directed both to the console and to the file (at least that is how the Java console and launcher work).

I agree on the IP hassle, but I think is important to acknowledge the origin of the idea.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2984492</commentid>
    <comment_count>5</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2018-10-07 06:14:18 -0400</bug_when>
    <thetext>As far as I can tell, TeePrintStream is a straightforward wrapper; unless I&apos;m missing anything I can&apos;t see much IP to acknowledge here.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2984945</commentid>
    <comment_count>6</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-10-09 06:53:47 -0400</bug_when>
    <thetext>I did some code clean up. I would vote for merging this into master.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2993349</commentid>
    <comment_count>7</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2018-11-16 09:16:44 -0500</bug_when>
    <thetext>Sounds good to me, please go ahead if you have not yet!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3002556</commentid>
    <comment_count>8</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-12-14 09:04:53 -0500</bug_when>
    <thetext>Changes added with commit 075c6592262a2daaa48f6673580db020913c8fe3.

This only fixes the output file part, so not sure if we should close this and reopen when someone requires to input part.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3002586</commentid>
    <comment_count>9</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2018-12-14 10:14:54 -0500</bug_when>
    <thetext>I think we can close it for now, with your caveat. We will open a new request if people need to feed an EOL script from stdin, for instance.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154548</commentid>
    <comment_count>10</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-12 08:39:00 -0400</bug_when>
    <thetext>We should merge in the changes to master from hhoyos/488706</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154550</commentid>
    <comment_count>11</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-12 08:44:23 -0400</bug_when>
    <thetext>My bad, doing git branch --contains &lt;commid id&gt; showed this to be absent, but the changes have been merged in. Marking as fixed (please delete the branch :).</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>540424</bug_id>
          
          <creation_ts>2018-10-24 06:19:59 -0400</creation_ts>
          <short_desc>InMemoryEmfModel replaces the existing ResourceFactoryRegistry</short_desc>
          <delta_ts>2020-04-06 17:56:23 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Horacio Hoyos">arcanefoam</reporter>
          <assigned_to name="Horacio Hoyos">arcanefoam</assigned_to>
          <cc>arcanefoam</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2988098</commentid>
    <comment_count>0</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-10-24 06:19:59 -0400</bug_when>
    <thetext>Expected behaviour: The ResourceSet of a Resource should not be modified when using the Resource for an InMemoryEmfModel

ActualBehaviour: The ResourceSet of the Resource used with an InMemoryEmfModel is modified; in particular, the resource factory register is modified removing all existing uri-&gt;package and extension-&gt;factory mappings. 

Cause:
During initialisation, the InMemoryEmfModel replaces the ResourceFactoryRegistry with the global one (line 68):

...
// If there is no ResourceSet we cannot register or call the resource creation factory
if(modelImpl.getResourceSet() != null) {
  modelImpl.getResourceSet()
    .setResourceFactoryRegistry(Resource.Factory.Registry.INSTANCE);
}
...


I am guessing form the comment that the null check should be against the resourceFactoryRegister not against the ResourceSet.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2988102</commentid>
    <comment_count>1</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-10-24 06:36:48 -0400</bug_when>
    <thetext>That conditional should be removed completely. The nature of an InMemoryEmfModel is that the resource has already been loaded and as a result there is no need for a factory.

Further, given that a Resource must be created from a ResourceSet the absence of one should not be &quot;fixed&quot; by us, it should be an exception (i.e. IllegalState). This will effectively delegate the responsibility of the Resource instantiation/loading to the resource owner. I am assuming here that this type of model is always used for programatic execution.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3089820</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-10-21 18:27:15 -0400</bug_when>
    <thetext>I have fixed the conditional to check for the ResourceFactoryRegistry first before replacing in commit 29672d86d02e127b647b34f9bd8c16fea2a686cc. Is this enough to mark as resolved?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3100950</commentid>
    <comment_count>3</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2019-11-26 10:28:20 -0500</bug_when>
    <thetext>I guess it is an initial solution.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>534358</bug_id>
          
          <creation_ts>2018-05-04 06:44:28 -0400</creation_ts>
          <short_desc>Proposal to change Cached Model addToCache and removeFromCache methods</short_desc>
          <delta_ts>2018-11-11 18:11:05 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>541009</dup_id>
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Beatriz Sanchez">basp91</reporter>
          <assigned_to name="Beatriz Sanchez">basp91</assigned_to>
          <cc>arcanefoam</cc>
    
    <cc>dkolovos</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2945312</commentid>
    <comment_count>0</comment_count>
    <who name="Beatriz Sanchez">basp91</who>
    <bug_when>2018-05-04 06:44:28 -0400</bug_when>
    <thetext>At the very end of this report are two methods from the `org.eclipse.epsilon.eol.models.CachedModel` class: `addToCache` and `removeFromCache`.

When we call `Type.all` the method that is called is `getAllOfKind(&quot;Type&quot;)` which if caching is enabled, does the following:

============================================
// check if the key is in the list of known keys
if (!cachedTypes.contains(key)) {
	// add the types from model to multimap
	typeCache.putAll(key, getAllOfTypeFromModel(type));
	// add the key to known keys
	cachedTypes.add(key);
}
============================================

where `cachedTypes` is a list of keys and `typeCache` is the Multimap property with all the instances.

The problem with the functions below happens when we call for `Type.all` and the list was empty. When we call `if (typeCache.containsKey(typeCacheKey)) { ... }` or `if (kindCache.containsKey(kindCacheKey)) { ... }` we&apos;re not checking the list of keys but rather the multimap itself. Since the list of the key elements is empty, containsKey returns false although we have the key in the list of keys and therefore we never add the new element to the list.

============================================
public boolean containsKey(K key) {
	return !(valueStoreFor(key).isEmpty());
}
private Collection&lt;V&gt; valueStoreFor(K key) {
	return storage.containsKey(key) ? storage.get(key) : new LinkedList&lt;V&gt;();
}
============================================

If the `addToCache` method and it is the first time we&apos;re creating that type of element, what I would expect this function to do is to check that the key exists in the list of keys and if it doesn&apos;t then add the key to the list and then add the instance to the empty list of instances or apend it to a non empty one. Otherwise the containsKey returns false always because if there is nothing in the storage.

My proposal would be to replace

============================================
if (typeCache.containsKey(typeCacheKey)) {
	typeCache.put(typeCacheKey, instance);
} 
============================================

with this

============================================
if (!cachedTypes.contains(typeCacheKey)) {
	typeCache.put(typeCacheKey, instance);
	cachedTypes.add(typeCacheKey);
} elseÂ {
	typeCache.get(typeCacheKey).add(instance);
}
============================================

and similar for kinds and for the removeFromCache method.

============================================
// Add to Cache Method			
============================================
protected void addToCache(String type, ModelElementType instance) throws EolModelElementTypeNotFoundException {
	if (allContentsAreCached) {
		allContentsCache.add(instance);
	}

	Object typeCacheKey = getCacheKeyForType(type);
	if (typeCache.containsKey(typeCacheKey)) {
		typeCache.put(typeCacheKey, instance);
	}

	for (String kind : getAllTypeNamesOf(instance)) {
		Object kindCacheKey = getCacheKeyForType(kind);
		if (kindCache.containsKey(kindCacheKey)) {
			kindCache.put(kindCacheKey, instance);
		}
	}
}
============================================
// Remove from Cache Method			
============================================
protected void removeFromCache(ModelElementType instance) throws EolModelElementTypeNotFoundException {
	if (allContentsAreCached) {
		allContentsCache.remove(instance);
	}

	final Object typeCacheKey = getCacheKeyForType(getTypeNameOf(instance));
	if (typeCache.containsKey(typeCacheKey)) {
		typeCache.remove(typeCacheKey, instance);
	}

	for (String kind : getAllTypeNamesOf(instance)) {
		final Object kindCacheKey = getCacheKeyForType(kind);
		if (kindCache.containsKey(kindCacheKey)) {
			kindCache.remove(kindCacheKey, instance);
		}
	}
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2945386</commentid>
    <comment_count>1</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-05-04 09:43:32 -0400</bug_when>
    <thetext>Hi Betty,

Thanks for the detailed report. Since Cached model is the base for many of the EMC models I suggest you first put in place a couple of JUnit tests as regression tests. For this your initial set of tests should test the behaviour as is (i.e. without the corner case you encountered). With this in place, continue to add a couple of test cases that will exhibit this corner case, as a result this new tests should fail with the current implementation. Then we can add you proposed fixes an make sure everything works ok.

Since it is not feasible to add this tests to all existing EMC drivers, I would suggest creating a special model that extends the Cached model and only provides implementations for the methods of interest.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2947027</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2018-05-11 09:59:51 -0400</bug_when>
    <thetext>If we wanted to change the code as little as possible, replacing 

public boolean containsKey(K key) {
  return !(valueStoreFor(key).isEmpty());
}

which doesn&apos;t look right, with 

public boolean containsKey(K key) {
  return storage.containsKey(key);
}

in Multimap should be sufficient. However, making this change causes two unit tests to fail but these specifically test for the current (wrong, I think) behaviour of containsKey. Given that I&apos;m not the original author of CachedModel I don&apos;t have enough confidence to just delete the two tests, so I agree with Horacio: we&apos;ll need to write a few more tests to guard against a potential regression.

Betty: would you be happy to take the lead on this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2947028</commentid>
    <comment_count>3</comment_count>
    <who name="Beatriz Sanchez">basp91</who>
    <bug_when>2018-05-11 10:16:31 -0400</bug_when>
    <thetext>Sure, I&apos;ll work on the fix and test cases.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2991842</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2018-11-11 18:11:05 -0500</bug_when>
    <thetext>Unless I&apos;m mistaken, this and Bug 541009 are closely related and should now both be fixed.

*** This bug has been marked as a duplicate of bug 541009 ***</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>549629</bug_id>
          
          <creation_ts>2019-07-29 07:56:17 -0400</creation_ts>
          <short_desc>Simulink Model Type not available when creating new runtime configuration</short_desc>
          <delta_ts>2019-12-04 04:40:52 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Justin Cooper">justin</reporter>
          <assigned_to name="Beatriz Sanchez">basp91</assigned_to>
          <cc>basp91</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3057363</commentid>
    <comment_count>0</comment_count>
      <attachid>279422</attachid>
    <who name="Justin Cooper">justin</who>
    <bug_when>2019-07-29 07:56:17 -0400</bug_when>
    <thetext>Created attachment 279422
Screenshot showing types of model available

When creating a new EOL runtime configuration, I tried to add a Simulink model. The Simulink model, however, doesnât appear in the list of models to add. See attached screenshot. I am using the latest interim version of Epsilon 1.6.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>279422</attachid>
            <date>2019-07-29 07:56:17 -0400</date>
            <delta_ts>2019-07-29 07:56:17 -0400</delta_ts>
            <desc>Screenshot showing types of model available</desc>
            <filename>screenshot.png</filename>
            <type>image/png</type>
            <size>83440</size>
            <attacher name="Justin Cooper">justin</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>310248</bug_id>
          
          <creation_ts>2010-04-23 04:55:40 -0400</creation_ts>
          <short_desc>Eugenia phantom nodes in self-loop containments</short_desc>
          <delta_ts>2020-04-09 17:48:18 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Juan de Lara">Juan.deLara</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>oskarvanrest</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1719681</commentid>
    <comment_count>0</comment_count>
    <who name="Juan de Lara">Juan.deLara</who>
    <bug_when>2010-04-23 04:55:40 -0400</bug_when>
    <thetext>Decorating a class which contains instances of such class with the phantom attribute, does not seem to work. In the example on the website, a slightly
different situation is shown, where the container and containee are two different classes, but does not work if they are the same class.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2090901</commentid>
    <comment_count>1</comment_count>
    <who name="Oskar van Rest">oskarvanrest</who>
    <bug_when>2012-04-08 09:15:55 -0400</bug_when>
    <thetext>Hi, 

I&apos;m experiencing the same problem and really hope this can be solved. I saw that the bug has been around for quite a while and that no solutions have been proposed:
http://www.eclipse.org/forums/index.php/t/185471/
http://www.eclipse.org/forums/index.php/m/758992/

Since this is a GMF bug (right?) and not an EuGENia bug, I should probably file a new bug report under &quot;GMF-Tooling&quot; right? (I&apos;m quite new to this)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2240781</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2013-04-08 04:32:03 -0400</bug_when>
    <thetext>Emfatic metamodel to reproduce the problem:

@namespace(uri=&quot;phantomloop&quot;, prefix=&quot;&quot;)
package phantomloop;

@gmf.diagram
class Model {
	val Object[*] objects;	
}

@gmf.node(label=&quot;name&quot;, phantom=&quot;true&quot;)
class Object {
	attr String name;
	@gmf.link(label=&quot;s&quot;)
	val Object[*] subobjects; 
}

The code is generated without problems but then doesn&apos;t work properly. [1] suggests that to fix this, one needs to modify the generated GMF code but provides no further pointers.

[1] http://www.eclipse.org/forums/index.php/t/185471/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154191</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-09 17:48:18 -0400</bug_when>
    <thetext>Closing as invalid since this seems to be a GMF bug.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>369383</bug_id>
          
          <creation_ts>2012-01-23 08:25:54 -0500</creation_ts>
          <short_desc>Validating multiple dependent ecore files fails</short_desc>
          <delta_ts>2018-12-17 06:08:44 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jack Sleuters">jack.sleuters</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>arcanefoam</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2054354</commentid>
    <comment_count>0</comment_count>
      <attachid>209910</attachid>
    <who name="Jack Sleuters">jack.sleuters</who>
    <bug_when>2012-01-23 08:25:54 -0500</bug_when>
    <thetext>Created attachment 209910
Example code showing the bug

I&apos;m trying the following on 4 large ecore files, but for sake of simplicity I will explain the problem with a small example.


I&apos;ve created two ecore files which depend on each other:

ecore2 depends on ecore1

To be able to reference elements of ecore1 from ecore2, in ecore2 I used &quot;Load resource...&quot;. The ecore models look as follows:

ecore1.ecore:

ecore1 (namespaceURI ecore1)
    EClass ecore1


ecore2.ecore:

ecore2 (namespaceURI ecore2)
    EClass ecore2
    EClass system
        EReference ecore1: Ecore1 (0 to many, containment true)
        EReference ecore2: Ecore2 (0 to many, containment true)

I created genmodels for both ecore files and generated all model, edit, and editor code for both genmodels. 

I also created a new plugin project for the validation part. In the manifest, I added &quot;org.eclipse.epsilon.evl.emf.validation (0.9.1)&quot; and &quot;org.eclipse.ui.ide (3.7.0)&quot;. Furthermore, I added an &quot;org.eclipse.epsilon.ev.emf.validation&quot; extension with a &quot;constraintsBinding&quot;. I set the namespaceURI to &quot;ecore2&quot; because that contains all elements of both ecore models (remember: ecore2 depends on ecore1). The &quot;constraints&quot; point to a .evl file in which, for each EClass in both ecores, a critique with a &quot;check : false&quot; is stated.

After that I run as an eclipse application and create the following model:


System (from ecore2)
    Ecore1 (from ecore1)
    Ecore2 (from ecore2)


Now, I right click the &quot;System&quot; node and choose &quot;validate&quot;. The &quot;Validation Problems&quot; dialog is shown and I only see the critique for Ecore2 being shown. I expected to also see the critique for Ecore1.


I already tried the following:

1. In the &quot;Extension Element Details&quot; of the &quot;constraintsBinding&quot; element, I changed the namespaceURI to ecore1 and run as eclipse application. Right click &quot;System&quot; and press validate. This time a NullPointerException is raised at EvlValidator.java:76)

2. In the &quot;All Extensions&quot; add another &quot;constraintsBinding&quot; this time with namespaceURI &quot;ecore1&quot; using the same constraints file. Run as an eclipse appplication, right click &quot;System&quot; and press validate. This time again NullPointerException is raised at EvlValidator.java:76).

3. I created two validation plugin projects one for ecore1 and one for ecore2. However, again the same NullPointerException was raised.



So finally my question: How do I get this to work?



I added my example code as an attachment.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3002956</commentid>
    <comment_count>1</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-12-17 06:08:44 -0500</bug_when>
    <thetext>When a model has cross-references to elements of other metamodel, we need to inform the EVL validator about this. The extension point provides the additionalNamespaceURI tag to do this:

   &lt;extension
         point=&quot;org.eclipse.epsilon.evl.emf.validation&quot;&gt;
      &lt;constraintsBinding
            constraints=&quot;validation/multi-ecore.evl&quot;
            namespaceURI=&quot;http://www.example.org/ecore2&quot;&gt;
            &lt;additionalNamespaceURI
                  namespaceURI=&quot;http://www.example.org/ecore1&quot;&gt;
            &lt;/additionalNamespaceURI&gt;
      &lt;/constraintsBinding&gt;
   &lt;/extension&gt;

However, there is a bug because the additional namespace URIs are not being used to register the EVl validator against the EMF validation registry.

This has been fixed in fe47cccfbe1724bfc762063995e11e801ce74f19 and is available in the interim (1.6) build.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>209910</attachid>
            <date>2012-01-23 08:25:54 -0500</date>
            <delta_ts>2012-01-23 08:25:54 -0500</delta_ts>
            <desc>Example code showing the bug</desc>
            <filename>validatingmultiecore.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>256358</size>
            <attacher name="Jack Sleuters">jack.sleuters</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>383442</bug_id>
          
          <creation_ts>2012-06-25 09:48:40 -0400</creation_ts>
          <short_desc>Implementing global Variables in EOL Modules by use of &quot;init&quot;-Block</short_desc>
          <delta_ts>2020-04-30 08:32:43 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Lukas Baron">baron_lukas</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>dkolovos</cc>
    
    <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2128630</commentid>
    <comment_count>0</comment_count>
    <who name="Lukas Baron">baron_lukas</who>
    <bug_when>2012-06-25 09:48:40 -0400</bug_when>
    <thetext>Build Identifier: 

As discussed in forum-thread:
http://www.eclipse.org/forums/index.php/t/365793/

some programming-scenarios would require the opportunity to implement global variables not only in the main eol-module, but in imported eol-scripts too.

For clean-code-purposes, it is proposed to introduce a new optional block for eol-programs, which may be named &quot;init&quot;, with access to the global scope.
These blocks will be executed once a module is beeing loaded.

Reproducible: Always</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154181</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-09 17:22:53 -0400</bug_when>
    <thetext>*** Bug 543549 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3159211</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-29 19:09:25 -0400</bug_when>
    <thetext>A backwards-compatible solution would be to use ERL for this. I&apos;ve made ErlModule instantiable and it now has a grammar, just not any DT plugin (no editor etc.). We could execute the pre block, re-using the context so that the variables are available. Since an ERL module can also declare operations, importing will work as usual. We will just need to do an instanceof check when we import and if it&apos;s ERL, execute the pre block. Does this sound like a good solution?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3159387</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-30 06:18:27 -0400</bug_when>
    <thetext>If we do this at the ERL level, how would it work for EOL programs importing other EOL programs?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3159392</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-30 06:29:55 -0400</bug_when>
    <thetext>Hmm good point. I was thinking it would be as simple as renaming the file extension from .eol to .erl and putting the code in the pre block. To be clear:

A.eol
var x = 42;
...

A.erl
pre {
   var x = 42;
}

B.eol
import A.erl
assertEquals(x, 42);

So basically we&apos;re saying that if you want to re-use state from imports, change your library extension to .erl and put the code in pre block.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3159414</commentid>
    <comment_count>5</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-30 07:23:39 -0400</bug_when>
    <thetext>(In reply to Sina Madani from comment #4)
&gt; So basically we&apos;re saying that if you want to re-use state from imports,
&gt; change your library extension to .erl and put the code in pre block.

I can see how this would make our life easier, but from a user&apos;s point of view that could look odd. To be honest, I&apos;m not particularly keen on global variables distributed across import files as they can unintentionally shadow each other. If global variables are used to cache expensive queries, this can be achieved using @cached operations. If mutation of global variables across many operations is required, then the design of the program probably needs rethinking.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3159415</commentid>
    <comment_count>6</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-30 07:31:44 -0400</bug_when>
    <thetext>Good point, I agree that we shouldn&apos;t be encouraging imperative programming, but to have utility functionality contained in side-effect-free (i.e. functional) operations. Shall we close this as &quot;WONTFIX&quot;?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3159443</commentid>
    <comment_count>7</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-30 08:32:43 -0400</bug_when>
    <thetext>Yes - I think so. Closing as WONTFIX.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>394975</bug_id>
          
          <creation_ts>2012-11-23 09:34:00 -0500</creation_ts>
          <short_desc>Mixing fine-grained profiling in run-configuration with custom profiling calls produces internal error</short_desc>
          <delta_ts>2020-04-18 07:19:42 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Joost van Pinxten">joostvanpinxten</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2187003</commentid>
    <comment_count>0</comment_count>
    <who name="Joost van Pinxten">joostvanpinxten</who>
    <bug_when>2012-11-23 09:34:00 -0500</bug_when>
    <thetext>It is possible to let Epsilon automatically profile the application by using the options in the run-configuration; I set all options to checked, to check whether that information is practically usable to me.

However, when trying to mix the fine-grained information with my own profiler calls, the behaviour of the profiler start() and stop() methods changes: it apparently expects a stop() call with different parameters. I think this is not correct.

See attached zip for a minimal example (using Juno SR1, Epsilon 1.0.0)

Internal error: java.lang.IllegalStateException: Attempted to stop profiling target BLOCK [1:13] while the active one is test
	at org.eclipse.epsilon.profiling.Profiler.stop[Profiler.java:88]
	at org.eclipse.epsilon.profiling.ProfilingExecutionListener.finishedExecuting[ProfilingExecutionListener.java:30]
	at org.eclipse.epsilon.eol.execute.ExecutorFactory.executeAST[ExecutorFactory.java:243]
	at org.eclipse.epsilon.eol.EolModule.execute[EolModule.java:43]
	at org.eclipse.epsilon.eol.dt.launching.EpsilonLaunchConfigurationDelegate.launch[EpsilonLaunchConfigurationDelegate.java:79]
	at org.eclipse.epsilon.eol.dt.launching.EpsilonLaunchConfigurationDelegate.launch[EpsilonLaunchConfigurationDelegate.java:56]
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch[LaunchConfiguration.java:855]
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch[LaunchConfiguration.java:704]
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch[DebugUIPlugin.java:1047]
	at org.eclipse.debug.internal.ui.DebugUIPlugin$8.run[DebugUIPlugin.java:1251]
	at org.eclipse.core.internal.jobs.Worker.run[Worker.java:53]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2187004</commentid>
    <comment_count>1</comment_count>
      <attachid>223914</attachid>
    <who name="Joost van Pinxten">joostvanpinxten</who>
    <bug_when>2012-11-23 09:34:33 -0500</bug_when>
    <thetext>Created attachment 223914
Minimal project which reproduces the bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2188430</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2012-11-28 08:16:42 -0500</bug_when>
    <thetext>Thanks for reporting this. This seems to be a tough one so I&apos;ll have to investigate further.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156368</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 07:19:42 -0400</bug_when>
    <thetext>After 8 years of inactivity it&apos;s fair to accept that fine-grained and custom profiling cannot be used together.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>223914</attachid>
            <date>2012-11-23 09:34:33 -0500</date>
            <delta_ts>2012-11-23 09:34:33 -0500</delta_ts>
            <desc>Minimal project which reproduces the bug.</desc>
            <filename>finegrainedprofiler.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>1162</size>
            <attacher name="Joost van Pinxten">joostvanpinxten</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>404724</bug_id>
          
          <creation_ts>2013-04-02 09:02:44 -0400</creation_ts>
          <short_desc>EOL allows redefinition of a variable with the same name</short_desc>
          <delta_ts>2020-04-01 19:35:18 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>Macintosh</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Ran Wei">ran.wei</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2238599</commentid>
    <comment_count>0</comment_count>
    <who name="Ran Wei">ran.wei</who>
    <bug_when>2013-04-02 09:02:44 -0400</bug_when>
    <thetext>EOL allows the following EOL module to be executed:

var a : String;
var a : Integer;
a = 6;
a.println();</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3151804</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-01 19:35:18 -0400</bug_when>
    <thetext>The specific instance of the bug reported is fixed in 0f07e97f2104ec05c6b97b86e25ca3f50e0627ae.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>410015</bug_id>
          
          <creation_ts>2013-06-06 00:30:53 -0400</creation_ts>
          <short_desc>Confusing syntax highlighing</short_desc>
          <delta_ts>2020-04-18 07:14:58 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows Vista</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ed Willink">ed</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2268963</commentid>
    <comment_count>0</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2013-06-06 00:30:53 -0400</bug_when>
    <thetext>In org.eclipse.epsilon.examples.egl.library/library2page.egl

the &quot;[*- List of books *]&quot; is not output text but has no distinctive background color

the for loop head and tail have a background color but the trailing &lt;CR&gt;&lt;LF&gt; is not copied to the output. Surely this should have a background color so that the user can predict what will contribute?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2283807</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2013-07-12 05:32:33 -0400</bug_when>
    <thetext>&gt; the &quot;[*- List of books *]&quot; is not output text but has no distinctive background color

Thought about this but adding another background colour hurts my eyes and using yellow again does not make markers ([*-...*]) stand out so I guess we&apos;ll need to stick with this until we find a better alternative...

&gt; the for loop head and tail have a background color but the trailing &lt;CR&gt;&lt;LF&gt; is not copied to the output. Surely this should have a background color so that the user can predict what will contribute?

I&apos;m not sure how we could colour &lt;CR&gt;&lt;LF&gt; given that it&apos;s invisible. Any thoughts would be really appreciated.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2283810</commentid>
    <comment_count>2</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2013-07-12 05:46:06 -0400</bug_when>
    <thetext>Xtend has a simple policy of foreground effects for syntax clarification and grey background for emitted text.

Xtend also has missing background on new lines (which are visible when the editor show whitespace characters option is enabled).

I presume that it&apos;s &apos;just&apos; a matter of including the NL characters within the StyledText range; and if that doesn&apos;t work, reporting a bug against StyledText for not showing background style on NL characters.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156367</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 07:14:58 -0400</bug_when>
    <thetext>Marking as fixed since we no longer use background colours for EGL syntax highlighting.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>416709</bug_id>
          
          <creation_ts>2013-09-06 06:39:16 -0400</creation_ts>
          <short_desc>ExtensionPointToolNativeTypeDelegate is in development tool plugin</short_desc>
          <delta_ts>2020-04-18 07:29:27 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Maarten Bezemer">maarten.bezemer</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>agarcdomi</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2303618</commentid>
    <comment_count>0</comment_count>
    <who name="Maarten Bezemer">maarten.bezemer</who>
    <bug_when>2013-09-06 06:39:16 -0400</bug_when>
    <thetext>Hello,

I am updating to version 1.1.0.
Since version 1.1.0 (?) all development tool related code is put in the &apos;dt&apos; plugins.
So I am removing the dependencies on the &apos;dt&apos; plugins, when I noticed the following:

I use the tools from a stand-alone setup, see

http://www.eclipse.org/epsilon/doc/articles/call-java-from-epsilon/

So I need to add them by using:

context.getNativeTypeDelegates().add(new ExtensionPointToolNativeTypeDelegate());


The ExtensionPointToolNativeTypeDelegate is put in the org.eclipse.epsilon.eol.dt plugin though.
This class should not be in the development tools plugin (IMHO), as it is also required for non-development usages.

Could you move it to a non-development plugin?

Regards,
  Maarten</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2316639</commentid>
    <comment_count>1</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2013-10-10 07:31:19 -0400</bug_when>
    <thetext>Well, we can&apos;t put it in the .engine plugins either, as those must be completely free of any dependencies on Eclipse.

I guess we could move the functionality to dt.tools or tools, but we would need to leave something in .dt for backwards compatibility (possibly with a @Deprecated annotation). Dimitris, what do you think?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156369</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 07:29:27 -0400</bug_when>
    <thetext>I realise that this response comes a few years too late but the extension point is mainly for the use of the DT. When running an Epsilon program from Java, developers can implement their own native type delegate (with very little effort) if the classpath-based one is not a good fit.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>417081</bug_id>
          
          <creation_ts>2013-09-12 08:22:47 -0400</creation_ts>
          <short_desc>Concurrency problem in EVL validation code</short_desc>
          <delta_ts>2020-04-18 15:04:47 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Maarten Bezemer">maarten.bezemer</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2305807</commentid>
    <comment_count>0</comment_count>
      <attachid>235420</attachid>
    <who name="Maarten Bezemer">maarten.bezemer</who>
    <bug_when>2013-09-12 08:22:47 -0400</bug_when>
    <thetext>Created attachment 235420
Patch to fix the concurrency problem

I have had problems with validating multiple models at the same time. This happens when I (quickly) switch to other editors (this triggers batch validation when the editor is created).

The problem occurs when 2 (for example) validations are active in different threads.
The problems lies in the fact that module is a class member of EvlValidator.

When one validation is finished it cleans up some resources:

module.getContext().dispose();
module.getContext().getModelRepository().dispose();

This causes the other validator to get into problems, meta-model elements are not found, NPEs, etc. Since its resources are disposed (by accident).

A simple solution is to make module into a regular variable, is it is only used in validate(Resource, Map&lt;Object, Object&gt;). This seems to fix my problems (although it is hard to debug concurrency issues, so I am not 100% sure).

But, I do not think it influences any current behaviour, so it should not be a problem to make module a regular variable.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2306630</commentid>
    <comment_count>1</comment_count>
    <who name="Maarten Bezemer">maarten.bezemer</who>
    <bug_when>2013-09-13 12:26:41 -0400</bug_when>
    <thetext>Hm... I still have this problem, so the patch does not seem to be sufficient...
I&apos;ll try to investigate it further (next week! :) )</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156451</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 15:04:47 -0400</bug_when>
    <thetext>As this has been open for a few years now and we don&apos;t have a way to reliably reproduce the reported behaviour, I&apos;m closing this as WONTFIX but please feel free to reopen.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>235420</attachid>
            <date>2013-09-12 08:22:47 -0400</date>
            <delta_ts>2013-09-12 08:22:47 -0400</delta_ts>
            <desc>Patch to fix the concurrency problem</desc>
            <filename>FixConcurencyProblem.patch</filename>
            <type>application/octet-stream</type>
            <size>989</size>
            <attacher name="Maarten Bezemer">maarten.bezemer</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>418074</bug_id>
          
          <creation_ts>2013-09-26 05:35:11 -0400</creation_ts>
          <short_desc>Execute existing validator first</short_desc>
          <delta_ts>2020-04-18 15:16:35 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Maarten Bezemer">maarten.bezemer</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2311007</commentid>
    <comment_count>0</comment_count>
      <attachid>235836</attachid>
    <who name="Maarten Bezemer">maarten.bezemer</who>
    <bug_when>2013-09-26 05:35:11 -0400</bug_when>
    <thetext>Created attachment 235836
Change order of added validators to the newly created CompositeEValidator

Hello,

It is a minor request, but it seems more elegant to me.

The existingValidator (most likely EObjectValidator) is added second to a newly created CompositeEValidator.
One would expect it to be created first.

The attached patch changes the order of the addition of the validators for the newly created CompositeEValidator.

Regards,
  Maarten</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156458</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 15:16:35 -0400</bug_when>
    <thetext>Fixed in a0edddfd7.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>235836</attachid>
            <date>2013-09-26 05:35:11 -0400</date>
            <delta_ts>2013-09-26 05:35:45 -0400</delta_ts>
            <desc>Change order of added validators to the newly created CompositeEValidator</desc>
            <filename>ExistingValidatorFirst.patch</filename>
            <type>text/plain</type>
            <size>592</size>
            <attacher name="Maarten Bezemer">maarten.bezemer</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>429300</bug_id>
          
          <creation_ts>2014-02-28 05:16:11 -0500</creation_ts>
          <short_desc>Unsigned jars</short_desc>
          <delta_ts>2020-04-07 21:50:24 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Adolfo Sanchez-Barbudo Herrera">adolfosbh</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2369665</commentid>
    <comment_count>0</comment_count>
      <attachid>240391</attachid>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh</who>
    <bug_when>2014-02-28 05:16:11 -0500</bug_when>
    <thetext>Created attachment 240391
Demonstrating screenshot

Hi Folks,

When installing Epsilon Core feature from the official releases repository, gives me some warning about installing unsigned jars.

Although the components can be successfully installed I&apos;d not have expected this warning from official Eclipse components.

Cheers,
Adolfo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3153502</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-07 21:50:24 -0400</bug_when>
    <thetext>We now sign JARs.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>240391</attachid>
            <date>2014-02-28 05:16:11 -0500</date>
            <delta_ts>2014-02-28 05:16:11 -0500</delta_ts>
            <desc>Demonstrating screenshot</desc>
            <filename>Capture.PNG</filename>
            <type>image/png</type>
            <size>88147</size>
            <attacher name="Adolfo Sanchez-Barbudo Herrera">adolfosbh</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>429848</bug_id>
          
          <creation_ts>2014-03-07 04:30:54 -0500</creation_ts>
          <short_desc>[Eugenia] Diagram code generation from headless ant build using epsilon.eugenia task</short_desc>
          <delta_ts>2020-04-18 06:45:50 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Shrikanth NC">nc_shrikanth</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>nc_shrikanth</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2372854</commentid>
    <comment_count>0</comment_count>
      <attachid>240632</attachid>
    <who name="Shrikanth NC">nc_shrikanth</who>
    <bug_when>2014-03-07 04:30:54 -0500</bug_when>
    <thetext>Created attachment 240632
.log as mentioned in stacktrace

There should be a clean way to generate all codes ( model, edit, test , diagram etc )
using emfactic file referred in an ant script ( in headless mode ).

Right now even after manually adding all dependencies. Running the ant script 

For example,

java -jar C:\eclipse\plugins\org.eclipse.equinox.launcher_1.3.0.v20130327-1440.jar -application org.eclipse.ant.core.antRunner -buildfile C:\epsilon\workspace\is\model\build.xml

Produces,

BUILD FAILED
C:\epsilon\workspace\is\model\build.xml:17: java.lang.IllegalStateException: Wor
kbench has not been created yet.
at org.eclipse.ui.PlatformUI.getWorkbench(PlatformUI.java:93)
at org.eclipse.epsilon.workflow.tasks.eugenia.EugeniaTask.executeImpl(Eu
geniaTask.java:139)
at org.eclipse.epsilon.workflow.tasks.EpsilonTask.execute(EpsilonTask.ja
va:40)
at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.jav
a:106)
at org.apache.tools.ant.Task.perform(Task.java:348)
at org.apache.tools.ant.Target.execute(Target.java:392)
at org.apache.tools.ant.Target.performTasks(Target.java:413)
at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExe
cutor.java:41)
at org.eclipse.ant.internal.core.ant.EclipseDefaultExecutor.executeTarge
ts(EclipseDefaultExecutor.java:32)
at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
at org.eclipse.ant.internal.core.ant.InternalAntRunner.run(InternalAntRu
nner.java:672)
at org.eclipse.ant.internal.core.ant.InternalAntRunner.run(InternalAntRu
nner.java:537)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.eclipse.ant.core.AntRunner.run(AntRunner.java:513)
at org.eclipse.ant.core.AntRunner.start(AntRunner.java:600)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandl
e.java:196)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runAppli
cation(EclipseAppLauncher.java:110)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(Ec
lipseAppLauncher.java:79)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja
va:354)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.ja
va:181)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
at org.eclipse.equinox.launcher.Main.run(Main.java:1450)
at org.eclipse.equinox.launcher.Main.main(Main.java:1426)

Total time: 1 second
An error has occurred. See the log file
C:\Users\shrikanth_n_c\workspace\.metadata\.log.


My guess epsilon.eugenia task is tightly coupled with eclipse dependencies ( IFile, Workspace, workbench etc)

Thanks,
Shrikanth NC</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2373361</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2014-03-08 09:03:58 -0500</bug_when>
    <thetext>Thanks for reporting this. You&apos;re right - Eugenia assumes a running Eclipse workbench. We could probably get rid of some Eclipse dependencies but I can&apos;t immediately see how we could produce a version that can run in headless mode given that eventually we need to call the GMF code generator (see lines 133-138 of [1])

[1] https://dev.eclipse.org/svnroot/modeling/org.eclipse.epsilon/trunk/plugins/org.eclipse.epsilon.workflow.eugenia/src/org/eclipse/epsilon/workflow/tasks/eugenia/EugeniaTask.java</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>240632</attachid>
            <date>2014-03-07 04:30:54 -0500</date>
            <delta_ts>2014-03-07 04:30:54 -0500</delta_ts>
            <desc>.log as mentioned in stacktrace</desc>
            <filename>.log</filename>
            <type>application/octet-stream</type>
            <size>66122</size>
            <attacher name="Shrikanth NC">nc_shrikanth</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>434295</bug_id>
          
          <creation_ts>2014-05-07 05:14:44 -0400</creation_ts>
          <short_desc>XML Model should use URI for model and XSD lcoation</short_desc>
          <delta_ts>2020-05-08 08:58:27 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>major</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Horacio Hoyos">arcanefoam</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>arcanefoam</cc>
    
    <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2397979</commentid>
    <comment_count>0</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2014-05-07 05:14:44 -0400</bug_when>
    <thetext>Currently the XSD model class uses absolute paths to locate the XML and XSD files. The current workspace is used as &quot;basePath&quot; for location, which cause files out side the workspace (for example git repositories) to generate a File Not found Exception.

The XML Model class should adopt a similar (or the same) mechanisms as the EMF Model and uses URI to locate files, making it possible to use &quot;platform:\&quot; authority to locate files in different locations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2398089</commentid>
    <comment_count>1</comment_count>
      <attachid>242793</attachid>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2014-05-07 08:39:37 -0400</bug_when>
    <thetext>Created attachment 242793
Fixes for XML Model and XML Model Configuration Dialog

Changed the XML model class to use PROPERTY_FILE_URI and PROPERTY_XSD_URI instead of file based. Copied functionality from Emf Model to provide support for legacy run configurations based on files. Changed the configuration dialog to replicate the behavior of the Emf Model one.  

This path also fixes bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=434203, by correctly invoking super.createGroups(control); in createGroups method. This had been removed and the Cached Button was null when trying to load the properties file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3155019</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-14 09:26:50 -0400</bug_when>
    <thetext>Any reason why this hasn&apos;t been merged into master? If not I propose we do it before next release (which will be very soon)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3155527</commentid>
    <comment_count>3</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2020-04-15 11:52:22 -0400</bug_when>
    <thetext>No idea..</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3162022</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-08 08:58:27 -0400</bug_when>
    <thetext>Fixed in e38a8b171cdac77b546717b4b4b085025b28fc1a. Didn&apos;t use Git since this is way out of sync with the current version but I tested it and it seems to be working.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>242793</attachid>
            <date>2014-05-07 08:39:37 -0400</date>
            <delta_ts>2014-05-07 08:39:37 -0400</delta_ts>
            <desc>Fixes for XML Model and XML Model Configuration Dialog</desc>
            <filename>epsilon.emc.emf.xml.patch</filename>
            <type>text/plain</type>
            <size>8232</size>
            <attacher name="Horacio Hoyos">arcanefoam</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>440438</bug_id>
          
          <creation_ts>2014-07-25 09:49:12 -0400</creation_ts>
          <short_desc>[Book] EMC IModel sectioning</short_desc>
          <delta_ts>2018-10-31 12:32:44 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Horacio Hoyos">arcanefoam</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>arcanefoam</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2432045</commentid>
    <comment_count>0</comment_count>
      <attachid>245386</attachid>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2014-07-25 09:49:12 -0400</bug_when>
    <thetext>Created attachment 245386
patch

Hi,

IMHO, sections 2.2, 2.3, 2.4, and 2.5, should be nested below section 2.1 as they describe the services provided by the IModel interface (described in section 2.1).
I have provided the patch that defines these sections as subsections.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2989633</commentid>
    <comment_count>1</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-10-31 12:32:44 -0400</bug_when>
    <thetext>Done</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>245386</attachid>
            <date>2014-07-25 09:49:12 -0400</date>
            <delta_ts>2014-07-25 09:49:12 -0400</delta_ts>
            <desc>patch</desc>
            <filename>Design.EMC.tex.patch</filename>
            <type>application/octet-stream</type>
            <size>2802</size>
            <attacher name="Horacio Hoyos">arcanefoam</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>441343</bug_id>
          
          <creation_ts>2014-08-07 08:45:09 -0400</creation_ts>
          <short_desc>Getting all the elements of one model using the one string that contains the id name of the model</short_desc>
          <delta_ts>2020-04-18 06:50:13 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Mahsa P">m_3panahande</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2436681</commentid>
    <comment_count>0</comment_count>
    <who name="Mahsa P">m_3panahande</who>
    <bug_when>2014-08-07 08:45:09 -0400</bug_when>
    <thetext>I want to get all the elements of one model. The name of my model is changeable in every run, so this can be a usable command that we could get all instances of the model like: 
&quot;X&quot;.allInstance();
thet X is the id name of the model.
Discussion related to this request can be seen:
https://www.eclipse.org/forums/index.php/t/796806/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156363</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 06:50:13 -0400</bug_when>
    <thetext>I realise that it&apos;s been a few years since this has been reported but for completeness, this can be achieved using the following statement:

System.context.modelRepository.models.at(0).getAllOfKind(&quot;X&quot;);</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>442540</bug_id>
          
          <creation_ts>2014-08-26 03:03:54 -0400</creation_ts>
          <short_desc>Accessing Java Enums from E*L</short_desc>
          <delta_ts>2020-04-13 08:45:50 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Jan Schumacher">jan.schumacher</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2443340</commentid>
    <comment_count>0</comment_count>
    <who name="Jan Schumacher">jan.schumacher</who>
    <bug_when>2014-08-26 03:03:54 -0400</bug_when>
    <thetext>It would be _nice_ to access Java Enums from E*L:

var logger = new Native(&quot;com.something.Logger&quot;)(&quot;com.something.Importer.class&quot;);
var level = Native(&quot;org.apache.log4j.Level&quot;);
logger.writeDebugMsg(level#DEBUG, &quot;in PRE&quot;);

Otherwise an additional warppng layer is required.

Also see: https://www.eclipse.org/forums/index.php/t/802157/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154672</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-13 08:45:50 -0400</bug_when>
    <thetext>Partially fixed in d52f85cc0b0482ef9d186c937027ea4bd3788b5f. Just need to make it work with # instead of . (dot)</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>459396</bug_id>
          
          <creation_ts>2015-02-08 18:19:52 -0500</creation_ts>
          <short_desc>Executable extension definition for &quot;class&quot; not found.</short_desc>
          <delta_ts>2020-04-18 02:27:14 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ed Willink">ed</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2515641</commentid>
    <comment_count>0</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2015-02-08 18:19:52 -0500</bug_when>
    <thetext>Using M5 and the Epsilon interim site, on start up I get the traces below.

(Why is Epsilon using EarlyStartUp; it is very undesirable, since it inflicts early costs when not in use.)

Unable to execute early startup code for the org.eclipse.ui.IStartup extension contributed by the &apos;org.eclipse.epsilon.emf.dt&apos; plug-in.

org.eclipse.core.runtime.CoreException: Executable extension definition for &quot;class&quot; not found.
	at org.eclipse.core.internal.registry.ConfigurationElement.throwException(ConfigurationElement.java:62)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:222)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:293)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:52)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:288)
	at org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension(EarlyStartupRunnable.java:102)
	at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:54)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench$56.run(Workbench.java:2801)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)



org.eclipse.epsilon.common (1.2.0.201501142340) &quot;Epsilon Common&quot; [Resolved]
org.eclipse.epsilon.common.dt (1.2.0.201501142340) &quot;Epsilon Common Development Tools&quot; [Starting]
org.eclipse.epsilon.common.dt.examples (1.2.0.201501142340) &quot;Epsilon Examples&quot; [Starting]
org.eclipse.epsilon.dependencies (1.2.0.201501142340) &quot;Epsilon Dependencies&quot; [Resolved]
org.eclipse.epsilon.dt.epackageregistryexplorer (1.2.0.201501142340) &quot;EPackage Registry Explorer Plug-in&quot; [Starting]
org.eclipse.epsilon.dt.exeed (1.2.0.201501142340) &quot;Exeed EMF Model Editor&quot; [Starting]
org.eclipse.epsilon.ecl.dt (1.2.0.201501142340) &quot;Epsilon Comparison Language Development Tools&quot; [Starting]
org.eclipse.epsilon.ecl.dt.tools (1.2.0.201501142340) &quot;ECL Tools&quot; [Resolved]
org.eclipse.epsilon.ecl.engine (1.2.0.201501142340) &quot;Epsilon Comparison Language Engine&quot; [Resolved]
org.eclipse.epsilon.egl.dt (1.2.0.201501142340) &quot;Epsilon Generation Language Development Tools&quot; [Starting]
org.eclipse.epsilon.egl.dt.traceability.editor (1.2.0.201501142340) &quot;EGL Development Tools: Textlink Editor&quot; [Starting]
org.eclipse.epsilon.egl.dt.traceability.fine.emf (1.2.0.201501142340) &quot;EGL Development Tools: EMF Traceability Model&quot; [Starting]
org.eclipse.epsilon.egl.engine (1.2.0.201501142340) &quot;Epsilon Generation Language Engine&quot; [Resolved]
org.eclipse.epsilon.egl.traceability.fine (1.2.0.201501142340) &quot;Epsilon Generation Language Engine: Fine-Grained Traceability&quot; [Resolved]
org.eclipse.epsilon.emc.bibtex (1.2.0.201501142340) &quot;Epsilon Bibtex Model Support&quot; [Resolved]
org.eclipse.epsilon.emc.bibtex.dt (1.2.0.201501142340) &quot;Epsilon Bibtex Model Support Development Tools&quot; [Resolved]
org.eclipse.epsilon.emc.composite (1.2.0.201501142340) &quot;Composite Model Plug-in&quot; [Resolved]
org.eclipse.epsilon.emc.csv (1.2.0.201501142340) &quot;Epsilon CSV Model Support&quot; [Resolved]
org.eclipse.epsilon.emc.csv.dt (1.2.0.201501142340) &quot;Epsilon CSV Model Support Development Tools&quot; [Resolved]
org.eclipse.epsilon.emc.emf (1.2.0.201501142340) &quot;Epsilon EMF Model Support&quot; [Resolved]
org.eclipse.epsilon.emc.emf.decorator (1.2.0.201501142340) &quot;EMF Decorator Model Plug-in&quot; [Resolved]
org.eclipse.epsilon.emc.emf.decorator.dt (1.2.0.201501142340) &quot;EMF Bridge Development Tools Plug-in&quot; [Starting]
org.eclipse.epsilon.emc.emf.dt (1.2.0.201501142340) &quot;Epsilon EMF Model Support Development Tools&quot; [Starting]
org.eclipse.epsilon.emc.emf.virtual (1.2.0.201501142340) &quot;Epsilon EMF Virtual Model Support&quot; [Starting]
org.eclipse.epsilon.emc.plainxml (1.2.0.201501142340) &quot;Plain XML Driver for EMC&quot; [Resolved]
org.eclipse.epsilon.emc.plainxml.dt (1.2.0.201501142340) &quot;EMX Plain XML development tools&quot; [Starting]
org.eclipse.epsilon.emf.dt (1.2.0.201501142340) &quot;Epsilon EMF Utilities&quot; [Starting]
org.eclipse.epsilon.eml.dt (1.2.0.201501142340) &quot;Epsilon Merging Language Development Tools&quot; [Starting]
org.eclipse.epsilon.eml.engine (1.2.0.201501142340) &quot;Epsilon Merging Language Engine&quot; [Resolved]
org.eclipse.epsilon.eol.dt (1.2.0.201501142340) &quot;Epsilon Object Language Development Tools&quot; [Starting]
org.eclipse.epsilon.eol.dt.tools (1.2.0.201501142340) &quot;Epsilon Object Language Tools&quot; [Resolved]
org.eclipse.epsilon.eol.engine (1.2.0.201501142340) &quot;Epsilon Object Language&quot; [Resolved]
org.eclipse.epsilon.eol.tools (1.2.0.201501142340) &quot;Built-in Tools for Epsilon&quot; [Resolved]
org.eclipse.epsilon.epl.dt (1.2.0.201501142340) &quot;Epsilon Pattern Language Development Tools&quot; [Starting]
org.eclipse.epsilon.epl.engine (1.2.0.201501142340) &quot;EPL Engine&quot; [Starting]
org.eclipse.epsilon.erl.engine (1.2.0.201501142340) &quot;Epsilon Rule Language Engine&quot; [Resolved]
org.eclipse.epsilon.etl.dt (1.2.0.201501142340) &quot;Epsilon Transformation Language Development Tools&quot; [Starting]
org.eclipse.epsilon.etl.engine (1.2.0.201501142340) &quot;Epsilon Transformation Language Engine&quot; [Resolved]
org.eclipse.epsilon.eunit.dt (1.2.0.201501142340) &quot;EUnit Developer Tools&quot; [Starting]
org.eclipse.epsilon.eunit.dt.diff.files (1.2.0.201501142340) &quot;EUnit File Differencer&quot; [Resolved]
org.eclipse.epsilon.eunit.engine (1.2.0.201501142340) &quot;EUnit Engine&quot; [Resolved]
org.eclipse.epsilon.eunit.junit (1.2.0.201501142340) &quot;JUnit bridge for Epsilon EUnit&quot; [Resolved]
org.eclipse.epsilon.evl.dt (1.2.0.201501142340) &quot;Epsilon Validation Language Development Tools&quot; [Starting]
org.eclipse.epsilon.evl.engine (1.2.0.201501142340) &quot;Epsilon Validation Language Engine&quot; [Starting]
org.eclipse.epsilon.ewl.dt (1.2.0.201501142340) &quot;Epsilon Wizard Language Development Tools&quot; [Starting]
org.eclipse.epsilon.ewl.engine (1.2.0.201501142340) &quot;Epsilon Wizard Engine Engine&quot; [Resolved]
org.eclipse.epsilon.flock.dt (1.2.0.201501142340) &quot;Epsilon Flock Development Tools&quot; [Starting]
org.eclipse.epsilon.flock.dt.emf (1.2.0.201501142340) &quot;Epsilon Flock Development Tools for EMF&quot; [Resolved]
org.eclipse.epsilon.flock.engine (1.2.0.201501142340) &quot;Epsilon Flock Engine&quot; [Resolved]
org.eclipse.epsilon.help (1.2.0.201501142340) &quot;Epsilon Help&quot; [Resolved]
org.eclipse.epsilon.perspective (1.2.0.201501142340) &quot;Epsilon Perspective&quot; [Starting]
org.eclipse.epsilon.profiling (1.2.0.201501142340) &quot;Epsilion Profiling Tools&quot; [Resolved]
org.eclipse.epsilon.profiling.dt (1.2.0.201501142340) &quot;Epsilon Profiling Support&quot; [Starting]
org.eclipse.epsilon.workflow (1.2.0.201501142340) &quot;Epsilon ANT Workflow&quot; [Resolved]
org.eclipse.epsilon.workflow.emf (1.2.0.201501142340) &quot;Epsilon EMF Workflow Tasks Plugin&quot; [Resolved]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2516967</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2015-02-10 17:56:28 -0500</bug_when>
    <thetext>I&apos;ve added the missing class name (commit eb2b6df5465f476dc78b153a3821d4b20a27d4b7). I agree that using EarlyStartup should be avoided - leaving this bug open for further investigation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154778</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-13 12:30:27 -0400</bug_when>
    <thetext>Is this still an issue? Most of our plugins use Bundle-Activation: lazy as far as I&apos;m aware. If it is an issue, steps to reproduce would be helpful</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154785</commentid>
    <comment_count>3</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2020-04-13 12:55:26 -0400</bug_when>
    <thetext>I have not seen it recently, but taht maybe becuase I discovered a much smaller subset of Epsilon to install for running Tx perfoprmance tests.

Dimitris&apos; comment suggests he fixed the primary bug.

The parenthesized observation was acknowledged although perhaps a separate bug. It is the org.eclipse.ui.startup extension point that you need to search for.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154810</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-13 14:47:21 -0400</bug_when>
    <thetext>It appears there is still early startup for the EMF DT plugin. From what I can tell, it seems to register metamodels. Fixing this would probably conflict with Bug 526638.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154819</commentid>
    <comment_count>5</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2020-04-13 15:35:38 -0400</bug_when>
    <thetext>Shouldn&apos;t do. If you really must, you can do eager registration on normal plugin startup so that it only hurts Epsilon users who perhaps need the pain. It is the early startup wrt Eclipse that is really bad since it hurts users who never actually use Epsilon in their current session.

If the problem is metamodel registration in the EPackage Registry then the normal extension points should support the relevant lazy activation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154823</commentid>
    <comment_count>6</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-13 15:52:08 -0400</bug_when>
    <thetext>Unfortunately, registering metamodels on plugin startup won&apos;t be sufficient in the following scenario where a user:

1) Registers an Ecore metamodel using Epsilon&apos;s right-click menu
2) Creates a model that conforms to the said metamodel
3) Restarts Eclipse
4) Tries to open the model using EMF&apos;s reflective tree-based editor

Given that step 4 doesn&apos;t involve any Epsilon tooling, no Epsilon plugin will have started at that point.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154826</commentid>
    <comment_count>7</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2020-04-13 16:08:51 -0400</bug_when>
    <thetext>Basically the whole Epsilon registration is a failure to exploit EMF and so you are left with the inevitable losing battle of fighting with Eclipse.

If you want to &apos;dynamically&apos; register a metamodel for the next Eclipse startup, you need to update plugin.xml with an extension point registration.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154827</commentid>
    <comment_count>8</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-13 16:13:01 -0400</bug_when>
    <thetext>I&apos;m not sure I understand which plugin.xml you&apos;re referring to. Presumably not the plugin.xml of an installed plugin?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154948</commentid>
    <comment_count>9</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2020-04-14 05:24:14 -0400</bug_when>
    <thetext>The Eclipse way is that there is a static state defined by the installed plugins and the projects at startup. To avoid very slow startup, extension points in installed plugins / projects create descriptors in registries. Lazily, when the consumer of a registry uses the registry, the descriptors are translated to true objects potentially loading plugins that provide those classes. This ensures that all plugins can be lazily started before their classes are used. Conversely a facility that is never actually used need never trigger loading.

Unfortunately index-the-world tools that scan the EPackage.Registry load everything. Hence the importance of an &apos;import&apos; to load what the programmer declares to be necessary, rather than a telepathic let-me-find-the-wrong-thing-for-you.

Unfortunately EMF is designed for Java programmers not model users and the lack of a dynamic ability to load the latest model for use now is a major impediment. I raised a Bugzilla probably over ten years ago. Each project has its own bad solution. I pioneered the OMELET then QVT then OCL Model Registry; it is now deprecated. QVTo has its .settings/org.eclipse.m2m.qvt.oml.mmodel.urimap etc etc.

I think the reason that I have accepted the deprecation of the OCL Model Registry is that I have learned to use the xsi:schemaLocation. If you load an Ecore model in the Sample Ecore Model Editor and Create a Dynamic Instance of some class, you will find that the resulting XMI file has something like

xsi:schemaLocation=&quot;http://www.eclipse.org/ocl/2012/UML2EcoreMapping UML2EcoreMapping.ecore&quot;

which provides the required mapping from the not necessarily installed nsURI to the Ecore file enabling tools to open the file without an EPackage registration.

(Beware if installed and your Resource save options are too enthusiastic the schemaLocation can be to a java:... class. I don&apos;t find this very helpful.

----

Back to your question, if schemaLocation doesn&apos;t solve your actual problem,
the registration should be in the plugin.xml of the project in which the model exists; but maybe you can do some gratuitous ../../xx/yy navigation from somewhere else.

For QVTd testing, I regularly create complete projects with .project/.classpath/MANIFEST.MF/plugin.xml/... so that I can test that auto-generation of all the Java code from a *.qvtr correctly genmodels the models, and synthesizes the code and that that code actually runs to transform as required. If you really need a plugin.xml extension then create one, or let genmodel do it for you. This certainly shouldn&apos;t be the plugin.xml of an installed plugin since you shouldn&apos;t be creating models in an installed plugin. If you do, you will have frightful trouble if you try to use Tycho for building an testing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3155022</commentid>
    <comment_count>10</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-14 09:30:09 -0400</bug_when>
    <thetext>*** Bug 404658 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156307</commentid>
    <comment_count>11</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-17 15:30:44 -0400</bug_when>
    <thetext>Thanks for the tip re xsi:schemaLocation. This seems to be a better way to instantiate Ecore metamodels indeed. Having said that, unfortunately, over the years we have accumulated too much material (e.g. https://www.eclipse.org/epsilon/doc/articles/reflective-emf-tutorial, https://www.eclipse.org/epsilon/doc/articles/flexmi, example projects, lecture/lab slides etc.) that make use of the &quot;Register EPackages&quot; menu so it&apos;s unlikely that we&apos;ll be able to retire this functionality very soon. As the originally reported issue has been addressed, I&apos;m marking this bug as fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156354</commentid>
    <comment_count>12</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2020-04-18 02:27:14 -0400</bug_when>
    <thetext>(In reply to Sina Madani from comment #10)
&gt; *** Bug 404658 has been marked as a duplicate of this bug. ***

REOPENed since it duplicates a not-fixed secondary issue.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>463184</bug_id>
          
          <creation_ts>2015-03-26 06:50:55 -0400</creation_ts>
          <short_desc>[releng] Missing about.html files</short_desc>
          <delta_ts>2020-04-27 08:48:10 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ed Willink">ed</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2537791</commentid>
    <comment_count>0</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2015-03-26 06:50:55 -0400</bug_when>
    <thetext>All Eclipse bundles should have an about.html.

The SimRel check: http://build.eclipse.org/simrel/mars/reporeports/reports/layoutCheck.txt diagnoses

Missing (?:about|about_org.eclipse.epsilon.common).html in file: org.eclipse.epsilon.common_1.3.0.201503231233.jar
Missing (?:about|about_org.eclipse.epsilon.common.dt).html in file: org.eclipse.epsilon.common.dt_1.3.0.201503231233.jar
Missing (?:about|about_org.eclipse.epsilon.dependencies).html in file: org.eclipse.epsilon.dependencies_1.3.0.201503231233.jar
Missing (?:about|about_org.eclipse.epsilon.emc.emf).html in file: org.eclipse.epsilon.emc.emf_1.3.0.201503231233.jar
Missing (?:about|about_org.eclipse.epsilon.eol.engine).html in file: org.eclipse.epsilon.eol.engine_1.3.0.201503231233.jar
Missing (?:about|about_org.eclipse.epsilon.erl.engine).html in file: org.eclipse.epsilon.erl.engine_1.3.0.201503231233.jar
Missing (?:about|about_org.eclipse.epsilon.etl.engine).html in file: org.eclipse.epsilon.etl.engine_1.3.0.201503231233.jar
Missing (?:about|about_org.eclipse.epsilon.flock.engine).html in file: org.eclipse.epsilon.flock.engine_1.3.0.201503231233.jar

Please add an about.html (and select it in build.properties).

http://build.eclipse.org/simrel/mars/reporeports/reports/versionPatternCheck.txt diagnoses:

org.antlr.runtime_3.1.b1_3.1.0 does not contain 4 parts

presumably making it look like four parts is too hard.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2547344</commentid>
    <comment_count>1</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2015-04-16 09:27:51 -0400</bug_when>
    <thetext>The QVTd redistribution has encountered many problems; fortunately distributing Epsilon Jars as internal libraries is permitted, so QVTd no longer ripples the SimRel requirement for about.html or four part qualifiers to Epsilon.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154177</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-09 17:17:42 -0400</bug_when>
    <thetext>What is this &quot;about.html&quot;? Where can we find an example? We have way too many plugins to manually write something about each one, unless they are for features only? Clearly they are not necessary, but wondering if this is still a thing, or is legacy and if it&apos;s still a &quot;problem&quot;?
(Trying to clean up the noise in Bugzilla so we can get at the &quot;real&quot; bugs)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154207</commentid>
    <comment_count>3</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2020-04-10 03:17:23 -0400</bug_when>
    <thetext>As a committer, you should have read the committer guidelines and should know that

about.html is a mandatory (IP-wise) part of every plugin.

For the most part plugins have a regular produced-by-the-committers content and so you can copy the same about.html everywhere. Occasionally as in 

https://git.eclipse.org/r/plugins/gitiles/mmt/org.eclipse.qvtd/+/master/plugins/org.eclipse.qvt/about.html

there may be something more interesting to say.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3158341</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-27 08:48:10 -0400</bug_when>
    <thetext>The files have been added and build.properties updated.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>464793</bug_id>
          
          <creation_ts>2015-04-16 09:15:46 -0400</creation_ts>
          <short_desc>Epsilon does not need non-standard ANTLR 3.1.b1</short_desc>
          <delta_ts>2018-11-08 10:58:02 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ed Willink">ed</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2547321</commentid>
    <comment_count>0</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2015-04-16 09:15:46 -0400</bug_when>
    <thetext>Epsilon appears to need ANTLR 3.1.b1_3.1.0, but actually it has no dependencies that enforce it, so if ANTLR 3.2.0 is available from e.g. Xtext, Epsilon&apos;s ANTLR is ignored.

It looks as if the absence of user problems has demonstrated that the migration to 3.2.0 from Orbit is ok.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2898908</commentid>
    <comment_count>1</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2017-11-17 08:18:54 -0500</bug_when>
    <thetext>Alternatively if you want to keep a non-standard ANTLR, use the approach from Bug 514604#10 to localize the library.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2991010</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2018-11-07 12:57:28 -0500</bug_when>
    <thetext>Dependencies on 3.1.b1 have been replaced with ANTLR 3.2.0 since commit f652e3fcb53f59b40091edccfb3eeb8a509ee55a, and the plugin has been deleted from the repo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2991249</commentid>
    <comment_count>3</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2018-11-08 10:58:02 -0500</bug_when>
    <thetext>Thanks. Is this Epsilon 1.6?

(Can you please sort out the lack of an Epsilon aggregate repo so that we can have whichever of 1.4/1.5/1.5.1 we like?)</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>471498</bug_id>
          
          <creation_ts>2015-06-30 18:11:07 -0400</creation_ts>
          <short_desc>Drop support for old-style -- comments in favour of postfix increment/decrement operators</short_desc>
          <delta_ts>2020-04-08 14:08:55 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2584365</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2015-06-30 18:11:07 -0400</bug_when>
    <thetext>Adding support for a postfix -- operator (i.e. i--) conflicts with the old OCL-inspired -- comment syntax rule. Since over the years we&apos;ve moved to use // almost exclusively, I&apos;d suggest dropping -- altogether (the only place where -- still appears is in some old YouTube screencasts which we&apos;ll need to re-record)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3153765</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-08 10:50:16 -0400</bug_when>
    <thetext>I&apos;ve tried to do this but it breaks HUTN. Any reason why only HUTN would be affected?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3153775</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-08 12:43:23 -0400</bug_when>
    <thetext>A few of the Epsilon programs that comprise HUTN (e.g. Intermediate2MetaModel.etl) seem to be making use of old-style comments.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3153792</commentid>
    <comment_count>3</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-08 14:08:55 -0400</bug_when>
    <thetext>Ah yes, thanks for the pointer! I&apos;ve updated these files and all tests are passing in commit 110fdc20eca4cc37cc8bd06902efa667c43335e0. Just need to update the editor now :)</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>489851</bug_id>
          
          <creation_ts>2016-03-17 09:37:38 -0400</creation_ts>
          <short_desc>[EGL] Global variables cannot be accessed in operations</short_desc>
          <delta_ts>2020-04-09 17:28:51 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Konstantinos Barmpis">konstantinos.barmpis</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2683870</commentid>
    <comment_count>0</comment_count>
    <who name="Konstantinos Barmpis">konstantinos.barmpis</who>
    <bug_when>2016-03-17 09:37:38 -0400</bug_when>
    <thetext>Trying to access variable &quot;scopedElementVariable&quot; in the minimal example below: 

[%var scopedElementVariable = &quot;se&quot;;%]
[%=flatten()%]
	
[%
operation flatten() : String {
var r;
r += &quot;`&quot; + scopedElementVariable + &quot;`.&quot;;
return r;
}
%]

produces the following exception:

Undefined variable, type or model: &apos;scopedElementVariable&apos;
	at (...\evl_interpreter_generator.egl@7:11-7:32)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154182</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-09 17:28:51 -0400</bug_when>
    <thetext>This seems to work fine now.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>493056</bug_id>
          
          <creation_ts>2016-05-05 06:23:01 -0400</creation_ts>
          <short_desc>EmfModelFactory should also support File[] arguments for loading models</short_desc>
          <delta_ts>2020-04-12 08:27:16 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Horacio Hoyos">arcanefoam</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2703341</commentid>
    <comment_count>0</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2016-05-05 06:23:01 -0400</bug_when>
    <thetext>As with packages, since a model can have two or more metamodles, the load method should accept a File array.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2703345</commentid>
    <comment_count>1</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2016-05-05 06:30:23 -0400</bug_when>
    <thetext>Fix pused to branch 493056.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154546</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-12 08:27:16 -0400</bug_when>
    <thetext>Next time (especially for such a trivially minor patch, which by the looks of it took about 5 mins between reporting and copy-pasting the additional lines of code from File and changing to File[]) it&apos;d be a lot easier to apply this directly to the branch (and in this case not even bother with the bug report). Not only can I not apply this as a patch, but can&apos;t delete the branch either. Merging gives &quot;unrelated histories&quot;. I have manually merged the changes in 5cc8e489c7dcca07342bf3c141a5ffeeefaa2ffe.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>500342</bug_id>
          
          <creation_ts>2016-08-26 10:34:02 -0400</creation_ts>
          <short_desc>ModelGroup hides IAbstractOperationContributor operations</short_desc>
          <delta_ts>2020-04-18 08:15:11 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Horacio Hoyos">arcanefoam</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>arcanefoam</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2744175</commentid>
    <comment_count>0</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2016-08-26 10:34:02 -0400</bug_when>
    <thetext>Using Alias for a model will result in operations contributed by the model types to be hidden/shadowed.

In my case, the all() operation returns a speciliazed collection that provides optimized select and selectOne operations. However, when used with an alias, the ModelGroup will get all the results from all the models and use an ArrayList to group all the results.

Of course, if there are many models using the same alias, my optimized implementations will not work. However, similarly to the instance creation, all the operations could as if the model group has a single instance and in that case delegate to that instance instead of collection all the results.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156389</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 08:15:11 -0400</bug_when>
    <thetext>Fixed in c4b9fcfaa.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>512802</bug_id>
          
          <creation_ts>2017-02-28 06:00:50 -0500</creation_ts>
          <short_desc>Add transformation visualisation capabilities to the ETL development tools</short_desc>
          <delta_ts>2020-04-14 02:55:44 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2809178</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2017-02-28 06:00:50 -0500</bug_when>
    <thetext>See http://stackoverflow.com/questions/42281485/what-libraries-tools-exist-for-developing-and-running-transformations-as-in-etl</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154776</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-13 12:28:41 -0400</bug_when>
    <thetext>Could Picto be of use for this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154899</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-14 02:55:44 -0400</bug_when>
    <thetext>Possibly - but this is too low priority. Closing as WONTFIX and adding a card to our Trello board instead.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>513887</bug_id>
          
          <creation_ts>2017-03-20 03:39:45 -0400</creation_ts>
          <short_desc>Workflows do not support cached EOL models (LoadRegisteredMetaModelTask)</short_desc>
          <delta_ts>2020-05-06 20:30:26 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Oleg Orlov">arch7tect</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2815554</commentid>
    <comment_count>0</comment_count>
    <who name="Oleg Orlov">arch7tect</who>
    <bug_when>2017-03-20 03:39:45 -0400</bug_when>
    <thetext>Same as https://bugs.eclipse.org/bugs/show_bug.cgi?id=459426? but for LoadRegisteredMetaModelTask.
LoadRegisteredMetaModelTask does not allow to cache model.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2815596</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2017-03-20 05:54:47 -0400</bug_when>
    <thetext>Thanks for reporting this. To prioritise this accordingly, are you working with a metamodel that is large enough for caching to be important, or is this more of an enhancement request?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3161574</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-06 20:30:26 -0400</bug_when>
    <thetext>Fixed in 33ff9eb2f5398f88b5704ab81d68c91058e36e46.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>514986</bug_id>
          
          <creation_ts>2017-04-09 09:23:23 -0400</creation_ts>
          <short_desc>[EOL] Add ternary operator</short_desc>
          <delta_ts>2020-04-11 09:46:12 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sina Madani">sinadoom</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2822307</commentid>
    <comment_count>0</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2017-04-09 09:23:23 -0400</bug_when>
    <thetext>It would be useful - especially in EGL - if Epsilon supported the ternary operator. This could be achieved in two ways:

1) Ternary syntax:

var result = condition ? valueIfTrue : valueIfFalse;



2) A built-in operation on the Boolean context:

operation Boolean ternary(rIfTrue, rIfFalse) {
    if (self == true) return rIfTrue;
    return rIfFalse;
}

and invoked like so:

var is1GT2 = (1 &gt; 2).ternary(&quot;1 is gt 2&quot;, &quot;1 is not gt 2&quot;);</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2822336</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2017-04-09 17:40:47 -0400</bug_when>
    <thetext>That&apos;s a good idea. Would you like to give this a go? I&apos;ve added a few more notes to [1] on modifying the Epsilon parsers.

[1] http://www.eclipse.org/epsilon/doc/articles/running-from-source/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154442</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-11 09:46:12 -0400</bug_when>
    <thetext>Took a lot of head-scratching but eventually figured it out in 13133432f2cb3a7d275286df558672ab83136180. Just need more tests.
In theory this works wherever a logicalExpression appears, not just in assignments.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>518360</bug_id>
          
          <creation_ts>2017-06-16 05:50:10 -0400</creation_ts>
          <short_desc>[Concordance] The cross references are repeated</short_desc>
          <delta_ts>2020-04-09 17:38:43 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 8</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Anthony Garmendia">antonio.agj</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2844334</commentid>
    <comment_count>0</comment_count>
      <attachid>268940</attachid>
    <who name="Anthony Garmendia">antonio.agj</who>
    <bug_when>2017-06-16 05:50:10 -0400</bug_when>
    <thetext>Created attachment 268940
Sample of fragmented UML models

It seems that Concordance repeat the cross references when the models are fragmented using proxy containment references. In the example attached there is only one cross reference (between ExampleClass.xmi and OtherClass.xmi), but in the database it is repeated 3 times. 

Possible Solution

Concordance detects all resources in the workspace, because of this, I think it should not navigate through the proxy containment references. In the class ConcordanceModelBase the method getAllContentsIterator(boolean resolve) intead of returning return resource.getAllContents(); 
would be 
return EcoreUtil.getAllContents(resource,false);</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154185</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-09 17:38:43 -0400</bug_when>
    <thetext>Concordance is no longer maintained and will be archived in the near future.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>268940</attachid>
            <date>2017-06-16 05:50:10 -0400</date>
            <delta_ts>2017-06-16 05:50:10 -0400</delta_ts>
            <desc>Sample of fragmented UML models</desc>
            <filename>exampleUML.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>2789</size>
            <attacher name="Anthony Garmendia">antonio.agj</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>518363</bug_id>
          
          <creation_ts>2017-06-16 07:06:57 -0400</creation_ts>
          <short_desc>[Concordance] Error when I move folder</short_desc>
          <delta_ts>2020-04-09 17:39:00 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 8</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Anthony Garmendia">antonio.agj</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2844356</commentid>
    <comment_count>0</comment_count>
      <attachid>268941</attachid>
    <who name="Anthony Garmendia">antonio.agj</who>
    <bug_when>2017-06-16 07:06:57 -0400</bug_when>
    <thetext>Created attachment 268941
Fragmented UML models with two cross references

I get an error when I tried to move the move folder -org- inside -otherorg-. I attached the example project. I seems that Concordance is trying to reconcile the cross references within a file that is also has moved.

!STACK 0
org.eclipse.emf.ecore.resource.impl.ResourceSetImpl$1DiagnosticWrappedException: org.eclipse.core.internal.resources.ResourceException: Resource &apos;/exampleUML/org/OtherClass.xmi&apos; does not exist.
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(ResourceSetImpl.java:319)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:278)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:406)
	at org.eclipse.uml2.uml.modular.concordance.ModularDomain.getEmfResource(ModularDomain.java:50)
	at org.eclipse.epsilon.concordance.model.CrossReferenceReconciler.reconcile(CrossReferenceReconciler.java:57)
	at org.eclipse.epsilon.concordance.model.CrossReferenceReconciler.reconcile(CrossReferenceReconciler.java:41)
	at org.eclipse.epsilon.concordance.model.ConcordanceModelBase.reconcileCrossReferences(ConcordanceModelBase.java:89)
	at org.eclipse.epsilon.concordance.clients.xref.DanglingCrossReferenceReconciler$CrossReferenceTargetReconcilingVisitor.visit(DanglingCrossReferenceReconciler.java:48)
	at org.eclipse.epsilon.concordance.index.H2ConcordanceIndex.visitAllModelsWithCrossReferencesTo(H2ConcordanceIndex.java:64)
	at org.eclipse.epsilon.concordance.clients.xref.DanglingCrossReferenceReconciler.reconcileCrossReferences(DanglingCrossReferenceReconciler.java:33)
	at org.eclipse.epsilon.concordance.clients.xref.CrossReferenceReconciler.modelMoved(CrossReferenceReconciler.java:74)
	at org.eclipse.epsilon.concordance.reporter.model.ModelChangeReporter.notifyListener(ModelChangeReporter.java:112)
	at org.eclipse.epsilon.concordance.reporter.model.ModelChangeReporter.notifyListeners(ModelChangeReporter.java:91)
	at org.eclipse.epsilon.concordance.reporter.model.ModelChangeReporter.reportMove(ModelChangeReporter.java:80)
	at org.eclipse.epsilon.concordance.dt.ConcordanceBuilder$2.visit(ConcordanceBuilder.java:100)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:64)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:75)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:75)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:75)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:48)
	at org.eclipse.epsilon.concordance.dt.ConcordanceBuilder.incrementalBuild(ConcordanceBuilder.java:86)
	at org.eclipse.epsilon.concordance.dt.ConcordanceBuilder.build(ConcordanceBuilder.java:53)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:735)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:206)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:246)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:301)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:304)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:360)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:383)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:144)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:235)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: org.eclipse.core.internal.resources.ResourceException: Resource &apos;/exampleUML/org/OtherClass.xmi&apos; does not exist.
	at org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:335)
	at org.eclipse.core.internal.resources.Resource.checkAccessible(Resource.java:209)
	at org.eclipse.core.internal.resources.File.getContents(File.java:275)
	at org.eclipse.core.internal.resources.File.getContents(File.java:268)
	at org.eclipse.emf.ecore.resource.impl.PlatformResourceURIHandlerImpl$WorkbenchHelper.createPlatformResourceInputStream(PlatformResourceURIHandlerImpl.java:207)
	at org.eclipse.emf.ecore.resource.impl.PlatformResourceURIHandlerImpl.createInputStream(PlatformResourceURIHandlerImpl.java:525)
	at org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl.createInputStream(ExtensibleURIConverterImpl.java:360)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1269)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:259)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:274)
	... 32 more

!ENTRY org.eclipse.core.resources 4 75 2017-06-16 12:14:56.976
!MESSAGE Errors occurred during the build.
!SUBENTRY 1 org.eclipse.epsilon.concordance.core 4 75 2017-06-16 12:14:56.976
!MESSAGE Errors running builder &apos;Concordance Builder&apos; on project &apos;exampleUML&apos;.
!STACK 0
org.eclipse.emf.ecore.resource.impl.ResourceSetImpl$1DiagnosticWrappedException: org.eclipse.core.internal.resources.ResourceException: Resource &apos;/exampleUML/org/OtherClass.xmi&apos; does not exist.
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(ResourceSetImpl.java:319)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:278)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:406)
	at org.eclipse.uml2.uml.modular.concordance.ModularDomain.getEmfResource(ModularDomain.java:50)
	at org.eclipse.epsilon.concordance.model.CrossReferenceReconciler.reconcile(CrossReferenceReconciler.java:57)
	at org.eclipse.epsilon.concordance.model.CrossReferenceReconciler.reconcile(CrossReferenceReconciler.java:41)
	at org.eclipse.epsilon.concordance.model.ConcordanceModelBase.reconcileCrossReferences(ConcordanceModelBase.java:89)
	at org.eclipse.epsilon.concordance.clients.xref.DanglingCrossReferenceReconciler$CrossReferenceTargetReconcilingVisitor.visit(DanglingCrossReferenceReconciler.java:48)
	at org.eclipse.epsilon.concordance.index.H2ConcordanceIndex.visitAllModelsWithCrossReferencesTo(H2ConcordanceIndex.java:64)
	at org.eclipse.epsilon.concordance.clients.xref.DanglingCrossReferenceReconciler.reconcileCrossReferences(DanglingCrossReferenceReconciler.java:33)
	at org.eclipse.epsilon.concordance.clients.xref.CrossReferenceReconciler.modelMoved(CrossReferenceReconciler.java:74)
	at org.eclipse.epsilon.concordance.reporter.model.ModelChangeReporter.notifyListener(ModelChangeReporter.java:112)
	at org.eclipse.epsilon.concordance.reporter.model.ModelChangeReporter.notifyListeners(ModelChangeReporter.java:91)
	at org.eclipse.epsilon.concordance.reporter.model.ModelChangeReporter.reportMove(ModelChangeReporter.java:80)
	at org.eclipse.epsilon.concordance.dt.ConcordanceBuilder$2.visit(ConcordanceBuilder.java:100)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:64)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:75)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:75)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:75)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:48)
	at org.eclipse.epsilon.concordance.dt.ConcordanceBuilder.incrementalBuild(ConcordanceBuilder.java:86)
	at org.eclipse.epsilon.concordance.dt.ConcordanceBuilder.build(ConcordanceBuilder.java:53)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:735)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:206)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:246)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:301)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:304)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:360)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:383)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:144)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:235)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: org.eclipse.core.internal.resources.ResourceException: Resource &apos;/exampleUML/org/OtherClass.xmi&apos; does not exist.
	at org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:335)
	at org.eclipse.core.internal.resources.Resource.checkAccessible(Resource.java:209)
	at org.eclipse.core.internal.resources.File.getContents(File.java:275)
	at org.eclipse.core.internal.resources.File.getContents(File.java:268)
	at org.eclipse.emf.ecore.resource.impl.PlatformResourceURIHandlerImpl$WorkbenchHelper.createPlatformResourceInputStream(PlatformResourceURIHandlerImpl.java:207)
	at org.eclipse.emf.ecore.resource.impl.PlatformResourceURIHandlerImpl.createInputStream(PlatformResourceURIHandlerImpl.java:525)
	at org.eclipse.emf.ecore.resource.impl.ExtensibleURIConverterImpl.createInputStream(ExtensibleURIConverterImpl.java:360)
	at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1269)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:259)
	at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:274)
	... 32 more</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154186</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-09 17:39:00 -0400</bug_when>
    <thetext>Concordance is no longer maintained and will be archived in the near future.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>268941</attachid>
            <date>2017-06-16 07:06:57 -0400</date>
            <delta_ts>2017-06-16 07:06:57 -0400</delta_ts>
            <desc>Fragmented UML models with two cross references</desc>
            <filename>exampleUML(move folder).zip</filename>
            <type>application/x-zip-compressed</type>
            <size>2914</size>
            <attacher name="Anthony Garmendia">antonio.agj</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>518364</bug_id>
          
          <creation_ts>2017-06-16 07:08:46 -0400</creation_ts>
          <short_desc>[Concordance] Listeners</short_desc>
          <delta_ts>2020-04-09 17:38:19 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Anthony Garmendia">antonio.agj</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2844357</commentid>
    <comment_count>0</comment_count>
      <attachid>268942</attachid>
    <who name="Anthony Garmendia">antonio.agj</who>
    <bug_when>2017-06-16 07:08:46 -0400</bug_when>
    <thetext>Created attachment 268942
Fragmented UML models</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2844360</commentid>
    <comment_count>1</comment_count>
    <who name="Anthony Garmendia">antonio.agj</who>
    <bug_when>2017-06-16 07:19:55 -0400</bug_when>
    <thetext>1. When I import a project which has the Concordance nature, the listener that occurs is
modelChanged(IConcordanceModel model), I would expect modelAdded(IConcordanceModel model) right?

2. When I move file between projects, the listeners that arises are:
first modelRemoved(IConcordanceModel model) and after that modelAdded(IConcordanceModel model), it should be only modelMoved(IConcordanceModel original, IConcordanceModel moved) right?

3. I wish there was a listener for folder move. I would expect something like
folderMove(IFolder originalFolder,IFolder movedFolder, Map&lt;IConcordanceModel original,IConcordanceModel moved&gt;)

I attached a Concordance project for testing.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154184</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-09 17:38:19 -0400</bug_when>
    <thetext>Concordance is no longer maintained and will be archived in the near future.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>268942</attachid>
            <date>2017-06-16 07:08:46 -0400</date>
            <delta_ts>2017-06-16 07:08:46 -0400</delta_ts>
            <desc>Fragmented UML models</desc>
            <filename>exampleUML(move folder).zip</filename>
            <type>application/x-zip-compressed</type>
            <size>2914</size>
            <attacher name="Anthony Garmendia">antonio.agj</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>518570</bug_id>
          
          <creation_ts>2017-06-21 08:17:04 -0400</creation_ts>
          <short_desc>Remove &quot;context&quot; fields in subclasses of EolModule</short_desc>
          <delta_ts>2018-10-15 17:27:15 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>arcanefoam</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2845699</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2017-06-21 08:17:04 -0400</bug_when>
    <thetext></thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2945392</commentid>
    <comment_count>1</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-05-04 09:50:14 -0400</bug_when>
    <thetext>I think the change should also include replacing all context references by getContext(). This way, modules that do need a specialised context (e.g. incremental) can easily make do.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2986310</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2018-10-15 17:27:15 -0400</bug_when>
    <thetext>Should be fixed in commit 783eac0c9c220fcb0ab562fd32dc83bf1d2460f0</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>519112</bug_id>
          
          <creation_ts>2017-07-03 10:24:19 -0400</creation_ts>
          <short_desc>Unhelpful update site name</short_desc>
          <delta_ts>2020-04-09 17:20:20 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ed Willink">ed</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2848849</commentid>
    <comment_count>0</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2017-07-03 10:24:19 -0400</bug_when>
    <thetext>https://www.eclipse.org/epsilon/download/ Updates Sites now has an Archive; good.

But it is unhelpfully called site.zip. A name such as epsilon-Update-1.4.0.zip would be more consistent and helpful.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154179</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-09 17:20:20 -0400</bug_when>
    <thetext>We&apos;re now using P2 repos for Interim and will be making the stable update site P2 for the next release (which is &quot;imminent&quot;).</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>519113</bug_id>
          
          <creation_ts>2017-07-03 10:36:47 -0400</creation_ts>
          <short_desc>Missing feature dependency</short_desc>
          <delta_ts>2020-04-12 08:11:22 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ed Willink">ed</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2848861</commentid>
    <comment_count>0</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2017-07-03 10:36:47 -0400</bug_when>
    <thetext>Epsilon provides many installation options but not all of them work independently.

My favorite is just &quot;EMF integration&quot; but it is of limited utility. Suggest that the &quot;EMF integration&quot; and probably all integration features should include &quot;Epsilon Core&quot; as an included feature to ensure that the feature is useful.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154302</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-10 14:21:44 -0400</bug_when>
    <thetext>If you now install only the EMF feature (from Interim site), it will also install its dependencies (the Epsilon engines).
Does it matter whether the plugins are installed but the features are not? i.e. should we still care about organising &lt;requires&gt; in feature.xml, or is this a legacy thing?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154348</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-10 16:20:37 -0400</bug_when>
    <thetext>I have my answer here: https://stackoverflow.com/questions/4535762/require-bundle-and-import-package-versus-feature-xml-requires

it seems to imply that &lt;requires&gt; is only useful for expressing dependencies between features, so tha&apos;ts what I&apos;ve done in commit fe0f087a266585343063aa87e544af941746ec81.

That said, When I install the feature it doesn&apos;t seem to come up in installed features list. Nevertheless, everything works as far as I can tell, so closing this.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154402</commentid>
    <comment_count>3</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2020-04-11 03:03:24 -0400</bug_when>
    <thetext>&lt;requires&gt; appears to be at best useless and at worst actually damaging; IIRC no one remembers to refresh it so it ends up as a load of stale versioned dependencies. I eliminated all &lt;requires&gt; from my projects quite a few years ago.

What matters is &lt;includes&gt;.

It should be possible to &apos;draw&apos; a dependency graph of your plugins; it should be a directed acyclic graph; typically rooted at e.g. &quot;Epsilon Core&quot; by some &apos;common&apos; plugin(s) with a variety of leaves for very specialized developments.

Features enable you to group plugins to facilitate sub-installs to suit particular customers such as a HUTN only user. Therefore the HUTN feature has a &lt;plugin&gt; entry for every HUTN-specific plugin and an &lt;includes&gt; for every more generic feature that transitively provides more generic required functionality without which HUTN plugins fail. Ideally each plugin should be referenced directly by just one feature. You should be able to partition your plugin dependency graph into non-overlapping regions so that each region corresponds to the plugins of a corresponding feature. &lt;includes&gt; is the feature region to feature region edge.

Therefore &quot;Epsilon Core&quot; is perhaps the root feature that everything must include. &quot;EMF integration&quot; is just one more advanced feature that includes &quot;Epsilon Core&quot;.

Your current interim is very bad for me because while you have ensured that &quot;EMF integration&quot; installs &quot;Epsilon Core&quot;, you have also inflicted Emfatic and descriptors on me. The former imposes unwanted UI bloat. The latter brings back very bad memories. IIRC it is yet another badly coded index-the-world tool that burns my CPU time even though I never use its index.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154466</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-11 11:14:17 -0400</bug_when>
    <thetext>Sorry, just realised I didn&apos;t update EMF feature, and have corrected this. Nevertheless it made no difference.

Here&apos;s our EMF feature:
https://git.eclipse.org/c/epsilon/org.eclipse.epsilon.git/tree/features/org.eclipse.epsilon.emf.feature/feature.xml

So what do you suggest we do? Given that &lt;requires&gt; seems to do absolutely nothing, should I replace feature imports with &lt;includes&gt;?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154508</commentid>
    <comment_count>5</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-11 16:39:32 -0400</bug_when>
    <thetext>As suggested, we have moved the &lt;includes&gt; on Emfatic to a separate feature, since it is optional. I have also replaced &lt;requires&gt; with &lt;includes&gt;, which seems to be working (you get a nice hierarchical view of feature-level dependencies).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154530</commentid>
    <comment_count>6</comment_count>
    <who name="Ed Willink">ed</who>
    <bug_when>2020-04-12 03:17:49 -0400</bug_when>
    <thetext>Includes looks good.

My recollection of dependencies/indexes is probably faulty. It looks benign, possibly even useful.  I have never succeeded in priming the P2 search list.

For Orbit and QVTo there are &quot;latest&quot; repos that avoid nominating a stale repo / needing to keep changing.

Is Orbit really necessary? The normal policy is that Orbit content is redistributed by e.g. Epsilon unless it is guaranteed that a mandatory dependency already redistributes it. (e.g. LPG is distributed by OCL, Guava by Xtext,...). Inflicting Orbit on any user who installs a bit of Epsilon will significantly slow install checks.

You need to be very careful with your Orbit dependencies since with Epsilon ignoring SimRel cadence, Epsilon must not conflict with multiple SimRel versions.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154545</commentid>
    <comment_count>7</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-12 08:11:22 -0400</bug_when>
    <thetext>Thanks for your thoughts. Orbit is there for various dependencies which are not available otherwise. In any case, we do not want to rely on other packages for e.g. ANTLR. We&apos;re not redistributing Orbit, but only having it as a discovery site to resolve dependencies. Whilst we can also point to the latest, IIRC some bundles may be removed. We only point to long-term persisted repos.
Since Orbit only contains external (i.e. non-Eclipse) dependencies, I don&apos;t think it would matter what version of the repo we use.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>521060</bug_id>
          
          <creation_ts>2017-08-17 07:41:05 -0400</creation_ts>
          <short_desc>[EGX] Parameters are only visible to the invoked template, not global</short_desc>
          <delta_ts>2020-04-18 06:42:35 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Horacio Hoyos">arcanefoam</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2860894</commentid>
    <comment_count>0</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2017-08-17 07:41:05 -0400</bug_when>
    <thetext>I have additional EOL and EGL templates that define operations and templates that I can share between different &quot;main&quot; EGL scripts. The problem is that the parameters defined in the EGX rule are only visible to the &quot;main&quot; template and not to the imported EOL or EGL files. 

This is strange becauseI would assume that the context is stated between all of the scripts, that is, the invoking script provides the context for the imported scripts.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2860895</commentid>
    <comment_count>1</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2017-08-17 07:44:51 -0400</bug_when>
    <thetext>On careful consideration I think this is not a bug... if module X defines a variable v, then the imported module has no way of knowing about it... 

I just seems strange that I would have to pass this variables to the other modules as parameters. Perhaps in the specific case of EGX the parameters should be made available globally.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3155717</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-16 03:51:04 -0400</bug_when>
    <thetext>I tried to reproduce this but without much success. Could you please put together a minimal example that demonstrates this behaviour?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156362</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 06:42:35 -0400</bug_when>
    <thetext>As it&apos;s been a few years since this was reported, I&apos;m assuming that this got fixed somewhere along the way and marking this issue as resolved, but please feel free to reopen if it shows up again.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>521130</bug_id>
          
          <creation_ts>2017-08-18 12:46:40 -0400</creation_ts>
          <short_desc>EGX rules need a formatter field</short_desc>
          <delta_ts>2020-05-17 09:07:28 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Horacio Hoyos">arcanefoam</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2861281</commentid>
    <comment_count>0</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2017-08-18 12:46:40 -0400</bug_when>
    <thetext>It would be nice to add a &quot;formatter&quot; section to the EGX rules so a formatter could be attached to each rule.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3159853</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-01 10:09:08 -0400</bug_when>
    <thetext>How would this work? We could add a &quot;formatter&quot; block and keyword but what should it return? From the user&apos;s perspective, how would they specify the formatter? By name, manually constructing it, by class...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3160196</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-05-02 06:23:22 -0400</bug_when>
    <thetext>In the &quot;Generated Files&quot; tab of an EGL run configuration, one can specify formatters for the generated text. I suspect that this is a suggestion to allow formatters to be configured at the EGX rule level too.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3160200</commentid>
    <comment_count>3</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-02 06:38:33 -0400</bug_when>
    <thetext>Ah right. Wouldn&apos;t that need to be on a per-rule/per-template basis? Hence the thinking that it would need to be a keyword/construct</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3161061</commentid>
    <comment_count>4</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2020-05-05 11:28:05 -0400</bug_when>
    <thetext>I see two options. One, on the configuration tab so one could define a global formatter. Two, a keyword in the egl rule... or a &quot;__template&quot; to pass as a paramter. Paramters are tricky since they can clash with user&apos;s.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3161117</commentid>
    <comment_count>5</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-05-05 14:35:21 -0400</bug_when>
    <thetext>&gt; I see two options. One, on the configuration tab so one could define a global formatter.

This is already supported in the &quot;Generated Text&quot; tab of EGL run configurations. Can you think of a scenario where we&apos;d want to treat generated files with the same extension differently depending on which rule generates them (e.g. format some but not format others)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3163119</commentid>
    <comment_count>6</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2020-05-12 12:26:53 -0400</bug_when>
    <thetext>(In reply to Dimitris Kolovos from comment #5)
&gt; &gt; I see two options. One, on the configuration tab so one could define a global formatter.
&gt; 
&gt; This is already supported in the &quot;Generated Text&quot; tab of EGL run
&gt; configurations. Can you think of a scenario where we&apos;d want to treat
&gt; generated files with the same extension differently depending on which rule
&gt; generates them (e.g. format some but not format others)?

Can the EVL setting be applied per extension? Cause the EGX can generate files of different extensions.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3163302</commentid>
    <comment_count>7</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-05-13 04:24:54 -0400</bug_when>
    <thetext>The more I think about it, the more I&apos;m in favour of actually not investing much more effort on EGL formatters. High-quality auto-formatting is non-trivial and there are good standalone tools for doing this in a configurable way (e.g. [1, 2]). Can you think of any downsides to using external auto-formatting tools, beyond convenience?

[1] https://github.com/google/google-java-format
[2] https://github.com/uncrustify/uncrustify</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3164392</commentid>
    <comment_count>8</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2020-05-17 04:56:37 -0400</bug_when>
    <thetext>I think I agree.. I have never used a formatter or taken the time to implement one. I think it could even be a possibility to remove them altogether in version 2.0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3164414</commentid>
    <comment_count>9</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-05-17 09:07:28 -0400</bug_when>
    <thetext>I&apos;m not sure I&apos;d go as far as deleting them as it&apos;s conceivable that there are EGL-based solutions out there that are making use of the relevant interfaces from Java. I&apos;m closing as WONTFIX for now and I&apos;ll add a relevant card to our Trello board.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>533492</bug_id>
          
          <creation_ts>2018-04-12 06:17:21 -0400</creation_ts>
          <short_desc>Quick Fix not appearing for model elements in references resources</short_desc>
          <delta_ts>2020-04-18 15:11:27 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jason Hampson">jason.hampson</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>arcanefoam</cc>
    
    <cc>osaiz</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2939436</commentid>
    <comment_count>0</comment_count>
      <attachid>273551</attachid>
    <who name="Jason Hampson">jason.hampson</who>
    <bug_when>2018-04-12 06:17:21 -0400</bug_when>
    <thetext>Created attachment 273551
Sample model file

I have a model file that references another model file. The EVL check detects an error in both the first file and the referenced file but the quick fix option only appears for the first file. If the referenced file is opened up separately and validated then the quick fix is shown</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2939437</commentid>
    <comment_count>1</comment_count>
      <attachid>273552</attachid>
    <who name="Jason Hampson">jason.hampson</who>
    <bug_when>2018-04-12 06:17:56 -0400</bug_when>
    <thetext>Created attachment 273552
Ecore and EVL Plug-ins</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2941752</commentid>
    <comment_count>2</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-04-20 09:23:48 -0400</bug_when>
    <thetext>Hi Jason. What version of Epsilon are you using?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2941756</commentid>
    <comment_count>3</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-04-20 09:29:34 -0400</bug_when>
    <thetext>Further, what version of EMF are you using? Currently I am getting an error on class &quot;SampleEditor.java&quot; at line 634: unknown method: updateMarkers. Since this is generated code I am guessing we are using different versions.

Cheers,</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2941779</commentid>
    <comment_count>4</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-04-20 10:10:33 -0400</bug_when>
    <thetext>So, updateMarkers was added in EMF 2.13, will update my installation.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2942219</commentid>
    <comment_count>5</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-04-23 08:45:57 -0400</bug_when>
    <thetext>The EvlValidator that runs the Lvl script against the Emf model does not attempt to resolve proxies, i.e. it will run against the model and which ever proxies have been resolved at the moment. For example, in the provided MWE, if the top modelis open and we explore the top package properties the child model will be loaded and after that executing the validation command will result in a validation of the two models.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156450</commentid>
    <comment_count>6</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 14:59:46 -0400</bug_when>
    <thetext>Fixed in 844152cf5</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156453</commentid>
    <comment_count>7</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 15:11:27 -0400</bug_when>
    <thetext>*** Bug 402709 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>273551</attachid>
            <date>2018-04-12 06:17:21 -0400</date>
            <delta_ts>2018-04-12 06:17:21 -0400</delta_ts>
            <desc>Sample model file</desc>
            <filename>Example.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>1219</size>
            <attacher name="Jason Hampson">jason.hampson</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>273552</attachid>
            <date>2018-04-12 06:17:56 -0400</date>
            <delta_ts>2018-04-12 06:17:56 -0400</delta_ts>
            <desc>Ecore and EVL Plug-ins</desc>
            <filename>plug-ins.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>126003</size>
            <attacher name="Jason Hampson">jason.hampson</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>536972</bug_id>
          
          <creation_ts>2018-07-12 11:19:23 -0400</creation_ts>
          <short_desc>Update children references on AbstractModuleElement.setParent() instead of on the constructor</short_desc>
          <delta_ts>2018-10-30 16:23:37 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Flavio Costa">flavio.costa.br</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2963719</commentid>
    <comment_count>0</comment_count>
    <who name="Flavio Costa">flavio.costa.br</who>
    <bug_when>2018-07-12 11:19:23 -0400</bug_when>
    <thetext>On the AbstractModuleElement(ModuleElement parent) constructor, the parent field is set and the reference is used to automatically add the current class to the children of said parent, thus making sure that the parent-child relationship is properly updated on both classes.

However, when the method AbstractModuleElement.setParent(ModuleElement parent) is called, the current object is not added as a child of that parent, thus only updating the reference on the child-&gt;parent direction.

Please consider moving parent.getChildren().add(this); to the setParent(...) method instead, and calling setParent(...) on that constructor, thus making sure that the object references are properly updated in both use cases.

In addition to that, I can&apos;t find any explicit reference to the AbstractModuleElement(ModuleElement parent) in the Epsilon code. Since constructors are not inherited by subclasses, I would suggest adding a Subclass(ModuleElement parent) constructor on any classes that extend AbstractModuleElement, so this contructor becomes usable, or remove such constructor from AbstractModuleElement if it&apos;s understood that this constructor is not useful. Anyway, even if the constructor is ultimately removed, the code to update the children reference should be moved to setParent(...).

Thanks,

Flavio Costa</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2989434</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2018-10-30 16:23:37 -0400</bug_when>
    <thetext>Fixed in commit b95ac5c6298acc34bec510a9f9b49b4e8190a3d5.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>538175</bug_id>
          
          <creation_ts>2018-08-22 12:20:09 -0400</creation_ts>
          <short_desc>EolModelElementType keeps reference to model</short_desc>
          <delta_ts>2019-03-12 17:58:02 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Horacio Hoyos">arcanefoam</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>arcanefoam</cc>
    
    <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2972914</commentid>
    <comment_count>0</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-08-22 12:20:09 -0400</bug_when>
    <thetext>The EolModelElementType class keeps a reference to the model to which the type belongs. This model is used to very that an object is of the EolModelElementType, to retrieve elements of the EolModelElementType, etc.

The issue with this is that it breaks the expectations about the IContext being the single reference point for model information.

An example of this is removing and adding new models to the context of a ExLModule to reexecute it without having to parse the source file again. Since the CST is already built, using EVL as example, the ConstraintContext has already constructed a EolModelElementType with the &quot;old&quot; models. When a ConstraintContext is re-executed, the checkAll methods uses the getAllOfSourceKind method to retrieve the elements of the type of the ConstraintContext; the getAllOfSourceKind method in turn uses the EolModelElementType to retrieve these elements. Since the EolModelElementType kept a reference to the &quot;old&quot;model the retrieved elements are stale/invalid. Any subsequent action to relate the element to its model will fail: e.g. context.getModelRepository().getOwningModel(object);</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2972922</commentid>
    <comment_count>1</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-08-22 12:36:01 -0400</bug_when>
    <thetext>The model field could be removed and line 59 moved into a method that returns the current model that applies to the type:

public IModel getCurrentModel(IContext context) {
  model = context.getModelRepository().getModelByName(modelName);
}

This will require most of the class methods to receive an extra IContext parameter. Since this class is used during execution the context should always be available to pass as an argument when required.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2976837</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2018-09-06 05:25:48 -0400</bug_when>
    <thetext>Unfortunately, E*L modules were not designed to be &quot;recyclable&quot; and I suspect that this is only one of many places in the codebase that need to be fixed to support reusing modules without re-parsing the underlying E*L source. Is this a blocker for your work on incremental execution or a nice-to-have feature?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2981236</commentid>
    <comment_count>3</comment_count>
    <who name="Horacio Hoyos">arcanefoam</who>
    <bug_when>2018-09-24 11:16:25 -0400</bug_when>
    <thetext>At the moment it is a nice to have feature.  Not sure if then at least we should add an &quot;exhausted/executed&quot; flag to the ExL modules to indicate that it has been executed and can/should not be reused.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3019058</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-02-25 07:12:08 -0500</bug_when>
    <thetext>Given the case presented in https://www.eclipse.org/forums/index.php/m/1803211/#msg_1803211, I was wondering whether would it be a good idea to fix this? Are there any downsides / repercussions of removing the model field from EolModelElementType and refetching it from the model repository every time (except for performance)?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3019069</commentid>
    <comment_count>5</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-02-25 07:38:33 -0500</bug_when>
    <thetext>I&apos;m in favour of getting rid of the the cached instance of IModel and re-fetching it every time we need it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3019181</commentid>
    <comment_count>6</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-02-25 12:40:03 -0500</bug_when>
    <thetext>Hi Dimitris,
Thanks for your approval.

The only issue I can see with this solution is that to keep the method signatures compatible we would need to cache the context (or at least the ModelRepository of the context) passed in the constructor. I suspect this could also be problematic with regards to module re-use.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3020431</commentid>
    <comment_count>7</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-03-01 12:59:53 -0500</bug_when>
    <thetext>In branch &apos;smadani/538175&apos; I have replaced the reference to IModel with reference to IEolModule which is obtained from the IEolContext passed to the constructor, and subsequent references to the model are obtained by calling getModel() which retrieves the module from module.getContext(). ...

This also required synchronizing the module and context relationship, so I have gone through all Epsilon languages and ensured getContext / setContext / getModule / setModule go through super rather than direct field access; except in the case of EGL due to delegation. The logic in setContext / setModule now checks for consistency (and also careful to avoid StackOverflowError).

However this has caused a few tests in HUTN and EML to fail. Either this reveals bugs which were present but unfound due to the lack of synchronization in this relationship, or the tests are mis-specified, or some bug has been introduced in the process of doing this.

I have managed to resolve these by using direct field access in setContext / setModule, but ideally we should get to the bottom of this and find the route cause.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3021251</commentid>
    <comment_count>8</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-03-05 15:53:39 -0500</bug_when>
    <thetext>Further investigation has revealed that the reason for HUTN test failures is the reliance of the Traceability tests on the order of UnsatisfiedConstraints in EVL. Providing an anonymous EvlContext with a LinkedHashSet instead of HashSet has fixed this and all tests appear to be passing.

Furthermore, it appears there are some frequent calls to EolModelElementType so I&apos;ve added a caching mechanism which checks module.getContext().getModelRepository() != cachedModelRepository and if so, the model is refetched. This allows for reuse without hampering performance.

I propose to merge the branch into master if there are no objections or further tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3021262</commentid>
    <comment_count>9</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-03-05 18:20:48 -0500</bug_when>
    <thetext>Thanks for all your hard work on this Sina! +1 to merge this into master.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3021396</commentid>
    <comment_count>10</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-03-06 07:03:47 -0500</bug_when>
    <thetext>Thanks! Unfortunately however after running the plugged-in tests I get issue with &quot;method getClassDiagram() not found&quot; in Eugenia plug-in tests. This is because the operations of the parent module are not properly imported into the current module. I suspect this must be due to assumptions somewhere in the code (perhaps in Import?) that context and module have independent relationships.

I was wondering whether it makes sense to allow contexts to be shared by modules, and/or modules to share contexts? Perhaps the enforcement should be one-sided, so for example if module.setContext is called then context.setModule is not called automatically, but if context.setModule is called then module.setContext is guaranteed to be called? Or the other way around?

A simpler solution would be to disallow sharing such that a context can only be used by one module and a module can only have one context, and try to fix the import issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3021415</commentid>
    <comment_count>11</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-03-06 08:23:06 -0500</bug_when>
    <thetext>Fixed by commenting out module.setContext(context) in Import, with seemingly no side effects or additional consequences. Also it seems sufficient for consistency checking to be done only in the module and leaving IEolContext.setModule unchanged, since IEolContext accepts IModule rather than IEolModule. All tests seem to be passing under this configuration.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3021736</commentid>
    <comment_count>12</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-03-07 04:13:17 -0500</bug_when>
    <thetext>&gt; Fixed by commenting out module.setContext(context) in Import

Intuitively this sounds like quite a big change to deal with a failing Eugenia test. Let&apos;s have a look at this together when I&apos;m back in York next week.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3023116</commentid>
    <comment_count>13</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-03-12 17:58:02 -0400</bug_when>
    <thetext>Turns out updating the context&apos;s reference to the module was not necessary, only the &quot;optimised&quot; EVL tests were failing because they don&apos;t call module.execute(). As disccused with Dimitris module imports have their contexts updated to that of their parent when calling module.setContext.

I have added &quot;EvlModuleReuseTests&quot; in 63929a8caa1fe5f564d1d1677d703ccdf3eec65f which re-executes an EvlModule that is parsed only once with new model instance / new ModelRepository / new EvlContext, with no failures.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>539444</bug_id>
          
          <creation_ts>2018-09-25 14:39:47 -0400</creation_ts>
          <short_desc>[Eugenia] Inconsistency when accessing a eugenia model file, between versions 1.4 and 1.5</short_desc>
          <delta_ts>2020-04-15 09:46:03 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Konstantinos Barmpis">konstantinos.barmpis</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2981627</commentid>
    <comment_count>0</comment_count>
    <who name="Konstantinos Barmpis">konstantinos.barmpis</who>
    <bug_when>2018-09-25 14:39:47 -0400</bug_when>
    <thetext>I have noticed that in version 1.5, when running a script on a Eugenia-based single-file EMF model, under specific conditions, there is always the following error:

-
Cannot find meta-class &apos;Diagram&apos; in model &apos;treemodel&apos;
	at org.eclipse.epsilon.emc.emf.AbstractEmfModel.classForName(AbstractEmfModel.java:214)
	at org.eclipse.epsilon.emc.emf.AbstractEmfModel.getCacheKeyForType(AbstractEmfModel.java:198)
	at org.eclipse.epsilon.eol.models.CachedModel.removeFromCache(CachedModel.java:98)
	at org.eclipse.epsilon.emc.emf.EmfModel.forceRemoveFromCache(EmfModel.java:330)
	at org.eclipse.epsilon.emc.emf.EmfModel$CachedContentsAdapter.handle(EmfModel.java:244)
	at org.eclipse.epsilon.emc.emf.EmfModel$CachedContentsAdapter.notifyChanged(EmfModel.java:198)
-

Below are the minimal steps used to reproduce this error, attempting the simplest example possible when compared to the original code this error was observed in:

1) Create a simple tree.emf metamodel in emfatic and annotate it so that a eugenia editor can be generated. For example in my case I added a root type called Forest (as a gmf.diagram) containing any number of Trees, which are gmf.node elements.
2) Create a simple model in eugenia. For example add a Tree to the diagram and name it root.
3) Run an EOL script on this model, making sure not to include the gmf/runtime/1.0.2/notation metamodel in the configuration. This is the specific condition used that introduces this inconsistency*.
4) This script will throw this error regardless of content in version 1.5 (whereas in 1.4 it did not).
5) This script and will crash if any diagram elements try to be accessed in the script. This is the case in both version 1.4 and 1.5.

* The original code ran in an eclipse with an active eugenia plugin, hence the gmf/runtime/1.0.2/notation metamodel in question was already present in the epackage registry and was used to successfully load the model in memory.

--

This is likely caused by the changes made in 1.5 in the emc.emf package, in the EMFModel.java which now has listeners. 

In version 1.4 this error is not observed and the relevant scripts (original and minimal example scripts, detailed below) run, as long as no diagram elements attempt to be accessed.

This likely reveals the limitation that Epsilon is not able to find this metamodel from the epackage registry in both versions, but in 1.4 is ignoring this issue until an element from this metamodel is actually accessed from the model.

--

MINIMAL CODE:

metamodel:

@namespace(uri=&quot;tree&quot;, prefix=&quot;tree&quot;)
@gmf
package tree;

@gmf.diagram(onefile=&quot;true&quot;)
class Forest{
  val Tree[*] trees;
}

@gmf.node(label=name)
class Tree {
  attr String name;
  @gmf.link
  val Tree[*] children;
}

eol script:

Tree.all.size.println;
t.allContents.println;
//the script will run successfully until here in both versions, but throw an exception in version 1.5
Diagram.all.println;
//the script will crash here in both versions

--</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3155465</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-15 09:46:03 -0400</bug_when>
    <thetext>This works fine with the latest interim version so I suppose that it&apos;s been fixed somewhere along the way. Please feel free to reopen if the problem shows up again.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>546289</bug_id>
          
          <creation_ts>2019-04-10 07:39:36 -0400</creation_ts>
          <short_desc>Flexmi model is wiped when running EGX with storeOnDisposal=true</short_desc>
          <delta_ts>2020-04-18 07:00:20 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sina Madani">sinadoom</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3030435</commentid>
    <comment_count>0</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-04-10 07:39:36 -0400</bug_when>
    <thetext>When running crossflow.egx (github.com/crossminer/scava) on a Flexmi model, the contents of the Flexmi file are deleted, regardless of whether an ANT script or an EGX run configuration is used. This only happens when storeOnDisposal=true.

The Crossflow generator in org.eclipse.scava.crossflow.tests/generate-all-tests.xml produces the following error:

C:\Users\kb\git\scava\crossflow\org.eclipse.scava.crossflow.tests\generate-all-tests.xml:14: java.lang.UnsupportedOperationException
at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:116)
at org.apache.tools.ant.Task.perform(Task.java:350)
at org.eclipse.epsilon.workflow.tasks.ForTask.executeImpl(ForTask.java:54)
at org.eclipse.epsilon.workflow.tasks.EpsilonTask.execute(EpsilonTask.java:40)
at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
at org.apache.tools.ant.Task.perform(Task.java:350)
at org.apache.tools.ant.Target.execute(Target.java:448)
at org.apache.tools.ant.Target.performTasks(Target.java:469)
at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
at org.apache.tools.ant.Project.executeTarget(Project.java:1370)
at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
at org.eclipse.ant.internal.core.ant.EclipseDefaultExecutor.executeTargets(EclipseDefaultExecutor.java:36)
at org.apache.tools.ant.Project.executeTargets(Project.java:1260)
at org.eclipse.ant.internal.core.ant.InternalAntRunner.run(InternalAntRunner.java:712)
at org.eclipse.ant.internal.core.ant.InternalAntRunner.run(InternalAntRunner.java:532)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.eclipse.ant.core.AntRunner.run(AntRunner.java:371)
at org.eclipse.ant.internal.launching.launchConfigurations.AntLaunchDelegate.lambda$0(AntLaunchDelegate.java:268)
at java.lang.Thread.run(Unknown Source)

Caused by: java.lang.UnsupportedOperationException
at org.eclipse.emf.ecore.resource.impl.ResourceImpl.doSave(ResourceImpl.java:1507)
at org.eclipse.emf.ecore.resource.impl.ResourceImpl.save(ResourceImpl.java:1475)
at org.eclipse.emf.ecore.resource.impl.ResourceImpl.save(ResourceImpl.java:1044)
at org.eclipse.epsilon.emc.emf.EmfModel.store(EmfModel.java:685)
at org.eclipse.epsilon.eol.models.Model.dispose(Model.java:161)
at org.eclipse.epsilon.eol.models.CachedModel.dispose(CachedModel.java:254)
at org.eclipse.epsilon.workflow.tasks.DisposeModelTask.executeImpl(DisposeModelTask.java:26)
at org.eclipse.epsilon.workflow.tasks.EpsilonTask.execute(EpsilonTask.java:40)
at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156365</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 07:00:20 -0400</bug_when>
    <thetext>Fixed in commit 56fec4a7c</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>548531</bug_id>
          
          <creation_ts>2019-06-21 18:51:22 -0400</creation_ts>
          <short_desc>Installing Eugenia should auto-install GMF</short_desc>
          <delta_ts>2020-04-09 12:47:02 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3048566</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-06-21 18:51:22 -0400</bug_when>
    <thetext>As reported in the forum: https://www.eclipse.org/forums/index.php?t=rview&amp;goto=1808314#msg_1808314

&gt;  I think If I decided to install Eugenia all dependencies should be installed automatically if no any license issues</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3154107</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-09 12:47:02 -0400</bug_when>
    <thetext>This should now be working.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>549624</bug_id>
          
          <creation_ts>2019-07-29 07:04:45 -0400</creation_ts>
          <short_desc>EVL quick-fixes don&apos;t work on Sirius diagrams</short_desc>
          <delta_ts>2019-12-04 10:54:53 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Justin Cooper">justin</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3057347</commentid>
    <comment_count>0</comment_count>
      <attachid>279418</attachid>
    <who name="Justin Cooper">justin</who>
    <bug_when>2019-07-29 07:04:45 -0400</bug_when>
    <thetext>Created attachment 279418
Minimal example

When using EVL (Epsilon version 1.5.1) with Sirius (version 6.1), quick fixes are not executed.

Please see the attached minimal example:

1. Import the all the projects under the plugins directory into a new Eclipse workspace:
2. Launch a new Eclipse runtime
3. Import the plugin contained under the example directory.
4. Expand Family TestFamily in the Project Explorer
5. Open the &quot;new Persons diagram&quot;
6. Right-click on any whitespace on the diagram and click &quot;Validate diagram&quot;
7. Right-click on the warning in the Problems view and select &quot;Quick Fix&quot;
8. Click Rename to Bob

Current behaviour: bob is not renamed, and the following error appears in the Error log 

java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:448)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:353)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:974)
	at org.eclipse.ui.internal.views.markers.QuickFixPage.performFinish(QuickFixPage.java:499)
	at org.eclipse.ui.internal.views.markers.QuickFixWizard.lambda$0(QuickFixWizard.java:80)
	at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:437)
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:353)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:974)
	at org.eclipse.ui.internal.views.markers.QuickFixWizard.performFinish(QuickFixWizard.java:85)
	at org.eclipse.jface.wizard.WizardDialog.finishPressed(WizardDialog.java:772)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:411)
	at org.eclipse.jface.dialogs.Dialog.lambda$0(Dialog.java:619)
	at org.eclipse.swt.events.SelectionListener$1.widgetSelected(SelectionListener.java:81)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:249)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:86)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4118)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1052)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3931)

Expected behaviour: bob is renamed to Bob</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3057549</commentid>
    <comment_count>1</comment_count>
      <attachid>279433</attachid>
    <who name="Justin Cooper">justin</who>
    <bug_when>2019-07-30 05:24:38 -0400</bug_when>
    <thetext>Created attachment 279433
SiriusMarkerResolver patch</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>279418</attachid>
            <date>2019-07-29 07:04:45 -0400</date>
            <delta_ts>2019-07-29 07:04:45 -0400</delta_ts>
            <desc>Minimal example</desc>
            <filename>sirius-bug-minimal-example.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>225798</size>
            <attacher name="Justin Cooper">justin</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>279433</attachid>
            <date>2019-07-30 05:24:38 -0400</date>
            <delta_ts>2019-07-30 05:24:38 -0400</delta_ts>
            <desc>SiriusMarkerResolver patch</desc>
            <filename>SiriusMarkerResolver.java</filename>
            <type>text/plain</type>
            <size>3668</size>
            <attacher name="Justin Cooper">justin</attacher>
            
<flag name="review"
          id="68505"
          type_id="6"
          status="?"
          setter="justin"
    />
          </attachment>
      

    </bug>
    <bug>
          <bug_id>549627</bug_id>
          
          <creation_ts>2019-07-29 07:43:42 -0400</creation_ts>
          <short_desc>EVL validation not executed when an EMF validation is performed on a model element</short_desc>
          <delta_ts>2019-12-04 10:55:43 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Justin Cooper">justin</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3057359</commentid>
    <comment_count>0</comment_count>
      <attachid>279421</attachid>
    <who name="Justin Cooper">justin</who>
    <bug_when>2019-07-29 07:43:42 -0400</bug_when>
    <thetext>Created attachment 279421
Minimal example

EVL validation not executed when an EMF validation is performed on a model element in the tree-based editor.

Please see the attached minimal example:
1. Import the all the projects under the plugins directory into a new Eclipse workspace:
2. Launch a new Eclipse runtime
3. Import the plugin contained under the example directory.
4. Open My.basicfamily in the EMF tree-based editor
5. Expand Family TestFamily and right-click on the âManâ model element (below Man man1) and select âValidateâ. 

Expected behaviour: Validation fails, noting that a Man model element must have a name

Actual behaviour:  Validation completes successfully, showing no errors.

Interestingly, if you then select âFamily TestFamilyâ, right-click and validate, all the errors are correctly displayed. If you then now go to the âManâ model element, right-click and select validate, the validation fails, noting that a Man model element must have a name (expected behaviour).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3057555</commentid>
    <comment_count>1</comment_count>
      <attachid>279435</attachid>
    <who name="Justin Cooper">justin</who>
    <bug_when>2019-07-30 05:46:32 -0400</bug_when>
    <thetext>Created attachment 279435
EvlValidator patch</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>279421</attachid>
            <date>2019-07-29 07:43:42 -0400</date>
            <delta_ts>2019-07-29 07:43:42 -0400</delta_ts>
            <desc>Minimal example</desc>
            <filename>emf-evl-minimal-example.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>224465</size>
            <attacher name="Justin Cooper">justin</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>279435</attachid>
            <date>2019-07-30 05:46:32 -0400</date>
            <delta_ts>2019-07-30 05:46:32 -0400</delta_ts>
            <desc>EvlValidator patch</desc>
            <filename>EvlValidator.java</filename>
            <type>text/plain</type>
            <size>12338</size>
            <attacher name="Justin Cooper">justin</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>549761</bug_id>
          
          <creation_ts>2019-08-03 03:33:26 -0400</creation_ts>
          <short_desc>Method not found after calling template.append() in EGL</short_desc>
          <delta_ts>2019-08-29 07:47:59 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3058369</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-08-03 03:33:26 -0400</bug_when>
    <thetext>Minimal example below:

[%
processTemplate();
// This one throws a Method &apos;processTemplate&apos; not found
processTemplate();

operation processTemplate() {
	&quot;In processTemplate()&quot;.println();
	// template.egl is an empty file
	TemplateFactory.load(&quot;template.egl&quot;).append(&quot;out.txt&quot;);
}
%]

This works fine in 1.5.1 but produces an error in 1.6</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3058384</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-08-03 06:13:47 -0400</bug_when>
    <thetext>I&apos;m having trouble reproducing this, because there is no such method called &quot;append&quot; on EglTemplate (the result of calling TemplateFactory.load). With the call to append commented out it works as expected.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3058395</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-08-03 08:09:55 -0400</bug_when>
    <thetext>Thanks for looking into this Sina! In my version, .load() returns an EglFileGeneratingTemplate, which has an append() method. Could this discrepancy be due to the change made to EglTemplateFactoryModuleAdapter in https://git.eclipse.org/c/epsilon/org.eclipse.epsilon.git/commit/?id=aedecf61643d409d9a3103848b9dfc9a0ae53630?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3058397</commentid>
    <comment_count>3</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-08-03 08:27:43 -0400</bug_when>
    <thetext>Hi Dimitris,
Yes you&apos;re right, I suppose it depends on how the example is run. I&apos;m using the following code:

public class E16bugs {
    public static void main(String[] args) throws Exception {
        var tf = new EglTemplateFactory();
	tf.setTemplateRoot(E16bugs.class.getResource(&quot;&quot;).toString());
	var module = new EglTemplateFactoryModuleAdapter(tf);
	var resource = E16bugs.class.getResource(&quot;minimal.egl&quot;);
	module.parse(resource);
	System.out.println(module.execute());
    }
}

I have tried using the &quot;merge&quot; method instead and now I see the bug. Very strange that a &quot;Method not found&quot; exception is produced when the problem occurs in invoking the &quot;merge&quot; (or &quot;append&quot;) method on the template.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3058398</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-08-03 08:33:39 -0400</bug_when>
    <thetext>Yes - you&apos;re right; I forgot to mention that I used a standard EGL run configuration to run this example. I suspect that the first execution of merge/append has some unintended side-effect that prevents the correct resolution of the second call of processTemplate().</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3064920</commentid>
    <comment_count>5</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-08-29 07:47:59 -0400</bug_when>
    <thetext>It seems the issue was to do with the EglContext&apos;s module being set to that of the executing EglTemplate but never reset back, so the &quot;processTemplate&quot; operation (in template.egl) did not exist. I&apos;ve implemented a workaround in 8be4cf686b26c6a7b96ca4a1037ecc7d53879169, though time will tell if this &quot;fix&quot; creates other issues.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>549762</bug_id>
          
          <creation_ts>2019-08-03 03:39:20 -0400</creation_ts>
          <short_desc>Method id() not found on model elements</short_desc>
          <delta_ts>2019-08-03 07:39:13 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3058370</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-08-03 03:39:20 -0400</bug_when>
    <thetext>Model elements have a built-in id() method contributed by ModelElementOperationContributor. This method works fine in 1.5.1 but doesn&apos;t seem to be working in 1.6. This can be reproduced by running the following EOL statement against any Ecore (meta)model containing an EPackage: EPackage.all.first.id().println();</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3058394</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-08-03 07:39:13 -0400</bug_when>
    <thetext>Fixed in aedecf61643d409d9a3103848b9dfc9a0ae53630.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>551531</bug_id>
          
          <creation_ts>2019-09-26 11:13:20 -0400</creation_ts>
          <short_desc>[EVL] Using two EVL files that specify validation rules for the same metamodel only executes rules of one of the files.</short_desc>
          <delta_ts>2020-04-18 15:13:40 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Bart Meyers">bart.meyers</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>dieter.vanderbeken_dekimo</cc>
    
    <cc>maarten.bezemer</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3083255</commentid>
    <comment_count>0</comment_count>
    <who name="Bart Meyers">bart.meyers</who>
    <bug_when>2019-09-26 11:13:20 -0400</bug_when>
    <thetext>Using two EVL files that specify validation rules for the same metamodel only executes rules of one of the files.

This occurred when using Epsilon Interim with XText integration (see https://www.eclipse.org/forums/index.php?t=msg&amp;th=1099860&amp;goto=1810082&amp;#msg_1810082).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3083950</commentid>
    <comment_count>1</comment_count>
      <attachid>280086</attachid>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-09-29 09:38:17 -0400</bug_when>
    <thetext>Created attachment 280086
Minimal example

I can&apos;t seem to be able to reproduce this using the minimal example attached. Could you please provide an example that demonstrates this behaviour?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3084658</commentid>
    <comment_count>2</comment_count>
      <attachid>280116</attachid>
    <who name="Dieter Vanderbeken">dieter.vanderbeken_dekimo</who>
    <bug_when>2019-10-01 08:56:15 -0400</bug_when>
    <thetext>Created attachment 280116
Example to demonstrate the EVL quick fix bug

I have added a small example to demonstrate the EVL quick fix bug when using 2 or more EVL files for the same metamodel.
In the ZIP file you will find the following folders :
 * com.dana.aset.demo : in here you will find the metamodel,
 * com.dana.aset.xtext.asettest.* : the xtext project,
 * com.dana.aset.evl : the EVL project,
 * Screenshots : to illustrate what exactly is the problem.

If you run the evl project and validate the source file &apos;EDLBlock.asettest&apos;, then 2 errors will be shown. The first error &apos;Block block1 without text is not allowed!&apos; is from the Block element and is defined in the file &apos;asetTestBlockEvl.evl&apos;. The second error &apos;This lowest level functional stakeholder requirement is not connected to any activity!!&apos; is from the Requirement element and is defined in the file &apos;asetTestRequirementEvl.evl&apos;. This is correct and is illustrated in image &apos;EvlValidationResultOnSourceFile_Correct.jpg&apos;.

If you then try to perform a quick fix on the first error (the Block error), then no fix is suggested (= see image &apos;PerformQuickFixOnErrorBlock_NoFixIsShown_NotCorrect.jpg&apos;). This is not expected. But if you try to perform a quick fix on the second error (the Requirement error), then the fix is suggested as expected (= see image &apos;PerformQuickFixOnErrorRequirement_FixIsShown_Correct.jpg&apos;). Fixing the error with the suggested fix also works as expected.

Interesting fact : if you then just switch the order of the constraintsBindings in the manifest, then you get the exact opposite results. The Block error then shows the suggested fix (= image &apos;PerformQuickFixOnErrorBlock_EvlPluginSwitch_FixIsShown_Correct.jpg&apos;) and the Requirement error no longer shows his fix (= image &apos;PerformQuickFixOnErrorRequirement_EvlPluginSwitch_NoFixIsShown_NotCorrect.jpg&apos;).

My configuration :
 * Eclipse IDE : 2019-09 R (4.13.0)
 * Xtext : 2.19.0
 * Epsilon : 1.6.0</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3093004</commentid>
    <comment_count>3</comment_count>
    <who name="Bart Meyers">bart.meyers</who>
    <bug_when>2019-11-05 09:55:12 -0500</bug_when>
    <thetext>Can this issue be reproduced and confirmed?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3093282</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-11-06 07:12:33 -0500</bug_when>
    <thetext>How are you able to execute two EVL scripts over one model? Is each one executed in a separate instance? From the provided examples it appears the two are completely independent (one does not import the other).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3094619</commentid>
    <comment_count>5</comment_count>
    <who name="Dieter Vanderbeken">dieter.vanderbeken_dekimo</who>
    <bug_when>2019-11-08 10:15:28 -0500</bug_when>
    <thetext>Yes the 2 EVL scripts are mapped to the same model and they are executed in the same instance. However, the scripts are targeting a different part of the model so they are indeed independent from eachother.

And just to be clear on this, errors and warnings (constraints and critiques) from both the EVL scripts are working correctly on the model. I see the correct indications on the model and I am able to fix the complains in runtime on the model just as expected. The issue is the quick fix that only appears on the constraints from 1 EVL script. And as mentioned before, the script that does show its quick fixes seems to be dependent on the order in which the EVL scripts are placed in the plugin.xml file.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156429</commentid>
    <comment_count>6</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 14:25:05 -0400</bug_when>
    <thetext>It appears that there&apos;s an implicit assumption that no more than one quick-fix-contributing EvlValidator is involved in the validation of each Resource. A workaround would be to import the two EVL files from a 3rd EVL file and use one extension instead of two.

Bart, Daniel: I appreciate that this reply comes too late to be useful but hopefully this will be helpful to others in the future. I don&apos;t expect a response several months after this was reported so I&apos;m resolving as WONTFIX given that a workaround seems fairly straightforward, but please feel free to reopen if this is not the case.

Note to contributors/committers: If we wanted to support multiple quick-fix-contributing EvlValidators per resource in the future, we&apos;d need to record which EvlValidator produced which resolution in EvlMarkerResolutionGenerator and remove resolutions by EvlValidator by adding an EvlValidator parameter to addResolution and removeFixesFor.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3156457</commentid>
    <comment_count>7</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-18 15:13:40 -0400</bug_when>
    <thetext>*** Bug 380692 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>280086</attachid>
            <date>2019-09-29 09:38:17 -0400</date>
            <delta_ts>2019-09-29 09:38:17 -0400</delta_ts>
            <desc>Minimal example</desc>
            <filename>bug551531.zip</filename>
            <type>application/zip</type>
            <size>2578</size>
            <attacher name="Dimitris Kolovos">dkolovos</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>280116</attachid>
            <date>2019-10-01 08:56:15 -0400</date>
            <delta_ts>2019-10-01 08:56:15 -0400</delta_ts>
            <desc>Example to demonstrate the EVL quick fix bug</desc>
            <filename>EvlAsetDemo.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>2032356</size>
            <attacher name="Dieter Vanderbeken">dieter.vanderbeken_dekimo</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>553123</bug_id>
          
          <creation_ts>2019-11-16 15:13:31 -0500</creation_ts>
          <short_desc>Request to Add Epsilon Model Generation Language (EMG) to the Epsilon Framework</short_desc>
          <delta_ts>2019-12-15 18:14:18 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Saheed Popoola">popsap4me</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>basp91</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3098182</commentid>
    <comment_count>0</comment_count>
      <attachid>280664</attachid>
    <who name="Saheed Popoola">popsap4me</who>
    <bug_when>2019-11-16 15:13:31 -0500</bug_when>
    <thetext>Created attachment 280664
The zip file contains java code for EMG

This is a request to add the Epsilon Model Generation Language (EMG) to the Epsilon framework. The EMG code is attached with this request.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3103695</commentid>
    <comment_count>1</comment_count>
    <who name="Beatriz Sanchez">basp91</who>
    <bug_when>2019-12-04 08:55:20 -0500</bug_when>
    <thetext>In process, see https://dev.eclipse.org/ipzilla/show_bug.cgi?id=21166</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3124551</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-12-15 18:14:18 -0500</bug_when>
    <thetext>Added in b3817cbf00c37bb1effcb501f45a45bca2f27394</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>280664</attachid>
            <date>2019-11-16 15:13:31 -0500</date>
            <delta_ts>2019-11-16 15:13:31 -0500</delta_ts>
            <desc>The zip file contains java code for EMG</desc>
            <filename>emg.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>747959</size>
            <attacher name="Saheed Popoola">popsap4me</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>558457</bug_id>
          
          <creation_ts>2019-12-19 06:20:32 -0500</creation_ts>
          <short_desc>Latest interim updatesite cannot be used to install epsilon on clean eclipse 2019 9</short_desc>
          <delta_ts>2020-02-17 06:38:12 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Konstantinos Barmpis">konstantinos.barmpis</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>agarcdomi</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3125505</commentid>
    <comment_count>0</comment_count>
      <attachid>281271</attachid>
    <who name="Konstantinos Barmpis">konstantinos.barmpis</who>
    <bug_when>2019-12-19 06:20:32 -0500</bug_when>
    <thetext>Created attachment 281271
error when trying to update epsilon in eclipse 2019

When trying to update epsilon from version 1.6.0.201912062033 to the current interim one, the following error is observed:</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3125506</commentid>
    <comment_count>1</comment_count>
      <attachid>281272</attachid>
    <who name="Konstantinos Barmpis">konstantinos.barmpis</who>
    <bug_when>2019-12-19 06:23:49 -0500</bug_when>
    <thetext>Created attachment 281272
error when trying to install epsilon in eclipse 2019

similarly, when trying to install epsilon in a clean eclipse 2019, the following is observed:</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3125548</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-12-19 09:27:08 -0500</bug_when>
    <thetext>This was happening because of EMG&apos;s dependency to apache.commons.math3. I&apos;ve removed EMG from the core and core.dt features for now but in the next iteration we should make Epsilon&apos;s P2 site a composite one and get it to point to Orbit (+GMF/QVTo/Emfatic ideally)

Antonio: any thoughts on how we could do this in Tycho?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3138646</commentid>
    <comment_count>3</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2020-02-13 04:47:44 -0500</bug_when>
    <thetext>Sorry, just noticed this lying around in my inbox!

We do not need Tycho for composite update sites, as these are simply static XML files with several references to other update sites. They don&apos;t really need to be built in CI: we only need to create and upload them once.

In the original MONDO Hawk, we had an Ant file which produced a composite update site here:

https://github.com/mondo-project/mondo-hawk/blob/master/releng/org.hawk.updatesite/generate-composite-site.xml

It&apos;d be enough to set up a similar update site that combined the Epsilon interim update site, Orbit and other required update sites, and upload that to download.eclipse.org. In Hawk, this composite update site was in /updates, whereas the actual Hawk update site was in /hawk-updates/VERSION.

Let me know what sort of URL scheme you would like. I guess the current /interim could become the composite interim update site, and then you could have Tycho maintain specific /epsilon/VERSION update sites (where you could have /epsilon/1.6.0.interim as the interim site, and then stable releases would have specific numbers like /epsilon/1.6.0.201912062033).

For the stable version, /updates would be the composite update site, combining Orbit and the relevant /epsilon/VERSION update site.

What do you think?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3138850</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-02-13 15:22:45 -0500</bug_when>
    <thetext>Thanks for picking this up Antonio! I&apos;m happy with anything you suggest really. Is there any chance that you&apos;d be able to set this up?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3139702</commentid>
    <comment_count>5</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2020-02-17 06:38:12 -0500</bug_when>
    <thetext>Sure, though probably not this week :-). I&apos;ll reserve a slot for it at the beginning of next week.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>281271</attachid>
            <date>2019-12-19 06:20:32 -0500</date>
            <delta_ts>2019-12-19 06:20:32 -0500</delta_ts>
            <desc>error when trying to update epsilon in eclipse 2019</desc>
            <filename>epsilon update.png</filename>
            <type>image/png</type>
            <size>121993</size>
            <attacher name="Konstantinos Barmpis">konstantinos.barmpis</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>281272</attachid>
            <date>2019-12-19 06:23:49 -0500</date>
            <delta_ts>2019-12-19 06:23:49 -0500</delta_ts>
            <desc>error when trying to install epsilon in eclipse 2019</desc>
            <filename>epsilon install.png</filename>
            <type>image/png</type>
            <size>56620</size>
            <attacher name="Konstantinos Barmpis">konstantinos.barmpis</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>558543</bug_id>
          
          <creation_ts>2019-12-21 06:40:37 -0500</creation_ts>
          <short_desc>Calling operations with -&gt; in EGL broken</short_desc>
          <delta_ts>2019-12-22 04:49:29 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3126050</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-12-21 06:40:37 -0500</bug_when>
    <thetext>The following EGL template works fine with Epsilon 1.5 but produces a parse error in 1.6

[%
Sequence{}-&gt;select(e|true);
%]

This doesn&apos;t seem to be an EOL problem as the statement parses file in an EOL module.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3126051</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-12-21 06:41:08 -0500</bug_when>
    <thetext>*parses file -&gt; parses fine</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3126144</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-12-21 20:46:38 -0500</bug_when>
    <thetext>I think I&apos;ve found the cause. In EglToken, the identifier used in the adapt() method of EglModule is 4 + 7 = 11. I looked in Eol.tokens, and as expected, the identifier for ARROW=11.

I&apos;m wondering what is the best way to avoid this overlap, so that any future changes to the grammar don&apos;t generate conflicting numbers?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3126145</commentid>
    <comment_count>3</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-12-21 21:08:22 -0500</bug_when>
    <thetext>I&apos;ve pushed a fix for this specific bug in 64253de42734a150696e10a3ae1bead4cffcad34 by increasing the minimum value of EglToken identifiers. I presume this is specific to EGL as I&apos;m guessing the other Epsilon languages don&apos;t add custom tokens, lexers etc. so one would expect ANTLR prevents overlapping tokens automatically.

Perhaps in this case the fact that there was no conflict before 1.6 was pure luck.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3126167</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-12-22 04:49:29 -0500</bug_when>
    <thetext>Thanks for looking into this Sina! In the 1.5 version of EglModule (e.g.), adapt() didn&apos;t call super.adapt() so any overlap between EGL and EOL token ids was inconsequential. Since it needs to do so now, the proposed solution looks sensible.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>558544</bug_id>
          
          <creation_ts>2019-12-21 06:52:58 -0500</creation_ts>
          <short_desc>EGL include(...) does not work when called from EGX-invoked template</short_desc>
          <delta_ts>2019-12-21 08:59:24 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>sinadoom</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3126053</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-12-21 06:52:58 -0500</bug_when>
    <thetext>With reference to the following programs, when foo.egl is executed directly through a run configuration its call to include(..) works fine, but when it is executed through foo.egx it produces a &quot;Method &apos;include&apos; not found&quot; exception in 1.6. This works fine in 1.5.

foo.egx
---
rule Foo {
  template : &quot;foo.egl&quot;
  target : &quot;foo.txt&quot;
}

foo.egl
---
[%include(&quot;bar.egl&quot;);%]

bar.egl
---
Hello world</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3126065</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-12-21 08:59:24 -0500</bug_when>
    <thetext>Added to test suite and fixed in 5e57faced446618ca8d2fb4812068626375e0d12</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>559423</bug_id>
          
          <creation_ts>2020-01-22 11:00:48 -0500</creation_ts>
          <short_desc>Local variables not disposed in switch cases</short_desc>
          <delta_ts>2020-01-24 15:15:19 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sina Madani">sinadoom</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3133222</commentid>
    <comment_count>0</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-01-22 11:00:48 -0500</bug_when>
    <thetext>See https://www.eclipse.org/forums/index.php?t=msg&amp;th=1086689&amp;goto=1807582&amp;#msg_1807582

I&apos;m guessing this is unintentional. The cause of this is that the body of a switch is treated as a StatementBlock with no scope management.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3133995</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-01-24 15:15:19 -0500</bug_when>
    <thetext>Fixed in 66bb3a6704fe42437f75201c5ac8c1ee9b2aca93.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>560290</bug_id>
          
          <creation_ts>2020-02-18 13:57:48 -0500</creation_ts>
          <short_desc>EGX grammar allows arbitrary number of component blocks</short_desc>
          <delta_ts>2020-02-19 03:56:33 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sina Madani">sinadoom</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3140301</commentid>
    <comment_count>0</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-02-18 13:57:48 -0500</bug_when>
    <thetext>In EGX, the ANTLR parse rule for GenerationRule contains the following:

(guard | target | template | parameters | pre | post | overwrite | merge)*

This means that it is syntactically valid for a GenerationRule to have infinitely many of these blocks, declared in any order. However the corresponding AST class (GenerationRule.java) assumes that there will only be a single one of these constructs, all of which are optional.

Furthermore, the fact that these can be declared in any order may be confusing to some users, since the execution of each of these blocks has a predefined order -- see GenerationRule.execute(IEolContext, Object). This order matters because of variable scoping, and conformance with user expectations. For example, the guard is executed before the pre, but this is not obvious because the syntax permits definitions in any order.

I propose to change the fragment of the grammar to the following:

guard? pre? overwrite? merge? template? parameters? target? post?

This ensures there is at most a single block of each type, and the order reflects the execution semantics. However the forced ordering would break backwards compatibility, so understandably this may never happen.

In any case, it is clearly not intended for multiple instances of each component block to exist within a generation rule.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3140308</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-02-18 14:17:09 -0500</bug_when>
    <thetext>I understand the issue but the proposed change could break existing transformations (e.g. I tend to put my overwrite/merge/parameters before the template - others may have adopted other preferred orders). Ideally, what we need is a way to express that we expect at most one of these components, but in no particular order. If we can&apos;t express this in ANTLR, we can leave the grammar as is and add a warning to module.getParseProblems() in GenerationRule&apos;s build() method.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3140309</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-02-18 14:30:37 -0500</bug_when>
    <thetext>According to https://stackoverflow.com/a/14946106/5870336, it seems the most straightforward way is to generate all possible permutations, but since each one is optional, it probably isn&apos;t feasible; at least not without making the grammar unreadable. I suppose it&apos;s another limitation of ANTLR.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3140339</commentid>
    <comment_count>3</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-02-18 17:02:11 -0500</bug_when>
    <thetext>I have added some warnings for this as suggested in 5a7dbfa50c67024793b24cfb2947f44e2e969a77. However currently it does not give line numbers.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3140473</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-02-19 03:56:33 -0500</bug_when>
    <thetext>Great - thanks! I&apos;ve tweaked the code to report these problems in the context of the parent rule.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>560850</bug_id>
          
          <creation_ts>2020-03-06 07:14:13 -0500</creation_ts>
          <short_desc>[Picto] Static binary folder used in graphviz transformation does not work in unix systems</short_desc>
          <delta_ts>2020-03-06 07:20:59 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Alfonso de la Vega">alfonso.delavega</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3145364</commentid>
    <comment_count>0</comment_count>
      <attachid>282030</attachid>
    <who name="Alfonso de la Vega">alfonso.delavega</who>
    <bug_when>2020-03-06 07:14:13 -0500</bug_when>
    <thetext>Created attachment 282030
Patch to fix unix and mac paths when looking for binaries

The static folder &quot;/usr/local/bin&quot; is appended for finding graphviz transformation programs (e.g. dot) when rendering the Picto view.

This folder is not the adequate one in unix systems, at least when using the dot program, which by default can be found in &quot;/usr/bin&quot;.

The attached patch simply determines if the system is mac or unix and uses the appropriate folder respectively.

This patch mitigates the problem but a better solution would involve working with the system $PATH variable to find the programs to execute.


Reproducibility: use a linux system with a usual installation of the graphviz program and the last interim version of Picto to visualize a .dot file, and dot will not be found.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3145370</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-03-06 07:20:59 -0500</bug_when>
    <thetext>Many thanks! Patch applied in https://git.eclipse.org/c/epsilon/org.eclipse.epsilon.git/commit/?id=bb50ec005597667d877c003b404396ffffc37de0</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>282030</attachid>
            <date>2020-03-06 07:14:13 -0500</date>
            <delta_ts>2020-03-06 07:14:13 -0500</delta_ts>
            <desc>Patch to fix unix and mac paths when looking for binaries</desc>
            <filename>picto-dotProcessing-unix-mac.patch</filename>
            <type>text/plain</type>
            <size>932</size>
            <attacher name="Alfonso de la Vega">alfonso.delavega</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>560908</bug_id>
          
          <creation_ts>2020-03-09 06:49:13 -0400</creation_ts>
          <short_desc>Add a filter to the EPackage registry view</short_desc>
          <delta_ts>2020-03-10 08:51:23 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Alfonso de la Vega">alfonso.delavega</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3145896</commentid>
    <comment_count>0</comment_count>
      <attachid>282049</attachid>
    <who name="Alfonso de la Vega">alfonso.delavega</who>
    <bug_when>2020-03-09 06:49:13 -0400</bug_when>
    <thetext>Created attachment 282049
Patch to provide the filter to the epackage registry view. Some changes to the view and a new filter tree that allows manual clearing

This patch provides with a text filter to the epackage registry view (top view).

The introduced text is used to search for EPackages and nested EClasses names, showing also those matching EClasses belonging to a non-matching EPackage.

To clear the filter, the clear button can be used. More conveniently, double-clicking in an EPackage also clears the filter so all its contents (and the contents of the rest) are shown again.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3146186</commentid>
    <comment_count>1</comment_count>
      <attachid>282071</attachid>
    <who name="Alfonso de la Vega">alfonso.delavega</who>
    <bug_when>2020-03-10 07:59:13 -0400</bug_when>
    <thetext>Created attachment 282071
New patch that solves an issue in the previous one so that selection history works properly

I have just updated the original patch with a new one that takes care about some problems with the management of the history when selecting elements in the top view and using the back button to move to previous selections.

Maybe this bug was present and unrelated to the addition of the filter view, as I changed an index removal in the management of the history list (line 307 of the patched PackageRegistryExplorerView).

If there are still problems due to asynchronous behavior / races between threads, my current, somewhat slow-for-this-test laptop does not detect them, the history works fine.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3146198</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-03-10 08:51:23 -0400</bug_when>
    <thetext>Many thanks for contributing this patch! I&apos;ve tweaked it slightly and applied in in https://git.eclipse.org/c/epsilon/org.eclipse.epsilon.git/commit/?id=b1c107088909dcb273d66eac06a70a9d00d959a6</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>282049</attachid>
            <date>2020-03-09 06:49:13 -0400</date>
            <delta_ts>2020-03-10 07:59:13 -0400</delta_ts>
            <desc>Patch to provide the filter to the epackage registry view. Some changes to the view and a new filter tree that allows manual clearing</desc>
            <filename>packageRegistryView-withFilter.patch</filename>
            <type>text/plain</type>
            <size>5862</size>
            <attacher name="Alfonso de la Vega">alfonso.delavega</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>282071</attachid>
            <date>2020-03-10 07:59:13 -0400</date>
            <delta_ts>2020-03-10 07:59:13 -0400</delta_ts>
            <desc>New patch that solves an issue in the previous one so that selection history works properly</desc>
            <filename>packageRegistryView-withFilter-FixedHistory.patch</filename>
            <type>text/plain</type>
            <size>6039</size>
            <attacher name="Alfonso de la Vega">alfonso.delavega</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>561020</bug_id>
          
          <creation_ts>2020-03-11 05:57:52 -0400</creation_ts>
          <short_desc>Improve dark theme colors for the Flexmi editor</short_desc>
          <delta_ts>2020-03-24 14:25:42 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Alfonso de la Vega">alfonso.delavega</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3146419</commentid>
    <comment_count>0</comment_count>
      <attachid>282084</attachid>
    <who name="Alfonso de la Vega">alfonso.delavega</who>
    <bug_when>2020-03-11 05:57:52 -0400</bug_when>
    <thetext>Created attachment 282084
Patch to fix flexmi dark theme and to improve the color manager of the editor

The colors of the Flexmi editor were not adapted for the use of a dark theme, so the text was difficult to read.

This patch selects more appropriate colors for the dark theme, and also improves the ColorManager of the Flexmi editor for the changes that are to come (e.g. allowing customization of font colors in the Eclipse preferences).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3146420</commentid>
    <comment_count>1</comment_count>
      <attachid>282085</attachid>
    <who name="Alfonso de la Vega">alfonso.delavega</who>
    <bug_when>2020-03-11 05:58:38 -0400</bug_when>
    <thetext>Created attachment 282085
Flexmi light vs dark editor colors

I also included a screenshot of the light and dark color representations in Flexmi. I chose the colors that looked better for me, suggestions are welcome.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3146436</commentid>
    <comment_count>2</comment_count>
      <attachid>282086</attachid>
    <who name="Alfonso de la Vega">alfonso.delavega</who>
    <bug_when>2020-03-11 06:55:45 -0400</bug_when>
    <thetext>Created attachment 282086
Patch that fixes small typo in previous one (forgot deleting an operation call)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3149655</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-03-24 14:25:42 -0400</bug_when>
    <thetext>Thanks Alfonso! The patch has now been applied.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>282084</attachid>
            <date>2020-03-11 05:57:52 -0400</date>
            <delta_ts>2020-03-11 06:55:45 -0400</delta_ts>
            <desc>Patch to fix flexmi dark theme and to improve the color manager of the editor</desc>
            <filename>flexmi-fixDarkTheme.patch</filename>
            <type>text/plain</type>
            <size>10329</size>
            <attacher name="Alfonso de la Vega">alfonso.delavega</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>282085</attachid>
            <date>2020-03-11 05:58:38 -0400</date>
            <delta_ts>2020-03-11 05:58:38 -0400</delta_ts>
            <desc>Flexmi light vs dark editor colors</desc>
            <filename>flexmiLightvsDark.png</filename>
            <type>image/png</type>
            <size>260540</size>
            <attacher name="Alfonso de la Vega">alfonso.delavega</attacher>
            

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>282086</attachid>
            <date>2020-03-11 06:55:45 -0400</date>
            <delta_ts>2020-03-11 06:55:45 -0400</delta_ts>
            <desc>Patch that fixes small typo in previous one (forgot deleting an operation call)</desc>
            <filename>flexmi-fixDarkThemeV2.patch</filename>
            <type>text/plain</type>
            <size>10490</size>
            <attacher name="Alfonso de la Vega">alfonso.delavega</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>561201</bug_id>
          
          <creation_ts>2020-03-17 15:13:50 -0400</creation_ts>
          <short_desc>Include support for customising color preferences for the Epsilon editors</short_desc>
          <delta_ts>2020-03-17 19:24:33 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Alfonso de la Vega">alfonso.delavega</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3147906</commentid>
    <comment_count>0</comment_count>
      <attachid>282129</attachid>
    <who name="Alfonso de la Vega">alfonso.delavega</who>
    <bug_when>2020-03-17 15:13:50 -0400</bug_when>
    <thetext>Created attachment 282129
Patch that provides color preferences for Epsilon (and Flexmi) editors

The attached patch provides with Syntax Coloring preference pages for customising the colors of Epsilon editors.

There are two preference pages: a general one for most of the Epsilon languages under Epsilon -&gt; Syntax Coloring, and a specific one for the Flexmi editor under Flexmi -&gt; Syntax Coloring.

I have tried to thoroughly test the window preferences with all the colors of all the different editors. Precisely:

- All colors change and go back to default as expected.
- Window preferences load and look fine if no editors are opened in the workspace.
- Changes in the workspace theme update the associated default colors.
- Theme changes respect user preferences.
- When applying new color preferences, editors are automatically updated and changes can be checked from the window dialog page. No need to restart anything.
- &quot;Apply&quot;, &quot;Apply and Close&quot; and &quot;Cancel&quot; buttons work consistently with respect to the other windows of the preferences menu.

Also, while checking the application of colors for the general Epsilon editor, I detected some bugs in the editor scanner (plugins/org.eclipse.epsilon.common.dt/src/org/eclipse/epsilon/common/dt/editor/AbstractModuleEditorScanner.java). For instance, assertion and default colors were not properly showing and thus they could not be changed. These errors are fixed now.

As testing this is somewhat tedious, any help with checking that the color preferences of the patch work properly is very welcome. Also, any suggestion for changing default colors is welcome too.

Cheers,
Alfonso</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3147946</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-03-17 19:24:33 -0400</bug_when>
    <thetext>Many thanks! Patch merged in commit e7152d9e3b8bf3e526b239ce56e416bf5d755c0f</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>282129</attachid>
            <date>2020-03-17 15:13:50 -0400</date>
            <delta_ts>2020-03-17 15:13:50 -0400</delta_ts>
            <desc>Patch that provides color preferences for Epsilon (and Flexmi) editors</desc>
            <filename>epsilonColorPreferencePages.patch</filename>
            <type>text/plain</type>
            <size>57355</size>
            <attacher name="Alfonso de la Vega">alfonso.delavega</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>561586</bug_id>
          
          <creation_ts>2020-03-30 09:26:25 -0400</creation_ts>
          <short_desc>org.antlr.runtime not included in Interim epsilon-core.jar</short_desc>
          <delta_ts>2020-03-31 18:11:11 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sina Madani">sinadoom</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3150851</commentid>
    <comment_count>0</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-03-30 09:26:25 -0400</bug_when>
    <thetext>Since we are now using Orbit for ANTLR, we need to add ANTLR to the standalone JAR.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3151400</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-03-31 18:11:11 -0400</bug_when>
    <thetext>This is fixed now.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>562421</bug_id>
          
          <creation_ts>2020-04-22 20:01:58 -0400</creation_ts>
          <short_desc>Add concurrent collection types</short_desc>
          <delta_ts>2020-04-22 20:02:36 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sina Madani">sinadoom</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3157527</commentid>
    <comment_count>0</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-22 20:01:58 -0400</bug_when>
    <thetext>Adding this to Bugzilla for completeness / consistency so that it comes up in the &quot;bug fixed&quot; and we have a record of it.

Now that we have parallel execution capabilities for EOL, EVL and EGX, we should also add thread-safe collections (e.g. Map, Set, Bag) so that users do not need to fish around for native types in the pre block of ERL programs.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3157529</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-22 20:02:36 -0400</bug_when>
    <thetext>Added in ed2febd962315c84265f4022e72a26671af38827.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>562534</bug_id>
          
          <creation_ts>2020-04-27 14:12:55 -0400</creation_ts>
          <short_desc>Make PlainXmlModel thread-safe</short_desc>
          <delta_ts>2020-04-29 14:57:11 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sina Madani">sinadoom</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3158447</commentid>
    <comment_count>0</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-27 14:12:55 -0400</bug_when>
    <thetext>Due to a combination of the current design of IPropertyGetter / IPropertySetter and the PlainXmlPropertyGetter implementation, querying a PlainXmlModel is not thread-safe. To prove this, try uncommenting line 62 of EplAcceptanceTestUtil and running EplTests. The tests will fail (run it a few times). Then make the following change in PlainXmlModel:

	public PlainXmlModel() {
		propertyGetter = new PlainXmlPropertyGetter(this);
	}
	
	@Override
	public IPropertyGetter getPropertyGetter() {
		return propertyGetter;
	}

and add &apos;synchronized&apos; to the invoke(Object, String) method signature of PlainXmlPropertyGetter. Repeat the test a few dozen times. No failures.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3158449</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-27 14:16:37 -0400</bug_when>
    <thetext>I should also add that for the test to pass, also need to enable caching. Adding

	model.setCachingEnabled(true);
	model.setConcurrent(true);

to the created model in EplTests.newModel(String) method before loading (i.e. just after line 70).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3159122</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-29 12:39:47 -0400</bug_when>
    <thetext>This seems to be a limitation of org.w3c.dom - even a read-only document can&apos;t be accessed from multiple threads. Hence why using caching works. I propose that we either make PlainXmlModel&apos;s accessors (IPropertyGetter/Setter.invoke) synchronized or use an alternative underlying technology.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3159145</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-04-29 13:57:22 -0400</bug_when>
    <thetext>+1 for making the getter and setter synchronised</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3159156</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-04-29 14:57:11 -0400</bug_when>
    <thetext>Thanks. Should be fixed in 12f1387f4e5f9802fe02bf17c5137f46fbecdc87.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>562772</bug_id>
          
          <creation_ts>2020-05-04 07:33:56 -0400</creation_ts>
          <short_desc>EMFModelComparator can&apos;t handle Windows URIs</short_desc>
          <delta_ts>2020-05-05 20:13:24 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 10</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sina Madani">sinadoom</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          <cc>a.garcia-dominguez</cc>
    
    <cc>agarcdomi</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3160562</commentid>
    <comment_count>0</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-04 07:33:56 -0400</bug_when>
    <thetext>Try doing mvn -T 1C clean install on Windows. The tests will fail as follows:

compareEMFWithEMFCopy(org.eclipse.epsilon.workflow.tasks.eunit.EUnitModelComparisonTests)  Time elapsed: 0.23 s  &lt;&lt;&lt; ERROR!
org.apache.tools.ant.BuildException: org.eclipse.core.runtime.CoreException: C:\Users\Sina-\Projects\Epsilon\org.eclipse.epsilon\tests\org.eclipse.epsilon.workflow.test\resources\eunit\eunit.xml:289: At least one test case had a failure or an error: java.net.URISyntaxException: Illegal character in path at index 8: file:/C:\Users\Sina-\Projects\Epsilon\org.eclipse.epsilon\tests\org.eclipse.epsilon.workflow.test\resources\eunit\null1614878925
	at org.eclipse.epsilon.workflow.tasks.eunit.EUnitModelComparisonTests.runTarget(EUnitModelComparisonTests.java:47)
	at org.eclipse.epsilon.workflow.tasks.eunit.EUnitModelComparisonTests.compareEMFWithEMFCopy(EUnitModelComparisonTests.java:68)

This is because in line 292 of eunit.xml, a targetUri is being used rather than a file. Perhaps this is intentional, and a good way to catch bugs like this. So the problem must be in EMFModelComparator.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3160563</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-04 07:35:15 -0400</bug_when>
    <thetext>@Antonio would you happen to know how to fix this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3160869</commentid>
    <comment_count>2</comment_count>
    <who name="Antonio Garcia-Dominguez">agarcdomi</who>
    <bug_when>2020-05-05 04:47:13 -0400</bug_when>
    <thetext>That wasn&apos;t intentional :-D. I had simply never run those tests for Windows!

I don&apos;t have a Windows machine set up for development right now, but we could try using the &lt;makeurl&gt; Ant task. How about replacing the emf-emf-copy target in eunit.xml with this?

	&lt;target name=&quot;emf-emf-copy&quot;&gt;
		&lt;epsilon.emf.register file=&quot;${tree.metamodel.location}&quot;/&gt;

		&lt;tempfile property=&quot;copy.tmpfile&quot;/&gt;
		&lt;makeurl file=&quot;${copy.tmpfile}&quot; property=&quot;copy.tmpfile.url&quot;/&gt;

		&lt;macrodef name=&quot;loadTree&quot;&gt;
			&lt;attribute name=&quot;path&quot;/&gt;
			&lt;attribute name=&quot;name&quot;/&gt;
			&lt;sequential&gt;
				&lt;epsilon.emf.loadModel name=&quot;@{name}&quot;
					modelfile=&quot;@{path}&quot; metamodeluri=&quot;${tree.metamodel.uri}&quot;
					read=&quot;true&quot; store=&quot;false&quot;/&gt;
			&lt;/sequential&gt;
		&lt;/macrodef&gt;

		&lt;epsilon.eunit src=&quot;model-comparison/emf-emf-copy.eunit&quot;&gt;
			&lt;modelTasks&gt;
				&lt;loadTree name=&quot;Tree&quot; path=&quot;${tree.model.location}&quot;/&gt;
				&lt;epsilon.storeModel model=&quot;Tree&quot; targetUri=&quot;${copy.tmpfile.url}&quot;/&gt;
				&lt;loadTree name=&quot;TreeCopy&quot; path=&quot;${copy.tmpfile}&quot;/&gt;
			&lt;/modelTasks&gt;
		&lt;/epsilon.eunit&gt;

		&lt;delete file=&quot;${copy.tmpfile}&quot; failonerror=&quot;no&quot;/&gt;
	&lt;/target&gt;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3161037</commentid>
    <comment_count>3</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-05 10:43:50 -0400</bug_when>
    <thetext>Thanks for the suggestion. I tried this and get the following:

org.eclipse.core.runtime.CoreException: C:\Users\Sina-\Projects\Epsilon\org.eclipse.epsilon\tests\org.eclipse.epsilon.workflow.test\resources\eunit\eunit.xml:279: A source file is missing: C:\Users\Sina-\Projects\Epsilon\org.eclipse.epsilon\tests\org.eclipse.epsilon.workflow.test\resources\eunit\null478018485
	at org.eclipse.epsilon.workflow.tasks.eunit.EUnitModelComparisonTests.runTarget(EUnitModelComparisonTests.java:47)
	at org.eclipse.epsilon.workflow.tasks.eunit.EUnitModelComparisonTests.compareEMFWithEMFCopy(EUnitModelComparisonTests.java:68)


It&apos;s less about trying to make the test pass and more trying to actually fix the problem. Clearly somewhere in EMFModelComparator a URI is being created when it should be a file, or maybe it&apos;s a problem with AbstractEmfModel&apos;s translation (unlikely). I&apos;ll have a look and see if I can find the culprit. The point is that a URI like the one causing the error originally should never be allowed to exist, which indicates a missing check / sanitising step.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3161049</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-05 11:10:37 -0400</bug_when>
    <thetext>My mistake, I think the problem is actually in StoreModelTask not sanitizing the URI.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3161086</commentid>
    <comment_count>5</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-05 12:37:39 -0400</bug_when>
    <thetext>This is turning out to be insanely complicated, mostly due to the fact that the stack trace is complete gibberish and doesn&apos;t point to where the actual code is that tries to create the URI. I have tried looking in StoreModelTask and LoadEmfModelTask and it&apos;s not working - I even put System.exit(0) there after the debugger failed to hit it. Here&apos;s my (rage-quit) solution after spending all afternoon on it and getting nowhere:

	@Test
	public void compareEMFWithEMFCopy() throws Exception {
		if (OperatingSystem.isWindows()) return;
		runTarget(ANT_BUILD_FILE, &quot;emf-emf-copy&quot;);
	}

I&apos;ll leave this open for further investigation.
One thought: is it possible that ANT is trying to convert the String to a java.net.URI? I&apos;ve tried doing a replace(&apos;\\&apos;, &apos;/&apos;) everywhere that a java.net.URI could possibly be called from the workflow plugins, but it seems the problem happens before any of that code is reached, so I&apos;m always left with the same error.

Or maybe EUnitTask is somehow obfuscating the stack trace / the message is misleading. Either way it should be trivial to fix but it&apos;s not  so trivial to work out where the issue is actually occurring.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3161210</commentid>
    <comment_count>6</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-05 20:13:24 -0400</bug_when>
    <thetext>Fixed in dc96564369c05825b9378312843bbc9cb8e6f0a6. As I suspected, the issue was with ANT. It was reflectively trying to call the setTargetUri(URI) method in StoreModelTask, but failed before it got there because it was trying to create the URI as a parameter, rather than going through the setTargetUri(String) method. Hence, placing breakpoints or print statements would never catch the bug. Changing the visibility to protected fixed it, forcing ANT to use our sanitized version.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>563248</bug_id>
          
          <creation_ts>2020-05-16 10:21:01 -0400</creation_ts>
          <short_desc>EGL console not redirected with running EGX</short_desc>
          <delta_ts>2020-05-16 17:09:54 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Beatriz Sanchez">basp91</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3164264</commentid>
    <comment_count>0</comment_count>
    <who name="Beatriz Sanchez">basp91</who>
    <bug_when>2020-05-16 10:21:01 -0400</bug_when>
    <thetext>Version:  1.6.0.202003012257

Problem: println statements in EGL files used as templates in an EGX file are not redirected to the main console (which does print EGX statements)

This happens when running using the EGL run configuration in the IDE.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3164353</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2020-05-16 17:09:54 -0400</bug_when>
    <thetext>This has been fixed in the latest version of Epsilon.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>546051</bug_id>
          
          <creation_ts>2019-04-02 08:27:54 -0400</creation_ts>
          <short_desc>[ETL] Lazy rules are incorrectly identified for certain cases</short_desc>
          <delta_ts>2019-04-08 09:43:35 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jonathan Co">jonathan.co</reporter>
          <assigned_to name="Jonathan Co">jonathan.co</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3028202</commentid>
    <comment_count>0</comment_count>
    <who name="Jonathan Co">jonathan.co</who>
    <bug_when>2019-04-02 08:27:54 -0400</bug_when>
    <thetext>ETL rules are incorrectly identified as lazy when using a combination of the @abstract and Any type. Following minimal example can be used to replicate this:

@abstract
rule Example
  transform s : Any
  to t : Any {
    // Body
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3028504</commentid>
    <comment_count>1</comment_count>
    <who name="Jonathan Co">jonathan.co</who>
    <bug_when>2019-04-03 06:01:01 -0400</bug_when>
    <thetext>Seems that TransformationRule#isLazy(IEolContext) incorrectly identifies rules that are marked as @abstract and have an Any type as the source type to be lazy rules. Adding a check for this combination should fix this.

Fixed in 74c741676e728cd1905033cfbcfc3444b30676ce</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>539740</bug_id>
          
          <creation_ts>2018-10-03 01:20:31 -0400</creation_ts>
          <short_desc>in ECL matches operations invoked to match pairs of collections seems to fail</short_desc>
          <delta_ts>2018-10-17 12:07:43 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Gianluigi Proserpio">gianluigi.proserpio</reporter>
          <assigned_to name="Sina Madani">sinadoom</assigned_to>
          <cc>tanjaemayerhofer</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2983483</commentid>
    <comment_count>0</comment_count>
      <attachid>276116</attachid>
    <who name="Gianluigi Proserpio">gianluigi.proserpio</who>
    <bug_when>2018-10-03 01:20:31 -0400</bug_when>
    <thetext>Created attachment 276116
Minimal example project

As specified in https://www.eclipse.org/forums/index.php/m/1795833/#msg_1795833 using ECL for comparision of collection seems to fail</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2983502</commentid>
    <comment_count>1</comment_count>
    <who name="Gianluigi Proserpio">gianluigi.proserpio</who>
    <bug_when>2018-10-03 03:00:08 -0400</bug_when>
    <thetext>*** Bug 539742 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2986414</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2018-10-16 06:13:54 -0400</bug_when>
    <thetext>*** Bug 431620 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2986847</commentid>
    <comment_count>3</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2018-10-17 12:07:43 -0400</bug_when>
    <thetext>Fixed in commit ade2d4092234ed18ef0fb93516fe18a1f1831f25.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>276116</attachid>
            <date>2018-10-03 01:20:31 -0400</date>
            <delta_ts>2018-10-03 01:20:31 -0400</delta_ts>
            <desc>Minimal example project</desc>
            <filename>test-ecl.zip</filename>
            <type>application/zip</type>
            <size>8751</size>
            <attacher name="Gianluigi Proserpio">gianluigi.proserpio</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>541009</bug_id>
          
          <creation_ts>2018-11-11 07:39:58 -0500</creation_ts>
          <short_desc>EMF model caching bug</short_desc>
          <delta_ts>2018-11-11 18:11:05 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos</reporter>
          <assigned_to name="Sina Madani">sinadoom</assigned_to>
          <cc>basp91</cc>
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2991813</commentid>
    <comment_count>0</comment_count>
      <attachid>276542</attachid>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2018-11-11 07:39:58 -0500</bug_when>
    <thetext>Created attachment 276542
Minimal example

Caching in EMF models appears to be broken; new model elements do not seem to be added to allInstances() caches. A minimal example that reproduces the problem is attached.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2991816</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2018-11-11 11:49:17 -0500</bug_when>
    <thetext>The problem appears to be because of the readOnLoad flag being set to false.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2991822</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2018-11-11 12:47:05 -0500</bug_when>
    <thetext>Actually, the root of the problem is that there is no mechanism which invalidates the cache when the model is changed. I propose that we make the createInstanceInModel and deleteElementInModel final in CachedModel and rename them to &quot;createInstanceInModelInternal&quot; and &quot;deleteElementInModelInternal&quot; or something along those lines. This will allow us to deal with updating the cache from CachedModel itself.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2991837</commentid>
    <comment_count>3</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2018-11-11 16:40:28 -0500</bug_when>
    <thetext>OK now that I understand the logic of CachedModel, it seems that there were two redundant collections: cachedKinds and cachedTypes, which were basically duplicates of the key set from kindCache and typeCache respectively. Presumably they were there because Multimap&apos;s containsKey method returns true only iff the key is present and the associated collection is not empty. I have added a method which basically returns storage.containsKey. This appears to have solved the problem in commit 3cc6af7d3518752988e47e582ba58b60833f71cd.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2991843</commentid>
    <comment_count>4</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2018-11-11 18:11:05 -0500</bug_when>
    <thetext>*** Bug 534358 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>276542</attachid>
            <date>2018-11-11 07:39:58 -0500</date>
            <delta_ts>2018-11-11 07:39:58 -0500</delta_ts>
            <desc>Minimal example</desc>
            <filename>caching-bug.zip</filename>
            <type>application/zip</type>
            <size>1327</size>
            <attacher name="Dimitris Kolovos">dkolovos</attacher>
            

          </attachment>
      

    </bug>
    <bug>
          <bug_id>543162</bug_id>
          
          <creation_ts>2019-01-03 20:13:55 -0500</creation_ts>
          <short_desc>Error message when calling methods on null</short_desc>
          <delta_ts>2019-01-27 09:46:41 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos</reporter>
          <assigned_to name="Sina Madani">sinadoom</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3005226</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos</who>
    <bug_when>2019-01-03 20:13:55 -0500</bug_when>
    <thetext>The following EOL snippet

var c : new EClass;
c.name.split(&quot;x&quot;).println();

produces the exception below when executed against an Ecore model

Method &apos;split&apos; not found for: class org.eclipse.epsilon.eol.function.LambdaFactory

which can be confusing as the real reason for the exception is that c.name is null.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3005227</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-01-03 20:59:31 -0500</bug_when>
    <thetext>Adding &amp;&amp; targetObject != null to the if statement on line 169 in OperationCallExpression should fix this. In addition, I think adding &quot;for null object&quot; to the getReason() method of EolIllegalOperationException (line 51) may make this clearer.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3010790</commentid>
    <comment_count>2</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2019-01-27 09:46:41 -0500</bug_when>
    <thetext>Fixed in 6f5b087d614d660b4269979f1c31c9b9ced7d248.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>562880</bug_id>
          
          <creation_ts>2020-05-06 07:31:35 -0400</creation_ts>
          <short_desc>Contributed operations are not found in EGL templates of parallel EGX modules</short_desc>
          <delta_ts>2020-05-06 09:01:10 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Alfonso de la Vega">alfonso.delavega</reporter>
          <assigned_to name="Sina Madani">sinadoom</assigned_to>
          
          
          
          <votes>0</votes>

      

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>3161327</commentid>
    <comment_count>0</comment_count>
      <attachid>282725</attachid>
    <who name="Alfonso de la Vega">alfonso.delavega</who>
    <bug_when>2020-05-06 07:31:35 -0400</bug_when>
    <thetext>Created attachment 282725
Minimal example project that reproduces the problem

Hello,

I have stumbled across the following error when using any of the parallel egx modules (EgxModuleParallelGenerationRuleAtoms or EgxModuleParallelAnnotation).

If the .egl templates use any java operation provided by an operator contributor, i.e., a java class that extends the OperationContributor type, an exception is thrown saying that the invoked operation does not exist.

On the other hand, the contributed operations are found and work fine if called in any pre or post blocks of the .egx file. If no calls to contributed operations are performed inside any .egl template, the transformation completes correctly.


I have attached a minimum example project to reproduce this problem. The RunTransformation class prepares either a simple or a parallel egx module that makes use of a contributed operation (by SimpleOperatorContributor). If the parallelExecution boolean of line 14 is set to true, the transformation fails as described above.

Kind Regards,
Alfonso</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3161331</commentid>
    <comment_count>1</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-06 07:57:09 -0400</bug_when>
    <thetext>Thanks for noticing this and putting together an example. The reason this doesn&apos;t work is because each thread uses its own OperationContributorRegistry, so you&apos;re only adding the contributor to the main thread&apos;s OCR, hence why it will work from the pre block. I&apos;ll try to fix this today.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3161336</commentid>
    <comment_count>2</comment_count>
    <who name="Alfonso de la Vega">alfonso.delavega</who>
    <bug_when>2020-05-06 08:03:36 -0400</bug_when>
    <thetext>Thanks for you answer Sina!

I am not in a hurry though, I managed to avoid calling any java operations inside the egl templates for my use case. Having them work in a post block is enough for me at the moment.

Cheers,
Alfonso</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>3161359</commentid>
    <comment_count>3</comment_count>
    <who name="Sina Madani">sinadoom</who>
    <bug_when>2020-05-06 09:01:10 -0400</bug_when>
    <thetext>I&apos;ve added a test based on this example and fixed it in 2fc8229c550c799567b54462e9eb6d6107d58652.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>282725</attachid>
            <date>2020-05-06 07:31:35 -0400</date>
            <delta_ts>2020-05-06 07:31:35 -0400</delta_ts>
            <desc>Minimal example project that reproduces the problem</desc>
            <filename>minimalExampleParallelEglOpContributionError.zip</filename>
            <type>application/zip</type>
            <size>6768</size>
            <attacher name="Alfonso de la Vega">alfonso.delavega</attacher>
            

          </attachment>
      

    </bug>

</bugzilla>