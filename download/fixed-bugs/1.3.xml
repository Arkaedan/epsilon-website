<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugs.eclipse.org/bugs/page.cgi?id=bugzilla.dtd">

<bugzilla version="4.4.7"
          urlbase="https://bugs.eclipse.org/bugs/"
          
          maintainer="webmaster@eclipse.org"
          exporter="dkolovos@cs.york.ac.uk"
>

    <bug>
          <bug_id>486230</bug_id>
          
          <creation_ts>2016-01-21 04:54:00 -0500</creation_ts>
          <short_desc>Interim jars and javadoc auto-build</short_desc>
          <delta_ts>2016-01-26 19:21:44 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436898-qpqvQ9Wu05cx2aNZP6gqIj3UuKCEd1cOHfsk7o2Saro</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2662761</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2016-01-21 04:54:29 -0500</bug_when>
    <thetext>On top of automatically rebuilding the update site after every commit, it&apos;d useful if we could also re-generate the standalone Jars (under interim/jars) and the Javadoc (e.g. under interim/javadoc).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2662772</commentid>
    <comment_count>1</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2016-01-21 05:11:51 -0500</bug_when>
    <thetext>Sure, I&apos;ll look into it.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2663423</commentid>
    <comment_count>2</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2016-01-22 08:23:22 -0500</bug_when>
    <thetext>I am working on this right now.

Having the existing EGL + Ant based setup work from Maven would require quite a bit of wrangling, as I&apos;d have to extend the Maven Ant plugin with a POM-based reference to the Epsilon Ant tasks. That might not play well with our Tycho-based setup.

Right now I am first trying to use something standard in Maven: the maven-assembly-plugin. I&apos;ll report back in a few hours with my results :-).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2663604</commentid>
    <comment_count>3</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2016-01-22 13:51:06 -0500</bug_when>
    <thetext>Took more time than expected, but Hudson is now building javadocs and interim JARs.

For the interim JARs, I&apos;ve migrated the EOL + Ant process to EGX + Maven, as we need to generate many similar assembly descriptors for this to work.

Originally I tried using moduleSets, but that didn&apos;t work too well for the workflow projects (since their binary build is a .jar that contains another .jar). In the end, the assembly descriptors are entirely based on &lt;fileSet&gt;s, pretty much like the original Ant file.

The EMF/UML dependencies are copied from the target platform to target/dependency and target/dependency-unpacked with m-dependency-p and included with &lt;fileSet&gt;s as well. &lt;dependencySet&gt; doesn&apos;t work well directly with Tycho manifest-based dependencies for some reason.

Dimitris, could you have a quick look at the javadoc and the the generated files? The new standalone JARs might take some time to be properly mirrored, however.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2663825</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2016-01-24 15:06:37 -0500</bug_when>
    <thetext>Many thanks for doing this! Please find some comments below:

- The interim Javadoc should be placed under /interim-javadoc for consistency (/javadoc should point to the Javadoc of the latest stable version)
- The interim Javadoc appears to be containing doc pages for non-Epsilon classes e.g. http://download.eclipse.org/epsilon/javadoc/org/mockito/cglib/transform/AbstractClassLoader.html
- The kitchensink JAR is meant to contain all dependencies but seems to be missing (at least) ANTLR.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2663830</commentid>
    <comment_count>5</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2016-01-24 16:20:22 -0500</bug_when>
    <thetext>(In reply to Dimitris Kolovos from comment #4)
&gt; - The interim Javadoc should be placed under /interim-javadoc for
&gt; consistency (/javadoc should point to the Javadoc of the latest stable
&gt; version)

Done. I&apos;ve restored the stable Javadocs as well.

&gt; - The interim Javadoc appears to be containing doc pages for non-Epsilon
&gt; classes e.g.
&gt; http://download.eclipse.org/epsilon/javadoc/org/mockito/cglib/transform/
&gt; AbstractClassLoader.html

I&apos;ve fixed the POM so it&apos;ll only include org.eclipse.epsilon.* classes now.

&gt; - The kitchensink JAR is meant to contain all dependencies but seems to be
&gt; missing (at least) ANTLR.

Actually, I think it was only ANTLR, since I wasn&apos;t honoring the binary=&quot;true&quot; flag in the jarmodel.xml file.

The last two issues should be resolved once the current Hudson build completes (in a few minutes).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2664855</commentid>
    <comment_count>6</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2016-01-26 19:21:44 -0500</bug_when>
    <thetext>Many thanks! This all looks fine to me now. I&apos;ve added a link to the interim Javadoc under the Documentation-&gt;Javadoc menu of the Epsilon website.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>486453</bug_id>
          
          <creation_ts>2016-01-25 04:50:00 -0500</creation_ts>
          <short_desc>ClassCastException in ContributeEmfWizardsAction.getEditingDomain</short_desc>
          <delta_ts>2016-01-25 04:57:13 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="EPP Error Reports">error-reports-inbox@eclipse.org</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">nyoescape@gmail.com</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436898-dXKnR7kn_5UnhloWRMsd1_Qt9eAdslMkbo3eqJ5sRM0</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2663961</commentid>
    <comment_count>0</comment_count>
    <who name="EPP Error Reports">error-reports-inbox@eclipse.org</who>
    <bug_when>2016-01-25 04:50:59 -0500</bug_when>
    <thetext>The following incident was reported via the automated error reporting:


    code:                   0
    plugin:                 org.eclipse.ui_3.107.0.v20141010-0853
    message:                HIDDEN
    fingerprint:            8a17ceed
    exception class:        java.lang.ClassCastException
    exception message:      HIDDEN
    number of children:     0
    
    java.lang.ClassCastException: HIDDEN
    at org.eclipse.epsilon.ewl.emf.ContributeEmfWizardsAction.getEditingDomain(ContributeEmfWizardsAction.java:20)[REQUIRED, TOPMOST]
    at org.eclipse.epsilon.ewl.emf.AbstractContributeWizardsAction.populateWizardsMenu(AbstractContributeWizardsAction.java:179)
    at org.eclipse.epsilon.ewl.emf.AbstractContributeWizardsAction.menuShown(AbstractContributeWizardsAction.java:128)
    at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:255)
    at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
    at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4353)
    at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)
    at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1085)
    at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1070)
    at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:782)
    at org.eclipse.jface.action.ActionContributionItem.copyMenu(ActionContributionItem.java:1276)
    at org.eclipse.jface.action.ActionContributionItem.handleShowProxy(ActionContributionItem.java:1256)
    at org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:1245)
    at org.eclipse.jface.action.ActionContributionItem$8.handleEvent(ActionContributionItem.java:1218)
    at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
    at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4353)
    at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1061)
    at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1085)
    at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
    at org.eclipse.swt.widgets.Control.WM_INITMENUPOPUP(Control.java:4987)
    at org.eclipse.swt.widgets.Control.windowProc(Control.java:4656)
    at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:339)
    at org.eclipse.swt.widgets.Decorations.windowProc(Decorations.java:1626)
    at org.eclipse.swt.widgets.Shell.windowProc(Shell.java:2083)
    at org.eclipse.swt.widgets.Display.windowProc(Display.java:5037)
    at org.eclipse.swt.internal.win32.OS.TrackPopupMenu(OS.java:-2)
    at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:258)
    at org.eclipse.swt.widgets.Display.runPopups(Display.java:4213)
    at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3755)
    at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1151)
    at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
    at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1032)
    at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:148)
    at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:638)
    at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)
    at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:582)
    at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
    at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:138)
    at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
    at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
    at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
    at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)
    at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(null:-2)
    at sun.reflect.NativeMethodAccessorImpl.invoke(null:-1)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(null:-1)
    at java.lang.reflect.Method.invoke(null:-1)
    at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:648)
    at org.eclipse.equinox.launcher.Main.basicRun(Main.java:603)
    at org.eclipse.equinox.launcher.Main.run(Main.java:1465)
   
  

General Information:

    reported-by:      
    anonymous-id:     3b8a4ad1-d517-3fc6-806c-8d51abaef248
    eclipse-build-id: 4.5.0.I20141029-2000
    eclipse-product:  org.eclipse.epp.package.modeling.product
    operating system: Windows7 6.1.0 (x86) - win32
    jre-version:      1.8.0_25-b18

The following plug-ins were present on the execution stack (*):
    1. org.eclipse.core.databinding.observable_1.4.1.v20140910-2107
    2. org.eclipse.core.databinding_1.4.100.v20141002-1314
    3. org.eclipse.core.runtime_3.10.0.v20140724-1132
    4. org.eclipse.e4.ui.workbench_1.3.0.v20141024-2249
    5. org.eclipse.e4.ui.workbench.swt_0.12.100.v20141020-2115
    6. org.eclipse.epsilon.ewl.emf_1.2.0.201408251031
    7. org.eclipse.equinox.app_1.3.200.v20130910-1609
    8. org.eclipse.equinox.launcher_1.3.0.v20140415-2008
    9. org.eclipse.jface_3.11.0.v20141013-0842
    10. org.eclipse.swt_3.104.0.v20141029-1116
    11. org.eclipse.ui_3.107.0.v20141010-0853
    12. org.eclipse.ui.ide.application_1.0.600.v20141003-0522
    13. org.eclipse.ui.ide_3.10.100.v20141024-1629

Please note that:
* Messages, stacktraces, and nested status objects may be shortened.
* Bug fields like status, resolution, and whiteboard are sent
  back to reporters.
* The list of present bundles and their respective versions was
  calculated by package naming heuristics. This may or may not reflect reality.

Other Resources:
* Report: https://dev.eclipse.org/recommenders/committers/confess/#/problems/54c4f0a7bee810030da08467  
* Manual: https://dev.eclipse.org/recommenders/community/confess/#/guide


Thank you for your assistance.
Your friendly error-reports-inbox.

This bug was created on behalf of nyoescape@xxxxxxxxxxxx.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2663998</commentid>
    <comment_count>1</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2016-01-25 04:57:13 -0500</bug_when>
    <thetext>Fixed in 4c4db4fbd9f98d57dc93ccaafc776b603ff57fc5.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>455757</bug_id>
          
          <creation_ts>2014-12-19 09:49:00 -0500</creation_ts>
          <short_desc>Support for remotely stored GraphML files in Muddles</short_desc>
          <delta_ts>2015-12-14 17:29:52 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Thanos">zolotas4@gmail.com</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436898-xLMqdAvL1uv_cHCY0atsZPaVH--qAteNdFRpY6y4ZoY</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2499191</commentid>
    <comment_count>0</comment_count>
    <who name="Thanos">zolotas4@gmail.com</who>
    <bug_when>2014-12-19 09:49:11 -0500</bug_when>
    <thetext></thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2499192</commentid>
    <comment_count>1</comment_count>
      <attachid>249551</attachid>
    <who name="Thanos">zolotas4@gmail.com</who>
    <bug_when>2014-12-19 09:50:59 -0500</bug_when>
    <thetext>Created attachment 249551
Enhancement code</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2499194</commentid>
    <comment_count>2</comment_count>
    <who name="Thanos">zolotas4@gmail.com</who>
    <bug_when>2014-12-19 09:56:10 -0500</bug_when>
    <thetext>Enhancements:
1) URI field in the run configuration: User provides the URL of the remote .graphml file (e.g. http://www.mywebsite.com/file.graphml)

2) Overloaded methods that pass the URI in the SAX builder methods when the remote file option is selected (instead of the local file option)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2499486</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-12-20 06:55:09 -0500</bug_when>
    <thetext>Thanks! I&apos;ve applied a slightly modified version of the patch and pushed the changes to Epsilon&apos;s git repository [1]

[1] https://git.eclipse.org/c/epsilon/org.eclipse.epsilon.git/commit/?id=422dadc0629d96b3df3c992a2cb93cd28045eed3</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>249551</attachid>
            <date>2014-12-19 09:50:00 -0500</date>
            <delta_ts>2015-12-14 17:29:52 -0500</delta_ts>
            <desc>Enhancement code</desc>
            <filename>patch.diff</filename>
            <type>text/plain</type>
            <size>7329</size>
            <attacher name="Thanos">zolotas4@gmail.com</attacher>
            
              <token>1457436898-eygqEA_WYI7ic5o5lzBPC6SHv2ovoCqiO65e7fejhUk</token>
<flag name="iplog"
          id="65693"
          type_id="7"
          status="+"
          setter="dkolovos@cs.york.ac.uk"
    />
          </attachment>
      

    </bug>
    <bug>
          <bug_id>458724</bug_id>
          
          <creation_ts>2015-01-29 06:29:00 -0500</creation_ts>
          <short_desc>XmlModel can&apos;t load/save models given a correct URI</short_desc>
          <delta_ts>2015-12-14 17:29:13 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436898-u5Ucl4bPggs849avKRjTox-9zDSAej4ClJT_3X4_1_Q</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2511909</commentid>
    <comment_count>0</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-01-29 06:29:15 -0500</bug_when>
    <thetext>I&apos;ve got a use case in which models are been managed via more portable URIs (platform:/resource ) rather than file system absolute paths. Currently XmlModel can&apos;t deal with them, whereas EmfModel can. I see no reason why no having support for XmlModel as well.

I&apos;ll send a patch, preserving backwards compatibility  (EmfModel seems to only supports proper URIs, but that&apos;s a different question).

Cheers,
Adolfo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511911</commentid>
    <comment_count>1</comment_count>
      <attachid>250342</attachid>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-01-29 06:35:47 -0500</bug_when>
    <thetext>Created attachment 250342
Proposed patch

XmlModelTests test case also included, which can also be launched from the EmfTestSuite I was pointed out

Cheers,
Adolfo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2519107</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-02-15 17:26:35 -0500</bug_when>
    <thetext>Many thanks! I&apos;ve used a slightly modified version of the provided tests and fixed this in commit 1da3eed64add6da71dfc588d83c9a35b3d9c5d05</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2519787</commentid>
    <comment_count>3</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-02-17 06:47:21 -0500</bug_when>
    <thetext>Thanks Dimitris,

Not only test cases as I can see ;). I&apos;m not 100% sure backwards compatibility is preserved but:
1. I&apos;m not personally interested on that.
2. The code is cleaner, which is good for further maintenance.

Since I currently have Epsilon code in my dev workspace, I don&apos;t urgently need a build for this fix. 

Cheers,
Adolfo.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>250342</attachid>
            <date>2015-01-29 06:35:00 -0500</date>
            <delta_ts>2015-12-14 17:29:13 -0500</delta_ts>
            <desc>Proposed patch</desc>
            <filename>clipboard.txt</filename>
            <type>text/plain</type>
            <size>152436</size>
            <attacher name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</attacher>
            
              <token>1457436898-n_VqSruqKkJr9fNPLyt6zPIKoKdE37fIc4wco5BGTu0</token>
<flag name="iplog"
          id="65692"
          type_id="7"
          status="+"
          setter="dkolovos@cs.york.ac.uk"
    />
          </attachment>
      

    </bug>
    <bug>
          <bug_id>458726</bug_id>
          
          <creation_ts>2015-01-29 06:53:00 -0500</creation_ts>
          <short_desc>Provide API to add parameters when executing Epsilon languages in standalone</short_desc>
          <delta_ts>2015-12-14 17:28:23 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436898-7_fFtj-I4zpGdBB-cx68VFuEtIvIKjROZHMjXRGiY2M</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2511915</commentid>
    <comment_count>0</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-01-29 06:53:15 -0500</bug_when>
    <thetext>When executing epsilon tasks in standalone, there is no a clear way about how to add parameters to the transformation (which can be done via launch configurations). Provide API to the EpsilonStandaloneExample.

I&apos;ll provide a patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511918</commentid>
    <comment_count>1</comment_count>
      <attachid>250343</attachid>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-01-29 06:57:14 -0500</bug_when>
    <thetext>Created attachment 250343
Proposed patch</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2519110</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-02-15 17:39:54 -0500</bug_when>
    <thetext>Well spotted! This has been fixed in commit 1c66fd25a2f6dbb130d11ea32de8a5ec941b2b3c</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2519795</commentid>
    <comment_count>3</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-02-17 07:01:38 -0500</bug_when>
    <thetext>Thanks Dimitris,

Since I currently have Epsilon code in my dev workspace, I don&apos;t urgently need a build for this fix.

Additional note. Since it&apos;s an example class, I&apos;m not sure if you care at all but I must add that the different fix is not API compatible: I/we would have to modify our extensions. You might want to have two different execute methods: the previous one, and a new one receiving a collection of Variables.

Cheers,
Adolfo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2520425</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-02-18 05:02:01 -0500</bug_when>
    <thetext>Calls to parameter-less execute should still work with the new signature execute(Variable... parameters) - but I may be missing something.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2520501</commentid>
    <comment_count>5</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-02-18 06:57:37 -0500</bug_when>
    <thetext>(In reply to Dimitris Kolovos from comment #4)
&gt; Calls to parameter-less execute should still work with the new signature
&gt; execute(Variable... parameters) - but I may be missing something.

I referred any extension (derived class) which might override the execute method (which is not final). Anyway, regardless the fix is not API compatible, I presume the chance to break any client is unlikely, and if anybody really needed to overwrite the execute method, I presume they can align.

Cheers,
Adolfo</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2520940</commentid>
    <comment_count>6</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-02-18 20:09:28 -0500</bug_when>
    <thetext>You&apos;re right. Fixed in commit 2d73757ce26f89066adefb388f8cd958d6520574</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>250343</attachid>
            <date>2015-01-29 06:57:00 -0500</date>
            <delta_ts>2015-12-14 17:28:23 -0500</delta_ts>
            <desc>Proposed patch</desc>
            <filename>clipboard.txt</filename>
            <type>text/plain</type>
            <size>1947</size>
            <attacher name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</attacher>
            
              <token>1457436898-ampM1Faktwx9zbTdgNlDUBDRwbufvi2xq1oMfYZxL9A</token>
<flag name="iplog"
          id="65691"
          type_id="7"
          status="+"
          setter="dkolovos@cs.york.ac.uk"
    />
          </attachment>
      

    </bug>
    <bug>
          <bug_id>482001</bug_id>
          
          <creation_ts>2015-11-12 06:02:00 -0500</creation_ts>
          <short_desc>[HUTN] Add support for scientific notation in numeric constants</short_desc>
          <delta_ts>2015-11-12 06:14:59 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Antonio Garcia-Dominguez">nyoescape@gmail.com</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">nyoescape@gmail.com</assigned_to>
          
          
          <votes>0</votes>

      
          <token>1457436898-XJe6VSI0Gua1bjZqoog_xSRWyFjAOtAjG8m2PoDOQ8U</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2638643</commentid>
    <comment_count>0</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-11-12 06:02:15 -0500</bug_when>
    <thetext>As reported in this thread, HUTN does not accept the usual &quot;e+5&quot; suffixes for scientific notation:

https://www.eclipse.org/forums/index.php?t=rview&amp;goto=1714324#msg_1714324

It should be simple enough to support by extending slightly the lexer in HUTN and adding some unit tests.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2638645</commentid>
    <comment_count>1</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-11-12 06:04:51 -0500</bug_when>
    <thetext>58707a4 should include this new functionality. Waiting for Hudson to pick up the changes before reporting back to the user.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2638656</commentid>
    <comment_count>2</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-11-12 06:14:59 -0500</bug_when>
    <thetext>The Hudson build has completed successfully and I&apos;ve notified the user. Marking as fixed.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>469949</bug_id>
          
          <creation_ts>2015-06-11 10:17:00 -0400</creation_ts>
          <short_desc>Add the possibility to configure &quot;extraPackages&quot; for EMF/GMF Wizards</short_desc>
          <delta_ts>2015-10-04 15:12:05 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rene Meis">rene.meis@uni-due.de</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">nyoescape@gmail.com</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436898-r-L1SRFgi9yISloF_pfdTckBs0nHkGceq9zvaN5RnZQ</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2577108</commentid>
    <comment_count>0</comment_count>
    <who name="Rene Meis">rene.meis@uni-due.de</who>
    <bug_when>2015-06-11 10:17:28 -0400</bug_when>
    <thetext>For the registration of EWL wizards using Window -&gt; Preferences -&gt; Epsilon -&gt; EMF/GMF Wizards, it would be nice to have the possibility to configure &quot;extraPackages&quot;, as it is possible when using the extension point &quot;org.eclipse.epsilon.ewl.emf.wizards&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2578104</commentid>
    <comment_count>1</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-06-15 05:10:20 -0400</bug_when>
    <thetext>I&apos;ll have a look at it as soon as we can.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2622942</commentid>
    <comment_count>2</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-10-04 15:12:05 -0400</bug_when>
    <thetext>This has been implemented in commit 3de59a45f73729cc870692c5b41d92690f1dcddb. Marking as fixed.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>442682</bug_id>
          
          <creation_ts>2014-08-27 05:57:00 -0400</creation_ts>
          <short_desc>using backtick in comments</short_desc>
          <delta_ts>2015-07-27 22:20:03 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>minor</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Joost van Pinxten">joostvanpinxten@gmail.com</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          
          
          <votes>0</votes>

      
          <token>1457436899-1wB7KBeCZFR8fgvWUnOQt4MzbMjWFVGt-U0Kyv4BeSk</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2444128</commentid>
    <comment_count>0</comment_count>
    <who name="Joost van Pinxten">joostvanpinxten@gmail.com</who>
    <bug_when>2014-08-27 05:57:47 -0400</bug_when>
    <thetext>The following piece of comment triggers an error in my ETL rule:

// should be the same as `assignment.required.type`

Removing the backticks removes the error.

It seems that backticks are not properly ignored inside comment blocks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2444158</commentid>
    <comment_count>1</comment_count>
    <who name="Joost van Pinxten">joostvanpinxten@gmail.com</who>
    <bug_when>2014-08-27 06:46:42 -0400</bug_when>
    <thetext>BTW: the reported errors are:

- missing &apos;{&apos; at &apos;assignment&apos;
- no viable alternative at input &apos;.&apos;
- mismatched input: &apos;assignment&apos;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2444165</commentid>
    <comment_count>2</comment_count>
    <who name="Joost van Pinxten">joostvanpinxten@gmail.com</who>
    <bug_when>2014-08-27 06:55:20 -0400</bug_when>
    <thetext>(In reply to Joost van Pinxten from comment #0)
&gt; The following piece of comment triggers an error in my ETL rule:
&gt; 
&gt; // should be the same as `assignment.required.type`
&gt; 
&gt; Removing the backticks removes the error.
&gt; 
&gt; It seems that backticks are not properly ignored inside comment blocks.

Actually; this was caused by a different line, where I accidentally used only 1 backtick;

rule M2M transform inputModel : MM!Model
  to `model : MM!Model {
    // ` backticks trigger the error on the wrong location...
  }

If no backtick exists like this, the following errors are reported (but not shown in the editor as markers). 

- mismatched input &apos;&lt;EOF&gt;&apos; expecting &apos;}&apos;
- mismatched input: &apos;null&apos;</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2444462</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-08-27 12:59:17 -0400</bug_when>
    <thetext>It appears that backticks have a higher priority than // (i.e. the ETL code below works well) - which is not ncessearily a bad thing in itself, but is inconsistent with the way syntax highglighting works

rule M2M transform inputModel : MM!Model
  to `model : MM!Model {
    // ` : MM!Model {
    
}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2595433</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-07-27 22:20:03 -0400</bug_when>
    <thetext>Fixed in commit 20da7ca6619e4bf311e72bba15049d48770cb391</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>460513</bug_id>
          
          <creation_ts>2015-02-21 11:21:00 -0500</creation_ts>
          <short_desc>[releng] Interim release re-uses version numbers</short_desc>
          <delta_ts>2015-07-27 21:06:26 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>critical</bug_severity>
          <target_milestone>---</target_milestone>
          
          <blocked>460516</blocked>
          <everconfirmed>1</everconfirmed>
          <reporter name="Ed Willink">ed@willink.me.uk</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>adolfosbh@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436899-xKzT5DKbN9dsa3ylosIySvb0vVsdYx03H6xhySn9U0Y</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2522037</commentid>
    <comment_count>0</comment_count>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2015-02-21 11:21:08 -0500</bug_when>
    <thetext>Stable releases should be the last users of a particular version number.

Thus the Epsilon releases are 1.2.0.

But the interim release also has 1.2.0.

If the content ia really unchanged with changed qualifiers, that is careless building.

If they are changed, the versions must be incremented to:

1.2.1 for maintainance
1.3.0/2.0.0 for pre-releases/milestones of the next release

Since remembering to increase version numbers on demand is tedious, I prefer to increment by +0.0.100 immediately after a release and gradually migrate to a +0.1 when changes occur.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2522154</commentid>
    <comment_count>1</comment_count>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2015-02-22 11:10:07 -0500</bug_when>
    <thetext>(In reply to Ed Willink from comment #0)
&gt; If they are changed, the versions must be incremented:

1.2.0.201501142340

has a public org.eclipse.epsilon.eol.dom.Operation class that is not in 

1.2.0.201408251031

This is VERY bad practice. Hence the CRITICAL.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2522818</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-02-24 04:02:49 -0500</bug_when>
    <thetext>Guilty as charged - clearly releng is not the strong suit of the project. We&apos;ll follow the proposed scheme from 1.3.0 onwards.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2527005</commentid>
    <comment_count>3</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-03-05 06:08:21 -0500</bug_when>
    <thetext>Hi Dimitris,

I can provide a patch increasing the numbers of the changed plugins. However, I&apos;ve checked that in my installation all Epsilon plugins are 1.2.0 which means that either all plugins have changed since previous release or more probably you normally increase the version of all the plugins. Do you want/plan to keep that policy or adopt the Eclipse version numbering policy one [1] ?

Cheers,
Adolfo.

[1] https://wiki.eclipse.org/Version_Numbering</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2595429</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-07-27 21:06:26 -0400</bug_when>
    <thetext>We have switched to the proposed scheme.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>438615</bug_id>
          
          <creation_ts>2014-07-01 05:36:00 -0400</creation_ts>
          <short_desc>[ETL] equivalents() Operation with Parameters</short_desc>
          <delta_ts>2015-07-27 20:53:49 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Bugra M. Yildiz">b.m.yildiz@utwente.nl</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          
          
          <votes>0</votes>

      
          <token>1457436899-OyyqAzAd9rxVY6FgIaYwEWVzfRB0rRBfRucxSPN2DVM</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2422910</commentid>
    <comment_count>0</comment_count>
    <who name="Bugra M. Yildiz">b.m.yildiz@utwente.nl</who>
    <bug_when>2014-07-01 05:36:44 -0400</bug_when>
    <thetext>equivalents() operation given some parameters does not work correctly if there is no rule annotated as lazy. 

1. It does not matter which rule is annotated as lazy, as long as there is a lazy rule, it works fine.

2. It returns all the elements created by all the rules instead of the ones only created by the rule whose name is provided as parameter.

3. Side request: If you give a wrong parameter (a rule name which does not exist), it does not give any warning or error messages. In my opinion, it should at least warn the user about such an issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2422913</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-07-01 05:38:30 -0400</bug_when>
    <thetext>Thanks for reporting this. Could you please attach a minimal example [1] that we can use to reproduce this?

[1] https://www.eclipse.org/epsilon/doc/articles/minimal-examples/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2422936</commentid>
    <comment_count>2</comment_count>
      <attachid>244700</attachid>
    <who name="Bugra M. Yildiz">b.m.yildiz@utwente.nl</who>
    <bug_when>2014-07-01 06:11:32 -0400</bug_when>
    <thetext>Created attachment 244700
Eclipse Configuration

Screenshot from &quot;installation details&quot; and &quot;plug in&quot; screens.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2422937</commentid>
    <comment_count>3</comment_count>
      <attachid>244701</attachid>
    <who name="Bugra M. Yildiz">b.m.yildiz@utwente.nl</who>
    <bug_when>2014-07-01 06:13:03 -0400</bug_when>
    <thetext>Created attachment 244701
Minimal Example

An minimal example. It uses the classical Tree2Graph example. It adds two additional rules for trying how equivalents() operation works buggly with the parameters provided.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2432846</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-07-29 03:06:24 -0400</bug_when>
    <thetext>Thanks for reporting this. This is a bug in getEquivalents(Object source, IEolContext context_, List&lt;String&gt; rules) of org.eclipse.epsilon.etl.engine/src/org/eclipse/epsilon/etl/strategy/FastTransformationStrategy.java.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2595427</commentid>
    <comment_count>5</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-07-27 20:53:49 -0400</bug_when>
    <thetext>Fixed in commit 77ac18bf62f00b79ce538f123823054940f4fa05</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>244700</attachid>
            <date>2014-07-01 06:11:00 -0400</date>
            <delta_ts>2014-07-01 06:11:32 -0400</delta_ts>
            <desc>Eclipse Configuration</desc>
            <filename>Eclipse Configuration.jpg</filename>
            <type>image/jpeg</type>
            <size>287338</size>
            <attacher name="Bugra M. Yildiz">b.m.yildiz@utwente.nl</attacher>
            
              <token>1457436899-78y9TYeYLWfBuNPGcQ6ywUgg_EwaprDol1-gJTjrHsM</token>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>244701</attachid>
            <date>2014-07-01 06:13:00 -0400</date>
            <delta_ts>2014-07-01 06:13:03 -0400</delta_ts>
            <desc>Minimal Example</desc>
            <filename>Tree2Graph.etl</filename>
            <type>text/plain</type>
            <size>848</size>
            <attacher name="Bugra M. Yildiz">b.m.yildiz@utwente.nl</attacher>
            
              <token>1457436899-pGsuOjW6qUDCxDbrvnFi5jeBIQEfFA1vNMRE8fJxQNw</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>469821</bug_id>
          
          <creation_ts>2015-06-10 06:12:00 -0400</creation_ts>
          <short_desc>[EWL] Metamodel of additional models not loaded in interim release</short_desc>
          <delta_ts>2015-06-11 10:18:43 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard></status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Rene Meis">rene.meis@uni-due.de</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">nyoescape@gmail.com</assigned_to>
          <cc>dkolovos@cs.york.ac.uk</cc>
    
    <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436899-KvA5ELgX9wCuQoh_ZAsI_SSrF7og13F4EN9QR_8vBJI</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2576388</commentid>
    <comment_count>0</comment_count>
    <who name="Rene Meis">rene.meis@uni-due.de</who>
    <bug_when>2015-06-10 06:12:19 -0400</bug_when>
    <thetext>Hi,

I use EWL scripts with Papyrus UML to access the UML model and the GMF model used for the graphical representation. The UML model can be accessed using the name Model and the GMF model using the name Notation. This is the case in the current stable and interim release of Epsilon. 

In the stable release of Epsilon, I can properly access both models and modify them.
But in the interim release the metamodel of the GMF model seems not to be loaded because I get errors like:

Undefined variable, type or model: &apos;Notation!Diagram&apos;


The described behavior can be reproduced using any Papyrus model and the following wizard:

wizard PrintDiagrams {
	title : &quot;Print Diagrams&quot;
	do {
		Notation!Diagram.all.println();
	}
}

Using the stable release (1.2) the wizard shows all diagrams of the Papyrus model and with the interim release the above shown error occurs.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2576480</commentid>
    <comment_count>1</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-06-10 09:16:07 -0400</bug_when>
    <thetext>I believe this may not be a bug, but a problem in your plugin. What are the values of &quot;namespaceURI&quot; and &quot;extraPackages&quot; in your org.eclipse.epsilon.ewl.emf.wizards extension? You need to have the UML package in &quot;namespaceURI&quot; so the wizard will be available, and the GMF notation package in &quot;extraPackages&quot; so you&apos;ll be able to access the Diagram type.

This extension element works fine from the current source (which matches the latest interim):

   &lt;extension
         point=&quot;org.eclipse.epsilon.ewl.emf.wizards&quot;&gt;
      &lt;wizards
            extraPackages=&quot;http://www.eclipse.org/gmf/runtime/1.0.2/notation&quot;
            file=&quot;ewl/example.ewl&quot;
            namespaceURI=&quot;http://www.eclipse.org/uml2/5.0.0/UML&quot;&gt;
      &lt;/wizards&gt;
   &lt;/extension&gt;

I&apos;ll attach now the full plugin project, so you can compare it with yours.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2576482</commentid>
    <comment_count>2</comment_count>
      <attachid>254291</attachid>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-06-10 09:16:56 -0400</bug_when>
    <thetext>Created attachment 254291
Plugin with a working version of the reported example in the latest interim</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2576484</commentid>
    <comment_count>3</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-06-10 09:17:32 -0400</bug_when>
    <thetext>Marking as &quot;works for me&quot; for now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2576767</commentid>
    <comment_count>4</comment_count>
    <who name="Rene Meis">rene.meis@uni-due.de</who>
    <bug_when>2015-06-10 15:48:46 -0400</bug_when>
    <thetext>Now I understand the purpose of the namespaceURI and extraPackages. :)
Previously I simply set the namespaceURI to * which worked fine in the current stable release.

My plug-ins run like a charm now. Thank you!

Is there a way to add extraPackages to the &quot;lightweight&quot; registration of EWL files via Window -&gt; Preferences -&gt; Epsilon -&gt; EMF/GMF Wizards?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2577094</commentid>
    <comment_count>5</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-06-11 10:03:18 -0400</bug_when>
    <thetext>Not at the moment, I&apos;m sorry. Could you file a separate feature request for that, so we can have a look at it when we can?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2577110</commentid>
    <comment_count>6</comment_count>
    <who name="Rene Meis">rene.meis@uni-due.de</who>
    <bug_when>2015-06-11 10:18:43 -0400</bug_when>
    <thetext>I filed a feature request: https://bugs.eclipse.org/bugs/show_bug.cgi?id=469949</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>254291</attachid>
            <date>2015-06-10 09:16:00 -0400</date>
            <delta_ts>2015-06-10 09:16:56 -0400</delta_ts>
            <desc>Plugin with a working version of the reported example in the latest interim</desc>
            <filename>uml.ewl.example.plugin.zip</filename>
            <type>application/zip</type>
            <size>2690</size>
            <attacher name="Antonio Garcia-Dominguez">nyoescape@gmail.com</attacher>
            
              <token>1457436899-E2Ufj1xipQHhgxsehknv-0yWuHJVwEENDeOmeIrO_ko</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>469638</bug_id>
          
          <creation_ts>2015-06-08 12:01:00 -0400</creation_ts>
          <short_desc>[EUnit] Spurious differences when comparing an empty UML model with registered profiles to itself</short_desc>
          <delta_ts>2015-06-09 06:09:32 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Antonio Garcia-Dominguez">nyoescape@gmail.com</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          
          
          <votes>0</votes>

      
          <token>1457436899-HlSUFVmyNaE9-kcq-kdRe80F_hWIi7_-Jj4kMewDGlk</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2575407</commentid>
    <comment_count>0</comment_count>
      <attachid>254193</attachid>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-06-08 12:01:11 -0400</bug_when>
    <thetext>Created attachment 254193
Minimal example which reproduces the problem

As posted in [1]:

--
I want to use EUnit to test my model transformations and ideally would like to use the built-in model comparison based on EMF compare instead of programming the comparison on my own.

I use UML models enhanced with registered UML profiles and I think this is where my problem is located. Even if I try to compare a model with an applied profile with itself, the comparison with assertEqualModels fails. Randomly, I get an error stating

Code: [Select all] [Show/ hide]
Test simpleTest {} failed with status ERROR: Internal error: Internal error: org.eclipse.emf.ecore.resource.Resource$IOWrappedException: Feature &apos;annotation&apos; not found. [file:/tmp/emf-model-comparator-clone-UML.metamodel.uml.6872184734644465963.model, 17774, 17]

...

Caused by: org.eclipse.emf.ecore.xmi.FeatureNotFoundException: Feature &apos;annotation&apos; not found. [file:/tmp/emf-model-comparator-clone-UML.metamodel.uml.6872184734644465963.model, 17774, 17]

...


or the test fails with

Code: [Select all] [Show/ hide]
Test simpleTest {} failed with status FAILURE: Internal error: Expected Model to be equal to Expected, but it is not

and the difference shown by EMF compare is &quot;appliedProfile changed&quot;. 

I attached a minimal example.
--

[1]: https://www.eclipse.org/forums/index.php/m/1697807/#msg_1697807</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2575409</commentid>
    <comment_count>1</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-06-08 12:03:53 -0400</bug_when>
    <thetext>I have reproduced the problem, and I believe I have found the source of the spurious differences.

In order to be able to report differences on models that may only exist in memory while the test is running, EUnit creates copies of the expected and obtained models to separate files and then compares them. To avoid spurious differences, EUnit does not clone resources whose URLs start with &quot;platform&quot;, as these are usually metamodels. This is usually enough for EMF-based metamodels, but UML also uses the &quot;pathmap&quot; scheme for its profiles.

Fixing the issue was simply extending the models to be ignored to those with the &quot;pathmap&quot; scheme.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2575422</commentid>
    <comment_count>2</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-06-08 12:27:23 -0400</bug_when>
    <thetext>This is fixed in commit 83295452db97a80d5126d982d3858faa208d16f5.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>254193</attachid>
            <date>2015-06-08 12:01:00 -0400</date>
            <delta_ts>2015-06-08 12:01:11 -0400</delta_ts>
            <desc>Minimal example which reproduces the problem</desc>
            <filename>MinimalEUnit.zip</filename>
            <type>application/zip</type>
            <size>1881</size>
            <attacher name="Antonio Garcia-Dominguez">nyoescape@gmail.com</attacher>
            
              <token>1457436899-FXiJS_E9Z1X7yNzuUF9Sgz2IMI0gKoEaCLN09xWzgIU</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>461642</bug_id>
          
          <creation_ts>2015-03-07 10:04:00 -0500</creation_ts>
          <short_desc>Bad Relational/RelationalInstance.ecore files</short_desc>
          <delta_ts>2015-06-09 06:09:29 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ed Willink">ed@willink.me.uk</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436899-qbkX1bC_Q58ak94lvVAgg4p4ZGk3QzvNqxvjEWEEARc</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2527955</commentid>
    <comment_count>0</comment_count>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2015-03-07 10:04:27 -0500</bug_when>
    <thetext>If org.eclipse.epsilon.emc.emf is imported as a plugin with source, the

/org.eclipse.epsilon.emc.emf/src/org/eclipse/epsilon/emc/emf/m0/Relational.ecore
/org.eclipse.epsilon.emc.emf/src/org/eclipse/epsilon/emc/emf/m0/RelationalInstance.ecore

maky be loaded with the Sample Ecore Model Editor

Relational.ecore reports six validation errors

RelationalInstance.ecore fails to load since &apos;Relational&apos; is an unrecognized nsURI, not even declared in Relational.ecore if a tool was guessing well.

This triggers the detection in Bug 461641.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2535364</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-03-20 22:09:36 -0400</bug_when>
    <thetext>Fixed in commit 8403403a4467ace8b143c883e0e6a947a0272ef9</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>460548</bug_id>
          
          <creation_ts>2015-02-22 12:14:00 -0500</creation_ts>
          <short_desc>Incorrect provide for Epsilon</short_desc>
          <delta_ts>2015-06-09 06:09:25 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows NT</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ed Willink">ed@willink.me.uk</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436899-fs0m1JR8dPt8auc3M2Ayk3XkHRuJ4XydikZ5QZSfHEg</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2522169</commentid>
    <comment_count>0</comment_count>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2015-02-22 12:14:48 -0500</bug_when>
    <thetext>The provider for Epsilon features/plugins should be &quot;Eclipse Modeling Project&quot; not &quot;Eclipse.org&quot;.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2535374</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-03-20 23:01:27 -0400</bug_when>
    <thetext>Fixed in commit 8028d5362a8be75cbd3fdc6ee0872acaceacc8ed</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>459426</bug_id>
          
          <creation_ts>2015-02-09 05:12:00 -0500</creation_ts>
          <short_desc>Workflows do not support cached EOL models</short_desc>
          <delta_ts>2015-06-09 06:09:20 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="Konstantinos Barmpis">kb634@york.ac.uk</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436899-YkB40Vvbt5BzrHAdfsk0LL0PMklY1bVeLWULaQ0tNVU</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2515773</commentid>
    <comment_count>0</comment_count>
    <who name="Konstantinos Barmpis">kb634@york.ac.uk</who>
    <bug_when>2015-02-09 05:12:58 -0500</bug_when>
    <thetext>EOL normally supports caching of models to speed up execution time. This property (found in a CachedModel) defaults to false due to the fact that when loading a new model, the load(...) operation checks whether the stringproperty &quot;PROPERTY_CACHED&quot; is set to true (so when such a check returns null, false is defaulted to). 

When running an EOL script for an EMF model through the eclipse run configuration there is the option to enable model caching.

When running an EOL script using a workflow there is no ability to set caching to true thusly possibly severly affecting execution time.

This bug refers to the java class LoadEmfModelTask which does not provide a way to set EmfModel.PROPERTY_CACHED to true.

Cheers</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2516966</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-02-10 17:52:44 -0500</bug_when>
    <thetext>Fixed in the Git repository (commit: 6d1d9d2ed1c141f52c27e0fbbac3191769db5b76)</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>458857</bug_id>
          
          <creation_ts>2015-01-30 15:45:00 -0500</creation_ts>
          <short_desc>[EGL] Add Template#setExecutable for easily generating executable files</short_desc>
          <delta_ts>2015-06-09 06:09:17 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Antonio Garcia-Dominguez">nyoescape@gmail.com</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          
          
          <votes>0</votes>

      
          <token>1457436899-0pjzNunHwAyBfi6WGAwoAWtfNL2fgVtB0DfXN98eTzk</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2512703</commentid>
    <comment_count>0</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-01-30 15:45:07 -0500</bug_when>
    <thetext>I&apos;m currently working with a student on a transformation that produces an initial version of a Django website, and some of the files to be generated need to have their executable bit set.

While it wouldn&apos;t be too difficult to do it ourselves by calling the File#setExecutable methods, I think it&apos;d be nice to simply do something like template.setExecutable(true) on the Template object and have the bit set after the file is created with the template.generate(...) call.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2512741</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-01-30 19:37:21 -0500</bug_when>
    <thetext>This would probably have to go to EglFileGeneratingTemplate I guess. An alternative way to support this in EGX would be to add support for a &quot;post&quot; block to EGX rules that has access to an implicit &quot;generated&quot; variable that represents the generated file i.e.

rule Foo2Executable
  transform s : Foo {

  template : &quot;foo2exec.egl&quot;

  target : s.name + &quot;.sh&quot;;
 
  post { generated.executable = true; }

}</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2512742</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-01-30 19:41:27 -0500</bug_when>
    <thetext>Apparently, GenerationRule already supports a &quot;post&quot; block so I guess it&apos;d be mostly a matter of adding support for the new implicit variable.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2512743</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-01-30 20:00:31 -0500</bug_when>
    <thetext>I&apos;ve implemented the EGX enhancement in the Git repository: https://git.eclipse.org/c/epsilon/org.eclipse.epsilon.git/commit/?id=a9fadc3da66ec2842b05dd5f059e959816552160</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2512917</commentid>
    <comment_count>4</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-02-01 13:02:44 -0500</bug_when>
    <thetext>Wow, that was fast! I was going to take a stab at it, but you beat me to it :-). I like much better your approach of simply having generate() return the File.

Shall I go ahead and mention the new return value of generate(...) in Table 7.2 of the book, or should we wait for the next interim release?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2513088</commentid>
    <comment_count>5</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-02-02 05:25:39 -0500</bug_when>
    <thetext>Great - let&apos;s update the book now so that we don&apos;t forget :)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2513359</commentid>
    <comment_count>6</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2015-02-02 13:46:46 -0500</bug_when>
    <thetext>Done!

https://git.eclipse.org/c/epsilon/org.eclipse.epsilon.git/commit/?id=1d970be8f1f0deeadfdaad9fc8b8459c876bc0f7

Marking as fixed.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>458152</bug_id>
          
          <creation_ts>2015-01-22 09:28:00 -0500</creation_ts>
          <short_desc>XmlModel transformations doesn&apos;t work via standalone mode</short_desc>
          <delta_ts>2015-06-09 06:09:09 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>INVALID</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436900-13voRKjc1-YKTyLGqxTGWcjv6DQdh1r1RtAxGZO_aFU</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2508993</commentid>
    <comment_count>0</comment_count>
      <attachid>250149</attachid>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-01-22 09:28:03 -0500</bug_when>
    <thetext>Created attachment 250149
Project with minimal example

Hi folks,

A transformation involving Xml models (conformant to an XSD) which works via UI launching doesn&apos;t work via standalone mode: It&apos;s unable to find the types defined in a transformation.

Minimal example with a failing test is attached (as Eclipse project), as well as the launch transformation which doesn&apos;t fail.

I&apos;m using the latest (interim) version of Epsilon: 1.2.0.201501142340

Cheers,
Adolfo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2510474</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-01-26 18:22:59 -0500</bug_when>
    <thetext>Replacing &quot;schema/ygraphml.xsd&quot; in line 30 of Test.java with the XSD&apos;s absolute path (i.e. new File(&quot;schema/ygraphml.xsd&quot;).getAbsolutePath()) seems to be doing the trick. Could you please give this a go and let me know if this works for you?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511283</commentid>
    <comment_count>2</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-01-28 06:30:18 -0500</bug_when>
    <thetext>Hi Dimitris,

Thanks. Indeed that trick worked in my transformation scenario.

I&apos;m having a different problem now when persisting the output models. I&apos;m using EMF uris (platform ones), which are welcome when working with EmfModel and are not when dealing with the XmlModel.

After a quick look to the code, I presume that:
- Providing that a Resource is given when loaded, the EmfModel::store() logic might be factored out to AbstractEmfModel
- As long as, an improved logic when loading the XmlModel is used, since URI.createFileURI is used.

Since I wanted to provide a patch for a different concern, I think that I&apos;ll finally clone Epsilon repo to provide some patch for this as well. Any hint about test cases ?

Cheers,
Adolfo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511308</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-01-28 07:28:31 -0500</bug_when>
    <thetext>That&apos;d be great! Tests can be placed under a new class below tests/org.eclipse.epsilon.emc.emf.test project (o.e.e.emc.emf.test.EmfTestSuite is the entry point). Would it make sense to close this bug as &quot;invalid&quot; and deal with the patch - when it&apos;s ready - in a new bug?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2511897</commentid>
    <comment_count>4</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2015-01-29 06:02:28 -0500</bug_when>
    <thetext>(In reply to Dimitris Kolovos from comment #3)
&gt; That&apos;d be great! Tests can be placed under a new class below
&gt; tests/org.eclipse.epsilon.emc.emf.test project
&gt; (o.e.e.emc.emf.test.EmfTestSuite is the entry point). Would it make sense to
&gt; close this bug as &quot;invalid&quot; and deal with the patch - when it&apos;s ready - in a
&gt; new bug?

Hi Dimitris,

Yes It might well be a different bug. I&apos;ll send a git patch.

Cheers.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>250149</attachid>
            <date>2015-01-22 09:28:00 -0500</date>
            <delta_ts>2015-01-22 09:28:03 -0500</delta_ts>
            <desc>Project with minimal example</desc>
            <filename>epsilonBug.zip</filename>
            <type>application/x-zip-compressed</type>
            <size>27398</size>
            <attacher name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</attacher>
            
              <token>1457436900-AAMweoXnoEd4S_fIkO_7kexY-DL5Jg00wfMMlDvd_dM</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>441975</bug_id>
          
          <creation_ts>2014-08-18 10:33:00 -0400</creation_ts>
          <short_desc>Provide jars with attached source code  and/or javadocs</short_desc>
          <delta_ts>2015-06-09 06:09:00 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sebastian Zitzelsberger">Sebastian.Zitzelsberger@maibornwolff.de</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>nyoescape@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436900-jlwlOUY50Tk814J_mce8LPJnHUCzDL_JJu7fz7-ZjCs</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2440049</commentid>
    <comment_count>0</comment_count>
    <who name="Sebastian Zitzelsberger">Sebastian.Zitzelsberger@maibornwolff.de</who>
    <bug_when>2014-08-18 10:33:05 -0400</bug_when>
    <thetext>Please provide standalone jars that have the source code and/or the javadoc attached.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2515625</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-02-08 15:47:41 -0500</bug_when>
    <thetext>JARs (including source code) are now available under http://www.eclipse.org/epsilon/download/</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>341481</bug_id>
          
          <creation_ts>2011-03-31 09:25:00 -0400</creation_ts>
          <short_desc>[EMC] EmfModel#load(StringProperties, String) and clients should make same assumptions about model/metamodel locations</short_desc>
          <delta_ts>2015-01-14 18:53:38 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>Macintosh</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Louis Rose">louis@cs.york.ac.uk</reporter>
          <assigned_to name="Louis Rose">louis@cs.york.ac.uk</assigned_to>
          <cc>arcanefoam@gmail.com</cc>
    
    <cc>dkolovos@cs.york.ac.uk</cc>
    
    <cc>ivo@corpus.cz</cc>
          
          <votes>0</votes>

      
          <token>1457436900-vk9fXRTlPU_ue8vaBWtL8dLlRqraxDCLvvFdyYs85Iw</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>1906503</commentid>
    <comment_count>0</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-03-31 09:25:58 -0400</bug_when>
    <thetext>There are several clients of EmfModel#load(StringProperties, String), such as EmfModelConfigurationDialog and LoadModelTask. The clients pass different types of location for models and metamodels, such as fully-qualified URIs (e.g. starting with &quot;file://&quot; or &quot;platform:/resource&quot;), platform resource relative paths (e.g. &quot;/MyProject/my.model&quot;) and absolute system paths (e.g. &quot;/tmp/my.model&quot; or &quot;C:\my.model&quot;). In EmfModel#load(StringProperties, String), we attempt to infer the most appropriate type of location from the string passed by the client. In particular, we&apos;ve tried to infer whether an unqualified location should be interpreted as a platform resource URI or as a file URI.

We&apos;ve tried lots of tricks in the past, such as assuming that when basePath is null, the client is indicating that the path should be interpreted as a file URI. However, we&apos;ve often forgotten to fix all of the clients of EmfModel#load(StringProperties, String) when changing the assumptions made by EmfModel. This has led to regressions, such as #280056 and #285559

To try to avoid these issues in the future, we can:
  (1) change EmfModel such that its clients provide a fully-qualified URI
  (2) add regression tests for EmfModel#load(StringProperties, String)
  (3) document the new protocol for using EmfModel#load(StringProperties, String)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1908348</commentid>
    <comment_count>1</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-04-04 12:40:22 -0400</bug_when>
    <thetext>The following clients use EmfModel#load(StringProperties, String):

- EugeniaActionDelegate
- AbstractECoreModelAction
- NewEmfModelWizard
- LoadModel
- LoadModelTask*
- EclipseContextManager*

The starred clients retrieve property keys from data stored by the Epsilon user, such as in an Eclipse launch configuration or in an ANT build file. In order not to break existing user data, we must continue to support the existing loading protocol, which can infer a fully qualified URI when an unqualified URI is supplied.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1908350</commentid>
    <comment_count>2</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-04-04 12:43:12 -0400</bug_when>
    <thetext>(In reply to comment #1)
&gt; The following clients use EmfModel#load(StringProperties, String):

There is also:

- ModelManager (EglServlet)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1908351</commentid>
    <comment_count>3</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-04-04 12:43:38 -0400</bug_when>
    <thetext>Accidentally closed bug.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1908843</commentid>
    <comment_count>4</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-04-05 10:13:42 -0400</bug_when>
    <thetext>For the clients that internally construct values for the StringProperties argument, I have migrated the code to the new protocol. For example, the following code in EugeniaActionDelegate:

	properties.put(EmfModel.PROPERTY_MODEL_FILE, path);
	properties.put(EmfModel.PROPERTY_METAMODEL_URI, nsUri);
	properties.put(EmfModel.PROPERTY_IS_METAMODEL_FILE_BASED, &quot;false&quot;);
	properties.put(EmfModel.PROPERTY_READONLOAD, readOnLoad + &quot;&quot;);
	properties.put(EmfModel.PROPERTY_STOREONDISPOSAL, storeOnDisposal + &quot;&quot;);
	properties.put(EmfModel.PROPERTY_EXPAND, expand + &quot;&quot;);
	properties.put(EmfModel.PROPERTY_NAME, name);
	
became:

	properties.put(EmfModel.PROPERTY_MODEL_URI, org.eclipse.emf.common.util.URI.createURI(path, true));
	properties.put(EmfModel.PROPERTY_METAMODEL_URI, nsUri);
	properties.put(EmfModel.PROPERTY_IS_METAMODEL_FILE_BASED, &quot;false&quot;);
	properties.put(EmfModel.PROPERTY_READONLOAD, readOnLoad + &quot;&quot;);
	properties.put(EmfModel.PROPERTY_STOREONDISPOSAL, storeOnDisposal + &quot;&quot;);
	properties.put(EmfModel.PROPERTY_EXPAND, expand + &quot;&quot;);
	properties.put(EmfModel.PROPERTY_NAME, name);</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1908871</commentid>
    <comment_count>5</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-04-05 10:49:55 -0400</bug_when>
    <thetext>For the clients that construct StringProperties from user data (EclipseContextManager and LoadModelTask), we will need to support the old properties (PROPERTY_MODEL_FILE and PROPERTY_METAMODEL_FILE). To this end, I have:

- Updated EmfModelConfigurationDialogue to ensure that new launch configurations use the new properties.
- Introduced EmfModel.PropertyMigrator, which inspects an instance of StringProperties, and migrates any legacy properties to their new equivalents.

I&apos;ve not changed LoadModelTask which now relies on EmfModel.PropertyMigrator for executing loadModel ANT statements that use the legacy properties. Migrating the legacy properties in LoadModelTask would have involved coupling LoadModelTask to EmfModel, which did not seem sensible as LoadModelTask does not currently need to know which implementation of IModel it is instantiating.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1908893</commentid>
    <comment_count>6</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-04-05 11:03:48 -0400</bug_when>
    <thetext>A quick summary of the most important changes:

- EmfModel&apos;s PROPERTY_MODEL_FILE and PROPERTY_METAMODEL_FILE have been deprecated in favour of PROPERTY_MODEL_URI and PROPERTY_FILE_BASED_METAMODEL_URI
- EmfModel.PropertyMigrator has been introduced so that uses of the deprecated properties will continue to be supported
- All of our code that uses EmfModel#load(StringProperties, String) has been updated to use the new rather than the old properties. EmfModelConfigurationDialogue continues to rely on the deprecated properties so as to support legacy launch configurations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1908929</commentid>
    <comment_count>7</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-04-05 11:57:24 -0400</bug_when>
    <thetext>I&apos;ve commited the first round of changes, described in all of the comments above, to SVN.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1909155</commentid>
    <comment_count>8</comment_count>
    <who name="Ivo(sh) Musil">ivo@corpus.cz</who>
    <bug_when>2011-04-05 17:56:12 -0400</bug_when>
    <thetext>Louis, you probably solved my older bug#329311 ... I will test your patch and report result.

Thanks.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1910093</commentid>
    <comment_count>9</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-04-07 07:05:14 -0400</bug_when>
    <thetext>(In reply to comment #8)
&gt; Louis, you probably solved my older bug#329311 ... I will test your patch and
&gt; report result.
&gt; 
&gt; Thanks.

Hi Ivo. Great -- that&apos;s a happy coincidence. Do let me know if this patch fixes bug#329311 and I&apos;ll mark it as a duplicate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1910094</commentid>
    <comment_count>10</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-04-07 07:06:53 -0400</bug_when>
    <thetext>I&apos;ve tested the changes on Windows and Mac OS, and there seem to be no regressions.

I also committed a small patch to ensure that EmfModel does not migrate legacy properties that are paired with the empty string. Some existing launch configurations will use pair a legacy property with the empty string because the user has &quot;cleared&quot; a text box that previously contained a value.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1920480</commentid>
    <comment_count>11</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-04-28 08:31:04 -0400</bug_when>
    <thetext>I think we&apos;re done with this for now. Assigning to Dimitris for build integration.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1942636</commentid>
    <comment_count>12</comment_count>
    <who name="Louis Rose">louis@cs.york.ac.uk</who>
    <bug_when>2011-06-01 14:22:14 -0400</bug_when>
    <thetext>This is fixed in SVN, and will make it into the next interim/stable builds.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>1969508</commentid>
    <comment_count>13</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2011-07-25 08:17:13 -0400</bug_when>
    <thetext>Fixed in 0.9.1</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2496757</commentid>
    <comment_count>14</comment_count>
    <who name="Horacio Hoyos">arcanefoam@gmail.com</who>
    <bug_when>2014-12-13 16:33:47 -0500</bug_when>
    <thetext>Hi,

My implementation of the new Bibtex driver extends the EMF model. Probably in the future other drivers that will relay in an EMF model behind the curtins may need to extend the EMF model too. 

PropertyMigrator class was introduced for backwards-compatibility with existing Eclipse launch configurations. However, this class is private and hence not visible for extending classes. 

If new drivers are to support old configurations (perhaps not) then this class should be public. If not, then it should remain private and all new drivers use the new property style.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2496838</commentid>
    <comment_count>15</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-12-14 17:44:46 -0500</bug_when>
    <thetext>New drivers should not support the old configuration options in my view.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505842</commentid>
    <comment_count>16</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-01-14 18:53:38 -0500</bug_when>
    <thetext>Re-closing.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>457442</bug_id>
          
          <creation_ts>2015-01-14 08:08:00 -0500</creation_ts>
          <short_desc>[Epsilon] Error messages missing source line number</short_desc>
          <delta_ts>2015-01-14 18:52:10 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Horacio Hoyos">arcanefoam@gmail.com</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>arcanefoam@gmail.com</cc>
          
          <votes>0</votes>

      
          <token>1457436900-qq74_Lw3qJgC1F-967_LGy8TwfR8xuCHKodNHmH9VOE</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2505519</commentid>
    <comment_count>0</comment_count>
    <who name="Horacio Hoyos">arcanefoam@gmail.com</who>
    <bug_when>2015-01-14 08:08:03 -0500</bug_when>
    <thetext>When flock encounters an error it no longer displays the stack (partial) trace of the error, which contains the line and clumn number where the error ocurred. 

The lack of reference to the soure makes it very hard to debug.

I am using Marte SDK Interim and Epsilon Interim. 

From this post (https://www.eclipse.org/forums/index.php/t/930376/) it might have been a regresion issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505520</commentid>
    <comment_count>1</comment_count>
    <who name="Horacio Hoyos">arcanefoam@gmail.com</who>
    <bug_when>2015-01-14 08:10:41 -0500</bug_when>
    <thetext>This behaviour seems to also be happening on all Epsilon languages</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505667</commentid>
    <comment_count>2</comment_count>
    <who name="Horacio Hoyos">arcanefoam@gmail.com</who>
    <bug_when>2015-01-14 11:26:45 -0500</bug_when>
    <thetext>Hi, the changes in commit [e68005b] cause this regresion. When the execution listener loop is placed on the &quot;finnaly&quot; section, the loop will be executed until the stack trace is emptied, thus removing all the source line references. 

I don&apos;t know the reason for moving it there, so can&apos;t argue that the solution is to leave it there. For the moment I will revert the file and keep it in branch hhoyos/457442 for testing and such.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505680</commentid>
    <comment_count>3</comment_count>
    <who name="Horacio Hoyos">arcanefoam@gmail.com</who>
    <bug_when>2015-01-14 11:40:07 -0500</bug_when>
    <thetext>Other strange behaviour is that the error message is printed twice. Once as a message, and another as a stack trace. The difference is that in the second one the stack trace links are &quot;clickable&quot; so you can navigate to the source.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505841</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-01-14 18:52:10 -0500</bug_when>
    <thetext>This has been fixed in the Git repo (eee9448baefac47da65a6632359c3cd02978c411) and in the latest interim version.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>416792</bug_id>
          
          <creation_ts>2013-09-08 02:53:00 -0400</creation_ts>
          <short_desc>NPE in ModelsConfigurationTab$ModelLabelProvider.getImage</short_desc>
          <delta_ts>2015-01-14 18:51:40 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows Vista</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ed Willink">ed@willink.me.uk</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          
          
          <votes>0</votes>

      
          <token>1457436900-JmFXdZav4zIWXM28GFryFG_pz_o7nbn09QrVtQPGKAA</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2304035</commentid>
    <comment_count>0</comment_count>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2013-09-08 02:53:16 -0400</bug_when>
    <thetext>After installing Epsilon Core Development Tools 1.1 from Update site on Kepler and opening a Flock launch configueration I get the stack trace below. (Presumably the icons used by the launch are either missing or in a plugin outside the ECDT install.)

java.lang.NullPointerException
	at org.eclipse.epsilon.common.dt.launching.tabs.ModelsConfigurationTab$ModelLabelProvider.getImage(ModelsConfigurationTab.java:276)
	at org.eclipse.jface.viewers.WrappedViewerLabelProvider.getImage(WrappedViewerLabelProvider.java:117)
	at org.eclipse.jface.viewers.WrappedViewerLabelProvider.update(WrappedViewerLabelProvider.java:165)
	at org.eclipse.jface.viewers.ViewerColumn.refresh(ViewerColumn.java:152)
	at org.eclipse.jface.viewers.AbstractTableViewer.doUpdateItem(AbstractTableViewer.java:400)
	at org.eclipse.jface.viewers.StructuredViewer$UpdateItemSafeRunnable.run(StructuredViewer.java:485)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.updateItem(StructuredViewer.java:2167)
	at org.eclipse.jface.viewers.AbstractTableViewer.internalRefreshAll(AbstractTableViewer.java:712)
	at org.eclipse.jface.viewers.AbstractTableViewer.internalRefresh(AbstractTableViewer.java:650)
	at org.eclipse.jface.viewers.StructuredViewer$8.run(StructuredViewer.java:1535)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1443)
	at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1404)
	at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1533)
	at org.eclipse.jface.viewers.ColumnViewer.refresh(ColumnViewer.java:555)
	at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1490)
	at org.eclipse.epsilon.common.dt.launching.tabs.ModelsConfigurationTab.initializeFrom(ModelsConfigurationTab.java:140)
	at org.eclipse.epsilon.flock.dt.launching.tabs.FlockModelsConfigurationTab.initializeFrom(FlockModelsConfigurationTab.java:91)
	at org.eclipse.debug.ui.AbstractLaunchConfigurationTabGroup.initializeFrom(AbstractLaunchConfigurationTabGroup.java:86)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2304036</commentid>
    <comment_count>1</comment_count>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2013-09-08 03:04:17 -0400</bug_when>
    <thetext>Installing EMF Integration cures the problem.

Why is there no feature depenedency from Core Tools to EMF Integration so that P2 gets the install correct for any user selection?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2304060</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2013-09-08 09:23:12 -0400</bug_when>
    <thetext>Thanks for reporting this! I&apos;ll investigate.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2501475</commentid>
    <comment_count>3</comment_count>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2015-01-02 05:57:59 -0500</bug_when>
    <thetext>Just hit this again. Just need to hover on a Eclipse configuration in the launch dialog. No need to touch Epsilon at all.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2501477</commentid>
    <comment_count>4</comment_count>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2015-01-02 06:01:51 -0500</bug_when>
    <thetext>(In reply to Ed Willink from comment #1)
&gt; Installing EMF Integration cures the problem.

Not this time. I have the following installed on an M4-based config.

org.eclipse.epsilon.common (1.2.0.201412112046) &quot;Epsilon Common&quot; [Resolved]
org.eclipse.epsilon.common.dt (1.2.0.201412112046) &quot;Epsilon Common Development Tools&quot; [Active]
org.eclipse.epsilon.common.dt.examples (1.2.0.201412112046) &quot;Epsilon Examples&quot; [Starting]
org.eclipse.epsilon.dependencies (1.2.0.201412112046) &quot;Epsilon Dependencies&quot; [Resolved]
org.eclipse.epsilon.ecl.dt (1.2.0.201412112046) &quot;Epsilon Comparison Language Development Tools&quot; [Starting]
org.eclipse.epsilon.ecl.dt.tools (1.2.0.201412112046) &quot;ECL Tools&quot; [Resolved]
org.eclipse.epsilon.ecl.engine (1.2.0.201412112046) &quot;Epsilon Comparison Language Engine&quot; [Resolved]
org.eclipse.epsilon.egl.dt (1.2.0.201412112046) &quot;Epsilon Generation Language Development Tools&quot; [Active]
org.eclipse.epsilon.egl.engine (1.2.0.201412112046) &quot;Epsilon Generation Language Engine&quot; [Resolved]
org.eclipse.epsilon.egl.traceability.fine (1.2.0.201412112046) &quot;Epsilon Generation Language Engine: Fine-Grained Traceability&quot; [Resolved]
org.eclipse.epsilon.emc.bibtex (1.2.0.201412112046) &quot;Epsilon Bibtex Model Support&quot; [Resolved]
org.eclipse.epsilon.emc.bibtex.dt (1.2.0.201412112046) &quot;Epsilon Bibtex Model Support Development Tools&quot; [Resolved]
org.eclipse.epsilon.emc.composite (1.2.0.201412112046) &quot;Composite Model Plug-in&quot; [Resolved]
org.eclipse.epsilon.emc.csv (1.2.0.201412112046) &quot;Epsilon CSV Model Support&quot; [Resolved]
org.eclipse.epsilon.emc.csv.dt (1.2.0.201412112046) &quot;Epsilon CSV Model Support Development Tools&quot; [Resolved]
org.eclipse.epsilon.emc.emf (1.2.0.201412112046) &quot;Epsilon EMF Model Support&quot; [Resolved]
org.eclipse.epsilon.emc.emf.decorator (1.2.0.201412112046) &quot;EMF Decorator Model Plug-in&quot; [Resolved]
org.eclipse.epsilon.emc.emf.virtual (1.2.0.201412112046) &quot;Epsilon EMF Virtual Model Support&quot; [Starting]
org.eclipse.epsilon.emc.plainxml (1.2.0.201412112046) &quot;Plain XML Driver for EMC&quot; [Resolved]
org.eclipse.epsilon.emc.plainxml.dt (1.2.0.201412112046) &quot;EMX Plain XML development tools&quot; [Starting]
org.eclipse.epsilon.eml.dt (1.2.0.201412112046) &quot;Epsilon Merging Language Development Tools&quot; [Starting]
org.eclipse.epsilon.eml.engine (1.2.0.201412112046) &quot;Epsilon Merging Language Engine&quot; [Resolved]
org.eclipse.epsilon.eol.dt (1.2.0.201412112046) &quot;Epsilon Object Language Development Tools&quot; [Active]
org.eclipse.epsilon.eol.dt.tools (1.2.0.201412112046) &quot;Epsilon Object Language Tools&quot; [Resolved]
org.eclipse.epsilon.eol.engine (1.2.0.201412112046) &quot;Epsilon Object Language&quot; [Resolved]
org.eclipse.epsilon.eol.tools (1.2.0.201412112046) &quot;Built-in Tools for Epsilon&quot; [Resolved]
org.eclipse.epsilon.epl.dt (1.2.0.201412112046) &quot;Epsilon Pattern Language Development Tools&quot; [Starting]
org.eclipse.epsilon.epl.engine (1.2.0.201412112046) &quot;EPL Engine&quot; [Starting]
org.eclipse.epsilon.erl.engine (1.2.0.201412112046) &quot;Epsilon Rule Language Engine&quot; [Resolved]
org.eclipse.epsilon.etl.dt (1.2.0.201412112046) &quot;Epsilon Transformation Language Development Tools&quot; [Active]
org.eclipse.epsilon.etl.engine (1.2.0.201412112046) &quot;Epsilon Transformation Language Engine&quot; [Resolved]
org.eclipse.epsilon.eunit.dt (1.2.0.201412112046) &quot;EUnit Developer Tools&quot; [Starting]
org.eclipse.epsilon.eunit.dt.diff.files (1.2.0.201412112046) &quot;EUnit File Differencer&quot; [Resolved]
org.eclipse.epsilon.eunit.engine (1.2.0.201412112046) &quot;EUnit Engine&quot; [Resolved]
org.eclipse.epsilon.eunit.junit (1.2.0.201412112046) &quot;JUnit bridge for Epsilon EUnit&quot; [Resolved]
org.eclipse.epsilon.evl.dt (1.2.0.201412112046) &quot;Epsilon Validation Language Development Tools&quot; [Starting]
org.eclipse.epsilon.evl.engine (1.2.0.201412112046) &quot;Epsilon Validation Language Engine&quot; [Starting]
org.eclipse.epsilon.ewl.dt (1.2.0.201412112046) &quot;Epsilon Wizard Language Development Tools&quot; [Starting]
org.eclipse.epsilon.ewl.engine (1.2.0.201412112046) &quot;Epsilon Wizard Engine Engine&quot; [Resolved]
org.eclipse.epsilon.flock.dt (1.2.0.201412112046) &quot;Epsilon Flock Development Tools&quot; [Active]
org.eclipse.epsilon.flock.engine (1.2.0.201412112046) &quot;Epsilon Flock Engine&quot; [Resolved]
org.eclipse.epsilon.help (1.2.0.201412112046) &quot;Epsilon Help&quot; [Resolved]
org.eclipse.epsilon.perspective (1.2.0.201412112046) &quot;Epsilon Perspective&quot; [Starting]
org.eclipse.epsilon.profiling (1.2.0.201412112046) &quot;Epsilion Profiling Tools&quot; [Resolved]
org.eclipse.epsilon.profiling.dt (1.2.0.201412112046) &quot;Epsilon Profiling Support&quot; [Active]
org.eclipse.epsilon.workflow (1.2.0.201412112046) &quot;Epsilon ANT Workflow&quot; [Resolved]</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2501503</commentid>
    <comment_count>5</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-01-02 06:58:05 -0500</bug_when>
    <thetext>This probably happens because the run configuration contains a model for which the particular Eclipse instance doesn&apos;t have a driver installed (e.g. a CSV model). Is there any chance you could share your stored run configuration so that I can have a look?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2501548</commentid>
    <comment_count>6</comment_count>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2015-01-02 09:54:58 -0500</bug_when>
    <thetext>What do you mean by the stored run configuration?

(Generally an NPE stack trace identifies a problem path. Here it looks like Epsilon is trying to do something inelegantly when it should just exit gracefully.)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2503164</commentid>
    <comment_count>7</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-01-08 03:37:47 -0500</bug_when>
    <thetext>&gt; What do you mean by the stored run configuration?

The .launch file [1]

[1] https://www.eclipse.org/epsilon/doc/articles/minimal-examples/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2503173</commentid>
    <comment_count>8</comment_count>
      <attachid>249777</attachid>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2015-01-08 04:03:16 -0500</bug_when>
    <thetext>Created attachment 249777
Example problem .launch config</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2503176</commentid>
    <comment_count>9</comment_count>
    <who name="Ed Willink">ed@willink.me.uk</who>
    <bug_when>2015-01-08 04:06:59 -0500</bug_when>
    <thetext>(In reply to Dimitris Kolovos from comment #5)
&gt; This probably happens because the run configuration contains a model for
&gt; which the particular Eclipse instance doesn&apos;t have a driver installed

Probably indeed:

metamodelUri=http\://www.eclipse.org/ocl/3.1.0/Pivot&amp;#13;&amp;#10;
modelUri=http\://www.eclipse.org/ocl/3.1.0/OCL.oclstdlib.oclas&amp;#13;&amp;#10;type=EMF&amp;#13;&amp;#10;
modelFile=http\://www.eclipse.org/ocl/3.1.0/OCL.oclstdlib.oclas&amp;#13;&amp;#10;

are references to names that have been changed as part of the OCL promotion to non-examples.

Should just be markers on the launch.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2505839</commentid>
    <comment_count>10</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2015-01-14 18:51:40 -0500</bug_when>
    <thetext>This has been fixed in the Git repo (c54f027fdfe56be7fd976a6cf32861742728ecaf) and in the latest interim version.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>249777</attachid>
            <date>2015-01-08 04:03:00 -0500</date>
            <delta_ts>2015-01-08 04:03:16 -0500</delta_ts>
            <desc>Example problem .launch config</desc>
            <filename>HSV2HLS-QVTcToQVTu.launch</filename>
            <type>text/plain</type>
            <size>3136</size>
            <attacher name="Ed Willink">ed@willink.me.uk</attacher>
            
              <token>1457436900-iIKSdq08itzSR2WQf4sYY04foSrJ3gT2hHpbktKcW-E</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>454414</bug_id>
          
          <creation_ts>2014-12-08 07:17:00 -0500</creation_ts>
          <short_desc>I can&apos;t transform XSD based models physically located outside the workspace</short_desc>
          <delta_ts>2014-12-10 04:20:14 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows 7</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          
          
          <votes>0</votes>

      
          <token>1457436900-JbN_4gu4r23CvM8WHot_jeV9L5J0vdTk7CvTRc8NkCU</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2493833</commentid>
    <comment_count>0</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2014-12-08 07:17:31 -0500</bug_when>
    <thetext>When launching ETL transformations via launch configurations, XSD based models (XML documents backed by XSD (EMF)) can ONLY be used when the models are physically inside the running workspace.

This doesn&apos;t occur when working with projects from a GIT source repository, which despite of being logically workspace resources, they are physically located somewhere else.

Additional comment. More general URI specifications should also be supported, e.g:
- file://...
- platform:/resource/...</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493834</commentid>
    <comment_count>1</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2014-12-08 07:21:53 -0500</bug_when>
    <thetext>(In reply to Adolfo Sanchez-Barbudo Herrera from comment #0)
&gt; This doesn&apos;t occur when...

To be clearer: I meant &quot;working with models physically inside the workspace&quot;

The problem problem is that the workspace location is always prefixed to whatever is specified for the model and XSD locations.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493906</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-12-08 09:13:49 -0500</bug_when>
    <thetext>I *think* that the latest version of the code in Epsilon&apos;s Git repository [1] should be able to handle files that are not located in the workspace (but alas not plugin-based URIs - which we&apos;ll need to fix). Could you please give this a go and let me know whether it works for you?

[1] https://git.eclipse.org/c/epsilon/org.eclipse.epsilon.git</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2493991</commentid>
    <comment_count>3</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2014-12-08 11:09:25 -0500</bug_when>
    <thetext>Uouuuu Habemus GIT !!! :). Congrats !

I just downloaded the source code in my Mars M3 IDE and simply tried it in a second instance. Unfortunately, I can&apos;t set up the same use case, because EGit is not properly initialized in my second instance (I&apos;ve not looked into that).

However, I tried it with files linked to file systems resources, and the transformation doesn&apos;t complain about not finding the schema or the model (The result was not what I expected, but that must easily be some other different setup problem), so I presume it&apos;s indeed fixed.

Just to be sure, if there is a p2 repo with your nightly builds or similar, I could update the epsilon plugins and do a proper verification of my use case in the first Eclipse instance (likewise, benefit from the fix :)).

[P.S: The actual url to download/clone the repo is : https://git.eclipse.org/gitroot/epsilon/org.eclipse.epsilon.git]

Cheers,
Adolfo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494074</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-12-08 12:42:38 -0500</bug_when>
    <thetext>We haven&apos;t set up an automated build infrastructure yet so currently we&apos;re releasing interim versions manually. I&apos;ll release a new interim version shortly and post a comment to this thread.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494199</commentid>
    <comment_count>5</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-12-08 19:24:52 -0500</bug_when>
    <thetext>A new interim version is now available under http://download.eclipse.org/epsilon/interim/</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494409</commentid>
    <comment_count>6</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2014-12-09 05:46:27 -0500</bug_when>
    <thetext>Thanks Dimitris,

I got some issues (attachment coming next) when updating from the repo. After googling and getting a workaround to update, I can confirm that this bug is not present anymore. Feel free resolve it ;)

Cheers,
Adolfo.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494410</commentid>
    <comment_count>7</comment_count>
      <attachid>249269</attachid>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2014-12-09 05:47:30 -0500</bug_when>
    <thetext>Created attachment 249269
Exception&apos;s screenshot</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494780</commentid>
    <comment_count>8</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-12-09 13:28:15 -0500</bug_when>
    <thetext>Which version of Eclipse are you using? I&apos;ve tried this with the Luna modeling distribution and it seems to be working well on my side.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2495012</commentid>
    <comment_count>9</comment_count>
    <who name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</who>
    <bug_when>2014-12-10 03:52:15 -0500</bug_when>
    <thetext>Hi Dimitris,

Sorry, I shouldn&apos;t have mentioned the issue. It&apos;s not a problem of your interim repo. See [1] for similar issues.

Cheers,
Adolfo.

[1] http://stackoverflow.com/questions/25094583/eclipse-error-when-try-install-plugin</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2495033</commentid>
    <comment_count>10</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-12-10 04:20:14 -0500</bug_when>
    <thetext>No worries. Resolving as fixed.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>249269</attachid>
            <date>2014-12-09 05:47:00 -0500</date>
            <delta_ts>2014-12-09 05:47:30 -0500</delta_ts>
            <desc>Exception&apos;s screenshot</desc>
            <filename>clipboard.png</filename>
            <type>image/png</type>
            <size>30545</size>
            <attacher name="Adolfo Sanchez-Barbudo Herrera">adolfosbh@gmail.com</attacher>
            
              <token>1457436900-Jh8SJmSVCGbwJXW2a_xfwNLNYygTEg0FU1BD0GdXO2w</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>450398</bug_id>
          
          <creation_ts>2014-11-06 15:56:00 -0500</creation_ts>
          <short_desc>[Ant, epsilon.emf.loadModel] Do not reload a metamodel file if timestamp hasn&apos;t changed since last invocation</short_desc>
          <delta_ts>2014-12-08 19:26:38 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Antonio Garcia-Dominguez">nyoescape@gmail.com</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">nyoescape@gmail.com</assigned_to>
          <cc>dkolovos@cs.york.ac.uk</cc>
          
          <votes>0</votes>

      
          <token>1457436901-UM87M-GUVSjd949QeStj202qtaQsm3n5HG2-EDUDtzk</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2478343</commentid>
    <comment_count>0</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-11-06 15:56:38 -0500</bug_when>
    <thetext>We&apos;ve had some issues when using epsilon.emf.loadModel&apos;s metamodelFile attribute from a EUnit test suite. Right now, epsilon.emf.loadModel always reloads the EPackage, resulting in spurious differences if we try to compare two models that have been loaded with that attribute.

By default, epsilon.emf.loadModel should only reload the metamodel if its modification timestamp has changed since the last time it was run. Otherwise, unless explicitly told so (by setting a new attribute &quot;forceMetamodelFileReload&quot; to &quot;true&quot;), it should simply reuse the existing EPackage.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2479747</commentid>
    <comment_count>1</comment_count>
      <attachid>248526</attachid>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-11-09 14:54:34 -0500</bug_when>
    <thetext>Created attachment 248526
Patch series which extends EmfModel and epsilon.emf.loadModel

After discussing with Dimitris and Louis, we thought it&apos;d be better to extend EmfModel with a new flag that would reuse file-based metamodels if their modification timestamp hadn&apos;t changed since the last time they were loaded.

I&apos;ve created a first version of this approach. Reusing file-based metamodels is enabled by default, so metamodelFile is safe to use within EUnit again.

The patch reverts the EUnit test suite back to using metamodelFile, and simplifies the EUnit example. The new &quot;reuseUnmodifiedMetamodelFile&quot; flag is also mentioned in the section of the Epsilon Book dedicated to the epsilon.emf.loadModel task.

Before committing this, I&apos;ll ask Dimitris and Louis to ACK this, as EmfModel is a key part of Epsilon. We&apos;ll also have to wait for the migration to Git.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2479748</commentid>
    <comment_count>2</comment_count>
      <attachid>248527</attachid>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-11-09 14:58:54 -0500</bug_when>
    <thetext>Created attachment 248527
Second version of the patches

Oops, I forgot to change the text for the new checkbox in the EMF model configuration dialog.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2488915</commentid>
    <comment_count>3</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-11-25 13:30:19 -0500</bug_when>
    <thetext>We had some discussion regarding whether to enable or not this new behaviour by default. In the end, we&apos;ve decided to have it enabled by default, since a) metamodelFile would still be unsafe to new users otherwise and b) we cannot come up with a sane use case for requiring new EPackage instances on each use of metamodelFile, regardless of whether the file actually changed.

Patches applied from SVN r2690 to SVN r2693.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494201</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-12-08 19:26:38 -0500</bug_when>
    <thetext>Fixed in the latest interim version.</thetext>
  </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>248526</attachid>
            <date>2014-11-09 14:54:00 -0500</date>
            <delta_ts>2014-11-09 14:58:54 -0500</delta_ts>
            <desc>Patch series which extends EmfModel and epsilon.emf.loadModel</desc>
            <filename>450398-v1.zip</filename>
            <type>text/plain</type>
            <size>164348</size>
            <attacher name="Antonio Garcia-Dominguez">nyoescape@gmail.com</attacher>
            
              <token>1457436901-Ax1Yc2Uy-5_covy6JdmpjyeD6jGxMIm3jMuQFQRFmoU</token>

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>248527</attachid>
            <date>2014-11-09 14:58:00 -0500</date>
            <delta_ts>2014-11-09 14:58:54 -0500</delta_ts>
            <desc>Second version of the patches</desc>
            <filename>450398-v2.zip</filename>
            <type>text/plain</type>
            <size>164333</size>
            <attacher name="Antonio Garcia-Dominguez">nyoescape@gmail.com</attacher>
            
              <token>1457436901-3O_M6vM5ZOiGLrT7tgA4jZMc9QIAsZnVMi6WUfqMvm8</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>446183</bug_id>
          
          <creation_ts>2014-10-07 11:48:00 -0400</creation_ts>
          <short_desc>[epsilon] Exception encountered whilst trying to retrieve EPackage for nsUri: xcore.lang (err_grp: aaf7eb9a)</short_desc>
          <delta_ts>2014-12-08 19:26:10 -0500</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>0</everconfirmed>
          <reporter name="EPP Error Reports">error-reports-inbox@eclipse.org</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          <cc>cedric.brun@obeo.fr</cc>
    
    <cc>marcel.bruch@codetrails.com</cc>
          
          <votes>0</votes>

      
          <token>1457436901-BFFiVp0KjKRvV7zPbGKU-ToHJFXWHYEIJ86Ubc92mfQ</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2461072</commentid>
    <comment_count>0</comment_count>
    <who name="EPP Error Reports">error-reports-inbox@eclipse.org</who>
    <bug_when>2014-10-07 11:48:01 -0400</bug_when>
    <thetext>Hello committers,

we received a new error report for Eclipse 4.5.0.I20140918-0330.


General Information:
    anonymous-id:         7d9595af-1424-4430-bf8a-0c3339b8823e
    eclipse-build-id:     4.5.0.I20140918-0330
    eclipse-product:      org.eclipse.epp.package.modeling.product
    operating system:     MacOSX 10.9.4 (x86_64) - cocoa
    java-runtime-version: 1.8.0-b132

The following plug-ins were present on the execution stack (*):
    1. org.eclipse.core.jobs_3.6.100.v20140821-1523
    2. org.eclipse.core.runtime_3.10.0.v20140724-1132
    3. org.eclipse.emf.ecore_2.11.0.v20140916-0346
    4. org.eclipse.emf_2.6.0.v20140929-0830
    5. org.eclipse.emf.ecore.xmi_2.11.0.v20140916-0346
    6. org.eclipse.osgi_3.10.100.v20140909-1314
    7. org.eclipse.swt_3.104.0.v20140916-1012
    8. org.eclipse.ui_3.107.0.v20140911-1616


Error Status:

    code:                   0
    plugin:                 org.eclipse.epsilon.common.dt_1.2.0.201408251031
    message:                Exception encountered whilst trying to retrieve EPackage for nsUri: xcore.lang
    fingerprint:            aaf7eb9a
    exception class:        org.eclipse.emf.common.util.WrappedException
    exception message:      org.eclipse.emf.ecore.resource.impl.ResourceSetImpl$1DiagnosticWrappedException: org.xml.sax.SAXParseExceptionpublicId: platform:/plugin/org.eclipse.emf.ecore.xcore.lib/model/XcoreLang.xcore; systemId: platform:/plugin/org.eclipse.emf.ecore.xcore.lib/model/XcoreLang.xcore; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
    number of children:     0
    
    org.eclipse.emf.common.util.WrappedException: org.eclipse.emf.ecore.resource.impl.ResourceSetImpl$1DiagnosticWrappedException: org.xml.sax.SAXParseExceptionpublicId: platform:/plugin/org.eclipse.emf.ecore.xcore.lib/model/XcoreLang.xcore; systemId: platform:/plugin/org.eclipse.emf.ecore.xcore.lib/model/XcoreLang.xcore; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
    at org.eclipse.emf.ecore.plugin.RegistryReader$EPackageDescriptor$Dynamic.getEPackage(RegistryReader.java:257)
    at org.eclipse.emf.ecore.impl.EPackageRegistryImpl.getEPackage(EPackageRegistryImpl.java:127)
    at org.eclipse.epsilon.concordance.reporter.metamodel.EPackageRegistryCache.getEPackage(EPackageRegistryCache.java:121)
    at org.eclipse.epsilon.concordance.reporter.metamodel.EPackageRegistryCache.refreshCurrentRegistry(EPackageRegistryCache.java:114)
    at org.eclipse.epsilon.concordance.reporter.metamodel.EPackageRegistryCache.&lt;init&gt;(EPackageRegistryCache.java:37)
    at org.eclipse.epsilon.concordance.reporter.metamodel.MetamodelChangeReporter.&lt;init&gt;(MetamodelChangeReporter.java:25)
    at org.eclipse.epsilon.concordance.dt.ConcordancePlugin.&lt;init&gt;(ConcordancePlugin.java:28)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
    at java.lang.Class.newInstance(Class.java:433)
    at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
    at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
    at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:941)
    at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:318)
    at org.eclipse.osgi.container.Module.doStart(Module.java:571)
    at org.eclipse.osgi.container.Module.start(Module.java:439)
    at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
    at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
    at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
    at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
    at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
    at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:395)
    at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
    at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
    at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
    at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:573)
    at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
    at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
    at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
    at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
    at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:294)
    at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:52)
    at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:289)
    at org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension(EarlyStartupRunnable.java:119)
    at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:67)
    at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
    at org.eclipse.ui.internal.Workbench$56.run(Workbench.java:2756)
    at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
 caused by: org.eclipse.emf.ecore.resource.impl.ResourceSetImpl$1DiagnosticWrappedException: org.xml.sax.SAXParseExceptionpublicId: platform:/plugin/org.eclipse.emf.ecore.xcore.lib/model/XcoreLang.xcore; systemId: platform:/plugin/org.eclipse.emf.ecore.xcore.lib/model/XcoreLang.xcore; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
    at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.handleDemandLoadException(ResourceSetImpl.java:319)
    at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:278)
    at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:406)
    at org.eclipse.emf.ecore.plugin.RegistryReader$EPackageDescriptor$Dynamic.getEPackage(RegistryReader.java:247)
    at org.eclipse.emf.ecore.impl.EPackageRegistryImpl.getEPackage(EPackageRegistryImpl.java:127)
    at org.eclipse.epsilon.concordance.reporter.metamodel.EPackageRegistryCache.getEPackage(EPackageRegistryCache.java:121)
    at org.eclipse.epsilon.concordance.reporter.metamodel.EPackageRegistryCache.refreshCurrentRegistry(EPackageRegistryCache.java:114)
    at org.eclipse.epsilon.concordance.reporter.metamodel.EPackageRegistryCache.&lt;init&gt;(EPackageRegistryCache.java:37)
    at org.eclipse.epsilon.concordance.reporter.metamodel.MetamodelChangeReporter.&lt;init&gt;(MetamodelChangeReporter.java:25)
    at org.eclipse.epsilon.concordance.dt.ConcordancePlugin.&lt;init&gt;(ConcordancePlugin.java:28)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
    at java.lang.Class.newInstance(Class.java:433)
    at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
    at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
    at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:941)
    at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:318)
    at org.eclipse.osgi.container.Module.doStart(Module.java:571)
    at org.eclipse.osgi.container.Module.start(Module.java:439)
    at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
    at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
    at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
    at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
    at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
    at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:395)
    at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
    at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
    at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
    at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:573)
    at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
    at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
    at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
    at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
    at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:294)
    at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:52)
    at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:289)
    at org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension(EarlyStartupRunnable.java:119)
    at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:67)
    at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
    at org.eclipse.ui.internal.Workbench$56.run(Workbench.java:2756)
    at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
 caused by: HIDDEN: Content is not allowed in prolog.
    at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
    at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:441)
    at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
    at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1436)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:999)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
    at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
    at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
    at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)
    at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:333)
    at org.eclipse.emf.ecore.xmi.impl.XMLLoadImpl.load(XMLLoadImpl.java:175)
    at org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl.doLoad(XMLResourceImpl.java:261)
    at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1518)
    at org.eclipse.emf.ecore.resource.impl.ResourceImpl.load(ResourceImpl.java:1297)
    at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoad(ResourceSetImpl.java:259)
    at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.demandLoadHelper(ResourceSetImpl.java:274)
    at org.eclipse.emf.ecore.resource.impl.ResourceSetImpl.getResource(ResourceSetImpl.java:406)
    at org.eclipse.emf.ecore.plugin.RegistryReader$EPackageDescriptor$Dynamic.getEPackage(RegistryReader.java:247)
    at org.eclipse.emf.ecore.impl.EPackageRegistryImpl.getEPackage(EPackageRegistryImpl.java:127)
    at org.eclipse.epsilon.concordance.reporter.metamodel.EPackageRegistryCache.getEPackage(EPackageRegistryCache.java:121)
    at org.eclipse.epsilon.concordance.reporter.metamodel.EPackageRegistryCache.refreshCurrentRegistry(EPackageRegistryCache.java:114)
    at org.eclipse.epsilon.concordance.reporter.metamodel.EPackageRegistryCache.&lt;init&gt;(EPackageRegistryCache.java:37)
    at org.eclipse.epsilon.concordance.reporter.metamodel.MetamodelChangeReporter.&lt;init&gt;(MetamodelChangeReporter.java:25)
    at org.eclipse.epsilon.concordance.dt.ConcordancePlugin.&lt;init&gt;(ConcordancePlugin.java:28)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(NativeConstructorAccessorImpl.java:-2)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
    at java.lang.Class.newInstance(Class.java:433)
    at org.eclipse.osgi.internal.framework.BundleContextImpl.loadBundleActivator(BundleContextImpl.java:755)
    at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:706)
    at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:941)
    at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:318)
    at org.eclipse.osgi.container.Module.doStart(Module.java:571)
    at org.eclipse.osgi.container.Module.start(Module.java:439)
    at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:454)
    at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
    at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:531)
    at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:324)
    at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:320)
    at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:395)
    at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:345)
    at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:337)
    at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:160)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
    at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:573)
    at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
    at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
    at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
    at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
    at org.eclipse.ui.internal.WorkbenchPlugin$1.run(WorkbenchPlugin.java:294)
    at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:52)
    at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:289)
    at org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension(EarlyStartupRunnable.java:119)
    at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:67)
    at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
    at org.eclipse.ui.internal.Workbench$56.run(Workbench.java:2756)
    at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
   

    

Messages, stacktraces, and nested status objects may be shortened. Please visit 
http://dev.eclipse.org/recommenders/committers/confess/0.5/reports/54340b31e4b00f2b25241955
for the complete error log.


Some general information and guidelines about how to use this bug report:

1. Feel free to move this bug to your own product and components. Please note
   that this bug is only accessible to Eclipse committers. If you move this bug
   please make sure that it&apos;s still in the &quot;Security Advisor&quot; group.

2. The bug contents of the fields status, resolution, keywords, and whitelist
   are presented to reporters. If you needs more information, please set the
   keyword &quot;needinfo&quot;. This will trigger a specialized dialog asking the user
   to provide further details.

3. Use the following resolutions for the following situations:
   * CLOSED / FIXED: This bug has been fixed. Please provide additional
     information in the whiteboard field.
   * CLOSED / WORKSFORME: Use this resolution if you can&apos;t reproduce this issue
     and request further information. Please use the whiteboard text to specify
     more details what a user should provide and how.
   * CLOSED / INVALID: Use this resolution if the reported problem is a
     &apos;user-configuration&apos; problem. Please consider giving hints how to fix
     these issues in the whiteboard field.
   * CLOSED / NOT ECLIPSE: Use this if the problem is caused by another plugin
     not developed at Eclipse.org
   * CLOSED / MOVED: If this bug has been moved else where. Please provide more 
     information (e.g. a link) in the whiteboard field.

4. Please remember that only committers can view and comment on this bug. You
   may, however, manually add the reporting user to the bug&apos;s cc list. But keep
   in mind that the report may contains sensitive information.

5. If you are missing a feature, please file a enhancement request here:
   https://bugs.eclipse.org/bugs/enter_bug.cgi?product=Recommenders.Incubator&amp;component=Stacktraces
    
 

Thank you for your assistance.
Your friendly error-reports-inbox.


--
* Note: The list of present bundles and their respective versions was
  calculated by package naming heuristics. This may or may not reflect reality.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2462523</commentid>
    <comment_count>1</comment_count>
    <who name="EPP Error Reports">error-reports-inbox@eclipse.org</who>
    <bug_when>2014-10-09 15:32:31 -0400</bug_when>
    <thetext>To date this log entry was reported 10 times.

Your friendly error reports bot.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2465422</commentid>
    <comment_count>2</comment_count>
    <who name="EPP Error Reports">error-reports-inbox@eclipse.org</who>
    <bug_when>2014-10-15 07:56:31 -0400</bug_when>
    <thetext>To date this log entry was reported 25 times.

Your friendly error reports bot.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2467535</commentid>
    <comment_count>3</comment_count>
    <who name="Marcel Bruch">marcel.bruch@codetrails.com</who>
    <bug_when>2014-10-18 07:49:03 -0400</bug_when>
    <thetext>To date we received that error message 45 times. Maybe a candidate to look at?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2467615</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-10-18 20:27:39 -0400</bug_when>
    <thetext>I have downgraded the reporting level of this from &quot;error&quot; to &quot;info&quot; as such exceptions does not really impact the operation of Concordance (r2663). The fix will appear in the next interim version.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2467650</commentid>
    <comment_count>5</comment_count>
    <who name="Marcel Bruch">marcel.bruch@codetrails.com</who>
    <bug_when>2014-10-19 02:14:36 -0400</bug_when>
    <thetext>Thank you for fixing this. I&apos;ve added the information to the whiteboard to let new reporters know that there is a fix and that they should update.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2472837</commentid>
    <comment_count>6</comment_count>
    <who name="EPP Error Reports">error-reports-inbox@eclipse.org</who>
    <bug_when>2014-10-28 05:48:25 -0400</bug_when>
    <thetext>To date this log entry was reported 50 times.

Your friendly error reports bot.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2485736</commentid>
    <comment_count>7</comment_count>
    <who name="EPP Error Reports">error-reports-inbox@eclipse.org</who>
    <bug_when>2014-11-19 11:24:25 -0500</bug_when>
    <thetext>*** Bug 452311 has been marked as a duplicate of this bug. ***</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2494200</commentid>
    <comment_count>8</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-12-08 19:26:10 -0500</bug_when>
    <thetext>Fixed in the latest interim version.</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>400585</bug_id>
          
          <creation_ts>2013-02-12 09:59:00 -0500</creation_ts>
          <short_desc>[EUnit] Allow for ignoring whitespace while comparing models</short_desc>
          <delta_ts>2014-09-15 06:07:20 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>1.2</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Antonio Garcia-Dominguez">nyoescape@gmail.com</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">nyoescape@gmail.com</assigned_to>
          <cc>dkolovos@cs.york.ac.uk</cc>
          
          <votes>0</votes>

      
          <token>1457436901-OeyGenrlREZ4GHSXR6TbU1itlD6itD3YeDdSwIIn6Tg</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2215476</commentid>
    <comment_count>0</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2013-02-12 09:59:16 -0500</bug_when>
    <thetext>Our EuGENia regression tests broke a few months ago when GMF started adding a few spaces here and there to the code that was contained in several attributes, among other things.

As I didn&apos;t want to change the whole .gmfgen reference model just because of a few spaces, I&apos;ve extended the assertModelEquals / assertModelNotEquals assertions so they can accept an additional optional argument with a Map of options.

The EMF model comparator now implements this new version of the IModelComparator interface. When the &apos;whitespace&apos; option is set to &apos;ignore&apos;, it will ignore any attribute changes that are due to whitespace. Here are two examples:

assertEqualModels(&quot;modelA&quot;, &quot;modelB&quot;, Map { &quot;whitespace&quot; = &quot;ignore&quot; });
assertEqualModels(&quot;message&quot;, &quot;modelA&quot;, &quot;modelB&quot;, Map { &quot;whitespace&quot; = &quot;ignore&quot; });

This capability needs to be ported over to the new EMF model comparator we&apos;ve prepared for Kepler. I&apos;ll work on it now.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2215539</commentid>
    <comment_count>1</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2013-02-12 11:05:18 -0500</bug_when>
    <thetext>(In reply to comment #0)
&gt; This capability needs to be ported over to the new EMF model comparator
&gt; we&apos;ve prepared for Kepler. I&apos;ll work on it now.

I&apos;ve tried running the Eugenia regression tests against Kepler M5, but they won&apos;t even start due to some unresolved plugins. I think I&apos;ll wait for a RC.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2442937</commentid>
    <comment_count>2</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-08-25 06:00:40 -0400</bug_when>
    <thetext>This was fixed a long time ago (SVN r2289, July 2013), but I forgot about this bug report. Marking as fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451586</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-09-15 06:07:09 -0400</bug_when>
    <thetext>Fixed in the latest interim version</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>442466</bug_id>
          
          <creation_ts>2014-08-25 05:54:00 -0400</creation_ts>
          <short_desc>[EUnit] Ignore MOVE differences within unordered EReferences in assertEqualModels</short_desc>
          <delta_ts>2014-09-15 06:06:48 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Antonio Garcia-Dominguez">nyoescape@gmail.com</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">nyoescape@gmail.com</assigned_to>
          <cc>dkolovos@cs.york.ac.uk</cc>
          
          <votes>0</votes>

      
          <token>1457436901-NmlTzmt33guc53w-_nOYtAfPSiFERZ3pJCLmFVTtgBc</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2442934</commentid>
    <comment_count>0</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-08-25 05:54:47 -0400</bug_when>
    <thetext>Abdush Mohd opened a thread in the Epsilon forum regarding how to filter out certain unwanted differences in assertEqualModels:

https://www.eclipse.org/forums/index.php?t=rview&amp;goto=1409757

EUnit already ignores XMI IDs by default and supports the ignoreAttributeValueChanges to ignore changes within a certain attribute of a certain class, but it doesn&apos;t have anything for filtering out changes within references.

In particular, it seems that EMF Compare reports MOVE differences even within unordered EReferences. Most users (e.g. Abdush) would want these should be ignored by default.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2442936</commentid>
    <comment_count>1</comment_count>
      <attachid>246306</attachid>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-08-25 05:58:09 -0400</bug_when>
    <thetext>Created attachment 246306
Add support for ignoring MOVE diffs in unordered EReferences

I&apos;ve implemented the requested feature (see patch attached), but I can&apos;t commit it yet as we&apos;re currently releasing version 1.2.

We&apos;ll apply the patch and generate a new interim after 1.2 is out.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2448389</commentid>
    <comment_count>2</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-09-05 17:03:42 -0400</bug_when>
    <thetext>Patch applied in SVN r2643.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2448391</commentid>
    <comment_count>3</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-09-05 17:09:42 -0400</bug_when>
    <thetext>Tests are green after applying the fix. Marking as fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451585</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-09-15 06:06:48 -0400</bug_when>
    <thetext>Fixed in the latest interim version</thetext>
  </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>246306</attachid>
            <date>2014-08-25 05:58:00 -0400</date>
            <delta_ts>2014-08-25 05:58:09 -0400</delta_ts>
            <desc>Add support for ignoring MOVE diffs in unordered EReferences</desc>
            <filename>0001-Add-support-for-ignoring-moves-within-unordered-ERef.patch</filename>
            <type>text/plain</type>
            <size>5879</size>
            <attacher name="Antonio Garcia-Dominguez">nyoescape@gmail.com</attacher>
            
              <token>1457436901-j-1_6UnLDs8VAAWO9s2TE97AHKd87ZqtGAsSXMLC52M</token>

          </attachment>
      

    </bug>
    <bug>
          <bug_id>443616</bug_id>
          
          <creation_ts>2014-09-09 11:06:00 -0400</creation_ts>
          <short_desc>EGL/EOL run conf resolves paths incorrectly</short_desc>
          <delta_ts>2014-09-15 06:06:17 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>Macintosh</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="James Williams">jamesrobertwilliams@gmail.com</reporter>
          <assigned_to name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</assigned_to>
          
          
          <votes>0</votes>

      
          <token>1457436901-0pG96PNWABvIR3E5QAzyEPvo6kX8Zt243dnlIoWg_kg</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2449355</commentid>
    <comment_count>0</comment_count>
    <who name="James Williams">jamesrobertwilliams@gmail.com</who>
    <bug_when>2014-09-09 11:06:00 -0400</bug_when>
    <thetext>I have a project /myproject with an XML model in it: /myproject/myxml.xml

On disk this project is stored at /Users/me/workspace/foo/myproject, but my workspace directory is /Users/me/workspace. In an EGL run configuration, I&apos;ve added an XML model and pointed it at the path /myproject/myxml.xml using the popup dialog. When executing the configuration, Epsilon resolves the path of the file incorrectly which causes a FileNotFoundException to be thrown. Epsilon assumes that myproject is in the same directory as the workspace, and resolves the file path to be /Users/me/workspace/myproject/myxml.xml (note the missing &apos;foo&apos; folder).

I&apos;ve tried this with EOL and it has the same effect, so I assume this is an Epsilon-wide issue.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2449752</commentid>
    <comment_count>1</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-09-10 09:29:53 -0400</bug_when>
    <thetext>Yes - this is a known issue. As a workaround you can use the URI field of the model configuration dialog instead i.e. file:/Users/me/workspace/foo/myproject/myxml.xml</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451572</commentid>
    <comment_count>2</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-09-15 05:48:34 -0400</bug_when>
    <thetext>Fixed in the SVN (r2648)</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451584</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-09-15 06:06:17 -0400</bug_when>
    <thetext>Fixed in the latest interim version</thetext>
  </long_desc>
      
      

    </bug>
    <bug>
          <bug_id>441410</bug_id>
          
          <creation_ts>2014-08-08 05:42:00 -0400</creation_ts>
          <short_desc>EUnit ANT task fails in standalone mode</short_desc>
          <delta_ts>2014-09-15 05:43:14 -0400</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>11</classification_id>
          <classification>Modeling</classification>
          <product>Epsilon</product>
          <component>Core</component>
          <version>unspecified</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          <bug_file_loc></bug_file_loc>
          <status_whiteboard>interim</status_whiteboard>
          <keywords></keywords>
          <priority>P3</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</reporter>
          <assigned_to name="Antonio Garcia-Dominguez">nyoescape@gmail.com</assigned_to>
          <cc>nyoescape@gmail.com</cc>
    
    <cc>Sebastian.Zitzelsberger@maibornwolff.de</cc>
          
          <votes>0</votes>

      
          <token>1457436901-nnZx42pkX05YoNLJ1Ns9RztjsCEl8VcsOKtwvCQRIr8</token>

      

      

          <comment_sort_order>oldest_to_newest</comment_sort_order>  
          <long_desc isprivate="0" >
    <commentid>2436989</commentid>
    <comment_count>0</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-08-08 05:42:25 -0400</bug_when>
    <thetext>EunitTask has a hard dependency on org.eclipse.epsilon.common.dt.extensions.ClassBasedExtension which is not part of the standalone Epsilon JARs and as such fails when executed in standalone mode. See [1] for a more detailed discussion and a minimal example.

[1] https://www.eclipse.org/forums/index.php?t=rview&amp;goto=1405839#msg_1405839</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437022</commentid>
    <comment_count>1</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-08-08 07:28:35 -0400</bug_when>
    <thetext>This should be fixed in SVN r2630.

I&apos;ve modified EUnitTask so it accesses that class through reflection. If the class is not available at runtime, it will simply ignore the ClassNotFoundException.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437023</commentid>
    <comment_count>2</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-08-08 07:29:18 -0400</bug_when>
    <thetext>Oh, BTW: should we push out a new interim release for this?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437861</commentid>
    <comment_count>3</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-08-12 04:41:34 -0400</bug_when>
    <thetext>To minimise the use of reflection, would it make sense to move all Eclipse-specific extensions to the EclipseHost [1] class (we&apos;d probably also need to extend the Host interface - which is fine)? On a related note, by looking at EUnitTask, I&apos;ve noticed that it uses org.eclipse.core.runtime.Platform which is unlikely to exist in standalone mode (I suspect that the exception is handled elsewhere but thought that it may be a good opportunity to restructure this too).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2437862</commentid>
    <comment_count>4</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-08-12 04:42:02 -0400</bug_when>
    <thetext>[1] https://dev.eclipse.org/svnroot/modeling/org.eclipse.epsilon/trunk/plugins/org.eclipse.epsilon.workflow/ant/org/eclipse/epsilon/workflow/tasks/hosts/EclipseHost.java</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2438757</commentid>
    <comment_count>5</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-08-13 16:27:44 -0400</bug_when>
    <thetext>I&apos;ve committed in SVN r2632 a second version of the fix using the *Host classes. I had to add two methods to Host:

- addEUnitListeners, which is EUnit-specific
- setupContext(IEolContext context)

I&apos;m not sure if we should generalize the first one to getImplementations(Class) to make it more reusable in the future. As it is, it&apos;s pretty clear waht addEUnitListeners is for.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2438847</commentid>
    <comment_count>6</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-08-14 01:35:30 -0400</bug_when>
    <thetext>Great! If we need to add similar methods in the future, generalising would make a lot of sense.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2439645</commentid>
    <comment_count>7</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-08-16 10:44:08 -0400</bug_when>
    <thetext>After picking up the latest updates, most EUnit-related tests seem to be failing. Is there any chance that some updates have not made it to the SVN?</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2439652</commentid>
    <comment_count>8</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-08-16 14:19:25 -0400</bug_when>
    <thetext>Not that I know of. I&apos;ll have a look now and let you know. Sorry for the trouble!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2439663</commentid>
    <comment_count>9</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-08-16 16:28:22 -0400</bug_when>
    <thetext>I have fixed the unit tests in SVN r2633. Basically, I was calling EclipseContextManager through the EclipseHost, and that wasn&apos;t working properly in the regular JUnit test cases.

I&apos;ve improved the code so it doesn&apos;t use EclipseContextManager#setup: instead, it only uses Host#addNativeTypeDelegates.

Additionally, I have generalized the old addEUnitListeners(EUnitModule) method to getExtensionsOfType(Class): DefaultHost always returns an empty list, but EclipseHost returns a list of EUnitTestListeners if you pass the EUnitTestListener interface.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2439664</commentid>
    <comment_count>10</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-08-16 16:28:58 -0400</bug_when>
    <thetext>Marking once more as fixed.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2439691</commentid>
    <comment_count>11</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-08-17 04:02:13 -0400</bug_when>
    <thetext>Thanks for doing this. All EUnit tests are now passing once again!</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2440047</commentid>
    <comment_count>12</comment_count>
    <who name="Sebastian Zitzelsberger">Sebastian.Zitzelsberger@maibornwolff.de</who>
    <bug_when>2014-08-18 10:30:00 -0400</bug_when>
    <thetext>Thanks for fixing this.

Will these changes pushed to a new interim release then? Or do i have to create the jar from the sourcecode.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2440053</commentid>
    <comment_count>13</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-08-18 10:35:38 -0400</bug_when>
    <thetext>We&apos;ll be releasing a new stable version (1.2) that will include this fix within the next few days.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2444033</commentid>
    <comment_count>14</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-08-27 04:19:50 -0400</bug_when>
    <thetext>Fixed in version 1.2.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2447432</commentid>
    <comment_count>15</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-09-04 04:03:19 -0400</bug_when>
    <thetext>Below is the exception I&apos;m getting when trying to run the example provided in https://www.eclipse.org/forums/index.php/mv/msg/797082/1416040/#msg_1416040

[epsilon.eunit - load-models-implicitly.eunit] EXCEPTION: java.lang.NoClassDefFoundError: org/eclipse/epsilon/common/dt/extensions/IllegalExtensionException
[epsilon.eunit - load-models-implicitly.eunit] 	at java.lang.Class.getDeclaredMethods0(Native Method)
[epsilon.eunit - load-models-implicitly.eunit] 	at java.lang.Class.privateGetDeclaredMethods(Class.java:2484)
[epsilon.eunit - load-models-implicitly.eunit] 	at java.lang.Class.getDeclaredMethods(Class.java:1827)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.util.ReflectionUtil.getMethodNames(ReflectionUtil.java:53)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.operations.contributors.OperationContributor.getObjectMethodFor(OperationContributor.java:46)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.operations.contributors.OperationContributor.findContributedMethodForUnevaluatedParameters(OperationContributor.java:32)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.operations.contributors.OperationContributorRegistry.findContributedMethodForUnevaluatedParameters(OperationContributorRegistry.java:76)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.PointExecutor.executeOperation(PointExecutor.java:132)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.PointExecutor.execute(PointExecutor.java:86)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.ContextlessOperationExecutor.execute(ContextlessOperationExecutor.java:27)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.NameExecutor.execute(NameExecutor.java:37)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.NameExecutor.execute(NameExecutor.java:96)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.ExecutorFactory.executeAST(ExecutorFactory.java:205)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.ExecutorFactory.executeAST(ExecutorFactory.java:175)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.StatementBlockExecutor.execute(StatementBlockExecutor.java:26)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.execute.ExecutorFactory.executeAST(ExecutorFactory.java:205)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.EolOperation.executeBody(EolOperation.java:276)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eol.EolOperation.execute(EolOperation.java:248)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eunit.EUnitModule.runLeafTestCase(EUnitModule.java:413)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eunit.EUnitModule.runSuiteInternal(EUnitModule.java:341)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eunit.EUnitModule.runSuite(EUnitModule.java:165)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eunit.EUnitModule.runInnerTestCase(EUnitModule.java:368)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eunit.EUnitModule.runSuiteInternal(EUnitModule.java:343)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eunit.EUnitModule.runSuite(EUnitModule.java:165)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.eunit.EUnitModule.execute(EUnitModule.java:126)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.workflow.tasks.ExecutableModuleTask.executeImpl(ExecutableModuleTask.java:213)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.epsilon.workflow.tasks.EpsilonTask.execute(EpsilonTask.java:39)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)
[epsilon.eunit - load-models-implicitly.eunit] 	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
[epsilon.eunit - load-models-implicitly.eunit] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[epsilon.eunit - load-models-implicitly.eunit] 	at java.lang.reflect.Method.invoke(Method.java:597)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.apache.tools.ant.Task.perform(Task.java:348)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.apache.tools.ant.Target.execute(Target.java:435)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.apache.tools.ant.Target.performTasks(Target.java:456)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1393)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.apache.tools.ant.Project.executeTarget(Project.java:1364)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.ant.internal.launching.remote.EclipseDefaultExecutor.executeTargets(EclipseDefaultExecutor.java:36)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.apache.tools.ant.Project.executeTargets(Project.java:1248)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.ant.internal.launching.remote.InternalAntRunner.run(InternalAntRunner.java:452)
[epsilon.eunit - load-models-implicitly.eunit] 	at org.eclipse.ant.internal.launching.remote.InternalAntRunner.main(InternalAntRunner.java:139)
[epsilon.eunit - load-models-implicitly.eunit] Caused by: java.lang.ClassNotFoundException: org.eclipse.epsilon.common.dt.extensions.IllegalExtensionException
[epsilon.eunit - load-models-implicitly.eunit] 	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
[epsilon.eunit - load-models-implicitly.eunit] 	at java.security.AccessController.doPrivileged(Native Method)
[epsilon.eunit - load-models-implicitly.eunit] 	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
[epsilon.eunit - load-models-implicitly.eunit] 	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
[epsilon.eunit - load-models-implicitly.eunit] 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
[epsilon.eunit - load-models-implicitly.eunit] 	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
[epsilon.eunit - load-models-implicitly.eunit] 	... 42 more</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2448385</commentid>
    <comment_count>16</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-09-05 16:46:22 -0400</bug_when>
    <thetext>SVN r2641 removes several references to IllegalExtensionException and uses ClassBasedExtension through reflection now (as HostManager is not available in eunit.engine). Oops.

The example runs now fine on my machine, after I replace the included jars with fresh jars generated from the epsilon.standalone project.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2448403</commentid>
    <comment_count>17</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-09-05 17:59:24 -0400</bug_when>
    <thetext>I&apos;ve committed a small fix in SVN r2642 to a regression in SVN r2641. Sorry!

I&apos;ve also identified the cause for the unwanted differences that were mentioned in the forum thread. Details are in the forum thread.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451429</commentid>
    <comment_count>18</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-09-14 10:18:32 -0400</bug_when>
    <thetext>Dimitris, w.r.t. the unwanted differences: how about checking if the models to be compared use different EPackages before launching EMF Compare? If the models use different EPackage instances, we could throw an error telling this to the user.</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451434</commentid>
    <comment_count>19</comment_count>
    <who name="Antonio Garcia-Dominguez">nyoescape@gmail.com</who>
    <bug_when>2014-09-14 11:09:44 -0400</bug_when>
    <thetext>In SVN r2646 and r2647, I&apos;ve fixed the examples in SVN and in the book so they avoid using epsilon.emf.loadModel&apos;s &quot;metamodelfile&quot; attribute and mention why.

I think this is enough for now. Since the user reports that the new .jar works for him, I believe we can close this issue. Hopefully it won&apos;t have to be reopened again :-).</thetext>
  </long_desc><long_desc isprivate="0" >
    <commentid>2451571</commentid>
    <comment_count>20</comment_count>
    <who name="Dimitris Kolovos">dkolovos@cs.york.ac.uk</who>
    <bug_when>2014-09-15 05:43:14 -0400</bug_when>
    <thetext>Thanks for fixing this. I agree that this should suffice for now; we can investigate the solution proposed in #c18 if the confusion persists.</thetext>
  </long_desc>
      
      

    </bug>

</bugzilla>