= Manage the Epsilon web site locally =
This article provides a step-by-step guide for obtaining a local copy of the Epsilon website.

* Download and install [[http://portableapps.com/apps/development/xampp|XAMPP]]
* The folder where web-content is placed is `htdocs`
* Connect to the Eclipse CVS (using the CVS client of Eclipse)
 * host: `dev.eclipse.org`
 * repository: `/cvsroot/org.eclipse`
 * connection type: `extssh`
* Create a folder named `gmt` under `htdocs`
* Create a folder named `epsilon` under `gmt`
* Check out `www/gmt/epsilon` as a project located under the `gmt` folder you just created
 * Use check out as a project configured using the New Project Wizard
 * Check out as a general Project
 * Set the name to `epsilon` and the path to `htdocs/gmt/epsilon`
* Similarly, check out `www/eclipse.org-common` to `/htdocs/eclipse.org-common`
* Similarly, check out `www/gmt/news to` `/htdocs/gmt/news`
* Similarly, check out `www/images to` `/htdocs/images`
* Finally, check out `www/gmt/resources` to `/htdocs/gmt/resources`
* Start XAMPP and go to `http://localhost/gmt/epsilon`
* You are now ready to start playing with the Epsilon site locally
* Once you've happy with the changes you've made, go back to the epsilon project in Eclipse, refresh and then commit the changes to the CVS. The site should be updated within a few minutes.
 
== Using lighttpd instead of XAMPP ==
You can also use [[http://www.lighttpd.net/|lighttpd]] with PHP instead of XAMPP, following [[http://redmine.lighttpd.net/wiki/1/TutorialLighttpdAndPHP|this tutorial]] and pointing `server.document-root` to your `htdocs` directory, checked out as above. Alternatively, in most Debian-based GNU/Linux distributions, installing the `lighttpd` and `php5-cgi` packages and adapting this minimal configuration should be enough:

{{{
server.document-root = "/path/to/htdocs"
server.port          = 8080
index-file.names    += ( "index.html", "index.htm", "index.php" )

mimetype.assign = ( ".html" => "text/html", ".htm" => "text/html",
                    ".css" => "text/css",   ".txt" => "text/plain",
                    ".jpg" => "image/jpeg", ".png" => "image/png" )

server.modules += ( "mod_cgi" )
cgi.assign      = ( ".php" => "/path/to/php-cgi" )
}}}

== Finding broken links ==
`wget` and `grep` can be used to find broken links in the Epsilon website. First, we will traverse the website using `wget` with this command:

{{{
wget --spider -r --no-parent -o wget_errors.txt http://eclipse.org/gmt/epsilon/
}}}

We have used these options:
* `--spider` prevents wget from loading the full page and requisites
* `-r` makes wget traverse through links
* `--no-parent prevents `wget` from leaving `/gmt/epsilon/`
* `-o wget_errors.txt` collects all messages in the `wget_errors.txt` file

Once it's done, we can simply search for the word "404" in the log, with:
{{{
grep -B2 -w 404 wget_errors.txt
}}}

We will get a list of all the URLs which reported 404 (Not Found) HTTP error codes.