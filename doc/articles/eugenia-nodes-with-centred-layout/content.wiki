=EuGENia: Nodes with centred content =
This recipe shows how to create nodes in your GMF editor whose contents are centred both horizontally and vertically. The resulting editor will produce nodes like this:

[[image:Centred.png]]

We'll start with the following metamodel and EuGENia annotations:

{{{emf
@namespace(uri="www.eclipse.org/epsilon/examples/widgets", prefix="w")
package widgets;

@gmf.diagram(foo="bar")
class System {
   val Widget[*] widgets;
}

@gmf.node(label="name", label.icon="false")
class Widget {
   attr String[1] name;
}
}}}

We'll use a custom layout manager to achieve the centring. We need to add a polishing transformation to our project (described in more detail in [[../eugenia-polishing/|this article]]), which adds the custom layout to our widget figure. In a file named ECore2GMF.eol, place the following code: 

{{{eol
findShape('WidgetFigure').layout = createCentredLayout();

operation findShape(name : String) {
	return GmfGraph!Shape.all.selectOne(s|s.name = name);
}

operation createCentredLayout() : GmfGraph!CustomLayout {
	var layout = new GmfGraph!CustomLayout;
	layout.qualifiedClassName = 'widgets.custom.layouts.CentredLayout';
	return layout;
}
}}}

Notice that the layout specifies a qualified class name of `widgets.custom.layouts.CentredLayout`. We must create a class with that name, which implements the `LayoutManager` of draw2d.

To implement the centred layout, we'll use [[CentredLayout.java|this]] exemplar implementation of widgets.custom.layouts.CentredLayout, and place it in a `widgets.custom` plug-in project. We must add a dependency for the `widgets.custom` plugin project to the `widgets.diagram` project generated by GMF.

For more details, please check the `org.eclipse.epsilon.eugenia.examples.centred` example projects at the [[http://dev.eclipse.org/svnroot/modeling/org.eclipse.epsilon/trunk/examples/|Epsilon SVN repository]].
 