=EuGENia: Nodes with images instead of shapes=

This recipe shows how to create nodes in your GMF editor that are represented with images (png, jpg etc.) instead of the standard GMF shapes (rectangle, ellipse etc.). We'll use the simple `friends` metamodel as demonstration:

{{{
@namespace(uri="friends", prefix="")
package friends;

@gmf.diagram
class World {
    val Person[*] people;
}

@gmf.node(figure="figures.PersonFigure", label.icon="false", label="name", label.placement="external")
class Person {
    attr String name;
		
    @gmf.link(width="2", color="0,255,0", source.decoration="arrow",
			target.decoration="arrow", style="dash")
    ref Person[*] friendOf;
    
		@gmf.link(width="2", color="255,0,0", source.decoration="arrow", 
      target.decoration="arrow", style="dash")
    ref Person[*] enemyOf;
}
}}}

We define a custom figure for Person (`figure="figures.PersonFigure"`) and also specify that the label should be placed externally to the node (`label.placement="external"`). Once we have generated our diagram code we need to go and define the `figure.PersonFigure` class. An example of an png image-based implementation is available below:

{{{
package figures;

import org.eclipse.draw2d.ImageFigure;
import org.eclipse.epsilon.eugenia.examples.friends.figures.activator.PluginActivator;

/**
 * @generated
 */
public class PersonFigure extends ImageFigure {

    public PersonFigure() {
        super(PluginActivator.imageDescriptorFromPlugin(PluginActivator.ID,
                "images/Person.png").createImage(), 0);
    }

}
}}}

The result looks like this:

[[image:Friends.png]]