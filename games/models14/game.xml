<?xml version="1.0"?>
<game name="The MoDELS'14 Game" 
	metamodel="http://www.eclipse.org/epsilon/games/models14/conference.ecore" 
	model="http://www.eclipse.org/epsilon/games/models14/models14.model"
	emfatic="http://www.eclipse.org/epsilon/games/models14/conference.emf"
	emfatic1="http://localhost/epsilon/games/models14/conference.emf"
	version="2">
	
	<description>
	Use the Model Explorer to query the secret MoDELS'14 model with EOL, answer the questions on the right and discover interesting facts about the conference!
	</description>
	
	<level id="1">
		<description>
		Let's start with the basics.
		</description>
		<question>
		How many papers were accepted this year?
		</question>
		<hint>
// We'll give you this one
Paper.all.size().println();
		</hint>
		<solution>
// We'll give you this one
Paper.all.size().println();
		</solution>
		<answer>41</answer>
	</level>
	<level id="2">
		<description>
		Each paper has one or more authors.
		</description>
		<question>
		How many authors were involved, in total, in accepted papers?
		</question>
		<hint>
// Replace ? with something more meaningful
// and then click on the magnifying glass.
// The metamodel on the right should help.
?.all.size().println();
		</hint>
		<solution>
Author.all.size().println();		
		</solution>
		<answer>154</answer>
	</level>
	<level id="3">
		<description>The conference has 2 tracks: Foundations and Model-Driven Engineering in Practice (MEIP).</description>
		<question>How many papers were accepted in the MEIP track?</question>
		<hint>
var applicationsTrack = 
	Track.all.selectOne(t | t.name = "MEIP");

applicationsTrack.?.size().println();	
		</hint>
		<solution>
var applicationsTrack = 
	Track.all.selectOne(t | t.name = "MEIP");
	
applicationsTrack.papers.size().println();		
		</solution>
		<answer>9</answer>
	</level>
	<level id="4">
		<description>MoDELS'14 brings together MDE researchers from across the globe.</description>
		<question>How many different countries do authors come from?</question>
		<hint>
Author.all.collect(a|a.?).asSet().size().println();
		</hint>
		<solution>
Author.all.collect(a|a.country).asSet().size().println();				
		</solution>
		<answer>19</answer>
	</level>
	<level id="5">
		<description>Some papers need more than a couple of people to write.</description>
		<question>How many papers have 5 of more authors?</question>
		<hint>
Paper.all.select(p | p.?.size() >= ?).size().println();		
		</hint>
		<solution>
Paper.all.select(p | p.authors.size() >= 5).size().println();		
		</solution>
		<answer>12</answer>
	</level>
	<level id="6">
		<description>On the other end of the spectrum, there are also monographs.</description>
		<question>How many papers have only 1 author?</question>
		<hint>
Paper.?.select(p | p.?.?() == 1).size().println();
		</hint>
		<solution>
Paper.all.select(p | p.authors.size() == 1).size().println();
		</solution>		
		<answer>3</answer>
	</level>
	<level id="7">
		<description>MDE is clearly more popular in some countries.</description>
		<question>Which country had the most authors of accepted papers?</question>
		<hint>
var countries = Author.all.collect(a | a.?).asSet();
countries.sortBy(c| -getAuthorsFrom(?)).first().println();

operation getAuthorsFrom(country : String) {
	return Author.?.select(a|a.country = ?);
}
		</hint>
		<solution>
var countries = Author.all.collect(a | a.country).asSet();
countries.sortBy(c| -getAuthorsFrom(c)).first().println();

operation getAuthorsFrom(country : String) {
	return Author.all.select(a|a.country = country);
}
		</solution>
		<answer>Germany</answer>
	</level>
	<level id="8">
		<description>Finally, let's talk about our hosts.</description>
		<question>How many accepted papers have at least one author from Spain?</question>
		<hint>
Paper.?.select(p|p.hasAuthorFrom("Spain"))
	.size().println();

operation Paper hasAuthorFrom(country : String) {
  return self.?.exists(a | a.? = ?);
}
		</hint>
		<solution>
Paper.all.select(p|p.hasAuthorFrom("Spain"))
	.size().println();

operation Paper hasAuthorFrom(country : String) {
  return self.authors.exists(a | a.country = country);
}
		</solution>
		<answer>1</answer>
	</level>
</game>